<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2158" onload="init(evt)" viewBox="0 0 1200 2158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >FlameGraph_6_512m_1_foward 1_none</text>
<text id="subtitle" x="600.00" y="48" >Count:6_ChainSize:512m_Thread:1_Access:foward 1_Prefetch:none</text>
<text id="details" x="10.00" y="2141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2141" > </text>
<g id="frames">
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1053" width="38.2" height="15.0" fill="rgb(239,202,25)" rx="2" ry="2" />
<text  x="628.90" y="1063.5" >std..</text>
</g>
<g >
<title>node::InternalMakeCallback (207,767 samples, 0.48%)</title><rect x="582.0" y="1853" width="5.7" height="15.0" fill="rgb(235,128,18)" rx="2" ry="2" />
<text  x="584.95" y="1863.5" ></text>
</g>
<g >
<title>uv__stream_io (207,767 samples, 0.48%)</title><rect x="582.0" y="1965" width="5.7" height="15.0" fill="rgb(237,143,31)" rx="2" ry="2" />
<text  x="584.95" y="1975.5" ></text>
</g>
<g >
<title>__libc_start_call_main (17,255,223 samples, 40.25%)</title><rect x="76.2" y="2077" width="475.0" height="15.0" fill="rgb(231,45,40)" rx="2" ry="2" />
<text  x="79.24" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>do_poll.constprop.0 (154,367 samples, 0.36%)</title><rect x="833.8" y="1933" width="4.2" height="15.0" fill="rgb(243,218,10)" rx="2" ry="2" />
<text  x="836.79" y="1943.5" ></text>
</g>
<g >
<title>update_load_avg (254,977 samples, 0.59%)</title><rect x="777.5" y="1837" width="7.0" height="15.0" fill="rgb(213,84,3)" rx="2" ry="2" />
<text  x="780.50" y="1847.5" ></text>
</g>
<g >
<title>perf_ioctl (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1933" width="34.3" height="15.0" fill="rgb(227,42,21)" rx="2" ry="2" />
<text  x="694.95" y="1943.5" >pe..</text>
</g>
<g >
<title>dbs_update_util_handler (88,546 samples, 0.21%)</title><rect x="782.1" y="1821" width="2.4" height="15.0" fill="rgb(209,149,2)" rx="2" ry="2" />
<text  x="785.08" y="1831.5" ></text>
</g>
<g >
<title>unmap_vmas (389,385 samples, 0.91%)</title><rect x="676.3" y="1853" width="10.7" height="15.0" fill="rgb(234,6,4)" rx="2" ry="2" />
<text  x="679.31" y="1863.5" ></text>
</g>
<g >
<title>alloc_pages (283,173 samples, 0.66%)</title><rect x="866.4" y="1741" width="7.8" height="15.0" fill="rgb(250,25,16)" rx="2" ry="2" />
<text  x="869.39" y="1751.5" ></text>
</g>
<g >
<title>perf_mmap__consume (277,801 samples, 0.65%)</title><rect x="843.7" y="1981" width="7.7" height="15.0" fill="rgb(223,186,50)" rx="2" ry="2" />
<text  x="846.72" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="781" width="38.2" height="15.0" fill="rgb(222,50,1)" rx="2" ry="2" />
<text  x="628.90" y="791.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1021" width="38.2" height="15.0" fill="rgb(225,103,24)" rx="2" ry="2" />
<text  x="628.90" y="1031.5" >std..</text>
</g>
<g >
<title>start_kernel (207,897 samples, 0.48%)</title><rect x="1184.3" y="2029" width="5.7" height="15.0" fill="rgb(232,149,48)" rx="2" ry="2" />
<text  x="1187.28" y="2039.5" ></text>
</g>
<g >
<title>main (17,255,223 samples, 40.25%)</title><rect x="76.2" y="2061" width="475.0" height="15.0" fill="rgb(244,95,38)" rx="2" ry="2" />
<text  x="79.24" y="2071.5" >main</text>
</g>
<g >
<title>handle_mm_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1917" width="7.7" height="15.0" fill="rgb(251,135,1)" rx="2" ry="2" />
<text  x="846.72" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1293" width="38.2" height="15.0" fill="rgb(254,185,3)" rx="2" ry="2" />
<text  x="628.90" y="1303.5" >std..</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (3,807,987 samples, 8.88%)</title><rect x="729.0" y="1949" width="104.8" height="15.0" fill="rgb(254,35,51)" rx="2" ry="2" />
<text  x="731.98" y="1959.5" >__x64_sys_sc..</text>
</g>
<g >
<title>update_load_avg (86,435 samples, 0.20%)</title><rect x="794.0" y="1853" width="2.4" height="15.0" fill="rgb(236,225,24)" rx="2" ry="2" />
<text  x="797.03" y="1863.5" ></text>
</g>
<g >
<title>search_binary_handler (179,101 samples, 0.42%)</title><rect x="687.0" y="1869" width="5.0" height="15.0" fill="rgb(213,105,18)" rx="2" ry="2" />
<text  x="690.02" y="1879.5" ></text>
</g>
<g >
<title>Timer::calibrate (17,255,223 samples, 40.25%)</title><rect x="76.2" y="2045" width="475.0" height="15.0" fill="rgb(242,150,40)" rx="2" ry="2" />
<text  x="79.24" y="2055.5" >Timer::calibrate</text>
</g>
<g >
<title>vfs_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1885" width="7.8" height="15.0" fill="rgb(246,57,29)" rx="2" ry="2" />
<text  x="869.39" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1693" width="38.2" height="15.0" fill="rgb(222,164,28)" rx="2" ry="2" />
<text  x="628.90" y="1703.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1549" width="38.2" height="15.0" fill="rgb(247,64,11)" rx="2" ry="2" />
<text  x="628.90" y="1559.5" >std..</text>
</g>
<g >
<title>__x64_sys_execve (832,051 samples, 1.94%)</title><rect x="664.1" y="2029" width="22.9" height="15.0" fill="rgb(219,197,8)" rx="2" ry="2" />
<text  x="667.12" y="2039.5" >_..</text>
</g>
<g >
<title>do_wp_page (277,801 samples, 0.65%)</title><rect x="843.7" y="1869" width="7.7" height="15.0" fill="rgb(214,55,40)" rx="2" ry="2" />
<text  x="846.72" y="1879.5" ></text>
</g>
<g >
<title>enqueue_task_fair (172,585 samples, 0.40%)</title><rect x="817.6" y="1885" width="4.8" height="15.0" fill="rgb(205,70,8)" rx="2" ry="2" />
<text  x="820.62" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="189" width="38.2" height="15.0" fill="rgb(206,121,50)" rx="2" ry="2" />
<text  x="628.90" y="199.5" >std..</text>
</g>
<g >
<title>smp_call_function_single (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1853" width="34.3" height="15.0" fill="rgb(242,45,25)" rx="2" ry="2" />
<text  x="694.95" y="1863.5" >sm..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="765" width="38.2" height="15.0" fill="rgb(239,166,27)" rx="2" ry="2" />
<text  x="628.90" y="775.5" >std..</text>
</g>
<g >
<title>unmap_page_range (389,385 samples, 0.91%)</title><rect x="676.3" y="1821" width="10.7" height="15.0" fill="rgb(235,209,19)" rx="2" ry="2" />
<text  x="679.31" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="525" width="38.2" height="15.0" fill="rgb(213,208,24)" rx="2" ry="2" />
<text  x="628.90" y="535.5" >std..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (207,897 samples, 0.48%)</title><rect x="1184.3" y="1901" width="5.7" height="15.0" fill="rgb(226,30,22)" rx="2" ry="2" />
<text  x="1187.28" y="1911.5" ></text>
</g>
<g >
<title>put_prev_task_balance (511,275 samples, 1.19%)</title><rect x="567.9" y="1981" width="14.1" height="15.0" fill="rgb(221,187,43)" rx="2" ry="2" />
<text  x="570.88" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="637" width="38.2" height="15.0" fill="rgb(254,7,7)" rx="2" ry="2" />
<text  x="628.90" y="647.5" >std..</text>
</g>
<g >
<title>evlist__prepare_workload (179,101 samples, 0.42%)</title><rect x="687.0" y="2013" width="5.0" height="15.0" fill="rgb(212,78,50)" rx="2" ry="2" />
<text  x="690.02" y="2023.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (832,051 samples, 1.94%)</title><rect x="664.1" y="1981" width="22.9" height="15.0" fill="rgb(234,130,36)" rx="2" ry="2" />
<text  x="667.12" y="1991.5" >b..</text>
</g>
<g >
<title>search_binary_handler (832,051 samples, 1.94%)</title><rect x="664.1" y="1949" width="22.9" height="15.0" fill="rgb(213,138,30)" rx="2" ry="2" />
<text  x="667.12" y="1959.5" >s..</text>
</g>
<g >
<title>perf_mmap__read_head (545,829 samples, 1.27%)</title><rect x="851.4" y="1981" width="15.0" height="15.0" fill="rgb(241,167,50)" rx="2" ry="2" />
<text  x="854.37" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1357" width="38.2" height="15.0" fill="rgb(218,128,51)" rx="2" ry="2" />
<text  x="628.90" y="1367.5" >std..</text>
</g>
<g >
<title>smpboot_thread_fn (133,502 samples, 0.31%)</title><rect x="564.2" y="2045" width="3.7" height="15.0" fill="rgb(230,17,1)" rx="2" ry="2" />
<text  x="567.21" y="2055.5" ></text>
</g>
<g >
<title>check_match (258,680 samples, 0.60%)</title><rect x="62.2" y="2061" width="7.1" height="15.0" fill="rgb(236,63,12)" rx="2" ry="2" />
<text  x="65.17" y="2071.5" ></text>
</g>
<g >
<title>__poll (154,367 samples, 0.36%)</title><rect x="833.8" y="2013" width="4.2" height="15.0" fill="rgb(232,131,26)" rx="2" ry="2" />
<text  x="836.79" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1805" width="38.2" height="15.0" fill="rgb(229,165,19)" rx="2" ry="2" />
<text  x="628.90" y="1815.5" >std..</text>
</g>
<g >
<title>generic_exec_single (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1837" width="34.3" height="15.0" fill="rgb(244,32,45)" rx="2" ry="2" />
<text  x="694.95" y="1847.5" >ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1453" width="38.2" height="15.0" fill="rgb(245,191,20)" rx="2" ry="2" />
<text  x="628.90" y="1463.5" >std..</text>
</g>
<g >
<title>rest_init (207,897 samples, 0.48%)</title><rect x="1184.3" y="1997" width="5.7" height="15.0" fill="rgb(239,183,54)" rx="2" ry="2" />
<text  x="1187.28" y="2007.5" ></text>
</g>
<g >
<title>node::SpinEventLoop (207,767 samples, 0.48%)</title><rect x="582.0" y="2013" width="5.7" height="15.0" fill="rgb(221,208,10)" rx="2" ry="2" />
<text  x="584.95" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="589" width="38.2" height="15.0" fill="rgb(231,4,4)" rx="2" ry="2" />
<text  x="628.90" y="599.5" >std..</text>
</g>
<g >
<title>malloc (1,388,816 samples, 3.24%)</title><rect x="587.7" y="2077" width="38.2" height="15.0" fill="rgb(208,13,16)" rx="2" ry="2" />
<text  x="590.67" y="2087.5" >mal..</text>
</g>
<g >
<title>do_idle (11,266,381 samples, 26.28%)</title><rect x="874.2" y="2029" width="310.1" height="15.0" fill="rgb(251,200,5)" rx="2" ry="2" />
<text  x="877.18" y="2039.5" >do_idle</text>
</g>
<g >
<title>__softirqentry_text_start (227,734 samples, 0.53%)</title><rect x="885.7" y="1917" width="6.2" height="15.0" fill="rgb(240,144,50)" rx="2" ry="2" />
<text  x="888.65" y="1927.5" ></text>
</g>
<g >
<title>irq_exit_rcu (208,926 samples, 0.49%)</title><rect x="879.9" y="1933" width="5.8" height="15.0" fill="rgb(238,7,17)" rx="2" ry="2" />
<text  x="882.90" y="1943.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (207,767 samples, 0.48%)</title><rect x="582.0" y="1805" width="5.7" height="15.0" fill="rgb(218,71,44)" rx="2" ry="2" />
<text  x="584.95" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="557" width="38.2" height="15.0" fill="rgb(225,177,19)" rx="2" ry="2" />
<text  x="628.90" y="567.5" >std..</text>
</g>
<g >
<title>[perf-273006.map] (207,767 samples, 0.48%)</title><rect x="582.0" y="1757" width="5.7" height="15.0" fill="rgb(228,63,47)" rx="2" ry="2" />
<text  x="584.95" y="1767.5" ></text>
</g>
<g >
<title>sync_regs (281,328 samples, 0.66%)</title><rect x="858.6" y="1965" width="7.8" height="15.0" fill="rgb(243,94,48)" rx="2" ry="2" />
<text  x="861.65" y="1975.5" ></text>
</g>
<g >
<title>ret_from_fork (133,502 samples, 0.31%)</title><rect x="564.2" y="2077" width="3.7" height="15.0" fill="rgb(207,104,53)" rx="2" ry="2" />
<text  x="567.21" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="221" width="38.2" height="15.0" fill="rgb(214,50,16)" rx="2" ry="2" />
<text  x="628.90" y="231.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1197" width="38.2" height="15.0" fill="rgb(241,89,24)" rx="2" ry="2" />
<text  x="628.90" y="1207.5" >std..</text>
</g>
<g >
<title>ext4_file_write_iter (283,173 samples, 0.66%)</title><rect x="866.4" y="1853" width="7.8" height="15.0" fill="rgb(214,61,23)" rx="2" ry="2" />
<text  x="869.39" y="1863.5" ></text>
</g>
<g >
<title>dequeue_entity (844,101 samples, 1.97%)</title><rect x="761.3" y="1853" width="23.2" height="15.0" fill="rgb(238,25,34)" rx="2" ry="2" />
<text  x="764.28" y="1863.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (283,173 samples, 0.66%)</title><rect x="866.4" y="1933" width="7.8" height="15.0" fill="rgb(247,63,47)" rx="2" ry="2" />
<text  x="869.39" y="1943.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (3,658,158 samples, 8.53%)</title><rect x="731.1" y="1901" width="100.6" height="15.0" fill="rgb(208,11,46)" rx="2" ry="2" />
<text  x="734.06" y="1911.5" >__set_cpus_a..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1917" width="38.2" height="15.0" fill="rgb(226,56,19)" rx="2" ry="2" />
<text  x="628.90" y="1927.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1325" width="38.2" height="15.0" fill="rgb(247,6,26)" rx="2" ry="2" />
<text  x="628.90" y="1335.5" >std..</text>
</g>
<g >
<title>__evlist__enable.constprop.0 (5,153,254 samples, 12.02%)</title><rect x="692.0" y="2013" width="141.8" height="15.0" fill="rgb(235,37,16)" rx="2" ry="2" />
<text  x="694.95" y="2023.5" >__evlist__enable.c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="2029" width="38.2" height="15.0" fill="rgb(220,142,37)" rx="2" ry="2" />
<text  x="628.90" y="2039.5" >std..</text>
</g>
<g >
<title>exec_binprm (179,101 samples, 0.42%)</title><rect x="687.0" y="1885" width="5.0" height="15.0" fill="rgb(219,44,16)" rx="2" ry="2" />
<text  x="690.02" y="1895.5" ></text>
</g>
<g >
<title>free_pgtables (215,452 samples, 0.50%)</title><rect x="664.1" y="1853" width="6.0" height="15.0" fill="rgb(248,191,32)" rx="2" ry="2" />
<text  x="667.12" y="1863.5" ></text>
</g>
<g >
<title>cmd_record (6,620,828 samples, 15.44%)</title><rect x="692.0" y="2029" width="182.2" height="15.0" fill="rgb(219,82,17)" rx="2" ry="2" />
<text  x="694.95" y="2039.5" >cmd_record</text>
</g>
<g >
<title>new_sync_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1869" width="7.8" height="15.0" fill="rgb(215,220,10)" rx="2" ry="2" />
<text  x="869.39" y="1879.5" ></text>
</g>
<g >
<title>schedule (511,275 samples, 1.19%)</title><rect x="567.9" y="2029" width="14.1" height="15.0" fill="rgb(224,63,39)" rx="2" ry="2" />
<text  x="570.88" y="2039.5" ></text>
</g>
<g >
<title>update_curr (84,003 samples, 0.20%)</title><rect x="775.2" y="1837" width="2.3" height="15.0" fill="rgb(212,34,34)" rx="2" ry="2" />
<text  x="778.19" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1101" width="38.2" height="15.0" fill="rgb(230,2,26)" rx="2" ry="2" />
<text  x="628.90" y="1111.5" >std..</text>
</g>
<g >
<title>do_lookup_x (236,569 samples, 0.55%)</title><rect x="557.7" y="2077" width="6.5" height="15.0" fill="rgb(207,116,13)" rx="2" ry="2" />
<text  x="560.69" y="2087.5" ></text>
</g>
<g >
<title>__GI___execve (832,051 samples, 1.94%)</title><rect x="664.1" y="2077" width="22.9" height="15.0" fill="rgb(232,217,53)" rx="2" ry="2" />
<text  x="667.12" y="2087.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (206,404 samples, 0.48%)</title><rect x="838.0" y="1981" width="5.7" height="15.0" fill="rgb(233,84,26)" rx="2" ry="2" />
<text  x="841.04" y="1991.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (227,734 samples, 0.53%)</title><rect x="885.7" y="1949" width="6.2" height="15.0" fill="rgb(242,14,13)" rx="2" ry="2" />
<text  x="888.65" y="1959.5" ></text>
</g>
<g >
<title>exec_binprm (832,051 samples, 1.94%)</title><rect x="664.1" y="1965" width="22.9" height="15.0" fill="rgb(229,117,53)" rx="2" ry="2" />
<text  x="667.12" y="1975.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1469" width="38.2" height="15.0" fill="rgb(213,131,14)" rx="2" ry="2" />
<text  x="628.90" y="1479.5" >std..</text>
</g>
<g >
<title>cpumask_weight (172,493 samples, 0.40%)</title><rect x="740.4" y="1869" width="4.7" height="15.0" fill="rgb(213,110,43)" rx="2" ry="2" />
<text  x="743.38" y="1879.5" ></text>
</g>
<g >
<title>__libc_start_call_main (179,101 samples, 0.42%)</title><rect x="687.0" y="2077" width="5.0" height="15.0" fill="rgb(214,148,12)" rx="2" ry="2" />
<text  x="690.02" y="2087.5" ></text>
</g>
<g >
<title>node::Start (207,767 samples, 0.48%)</title><rect x="582.0" y="2061" width="5.7" height="15.0" fill="rgb(216,211,17)" rx="2" ry="2" />
<text  x="584.95" y="2071.5" ></text>
</g>
<g >
<title>__x64_sys_poll (154,367 samples, 0.36%)</title><rect x="833.8" y="1965" width="4.2" height="15.0" fill="rgb(215,130,37)" rx="2" ry="2" />
<text  x="836.79" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1613" width="38.2" height="15.0" fill="rgb(240,85,14)" rx="2" ry="2" />
<text  x="628.90" y="1623.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="397" width="38.2" height="15.0" fill="rgb(247,173,15)" rx="2" ry="2" />
<text  x="628.90" y="407.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="957" width="38.2" height="15.0" fill="rgb(218,10,31)" rx="2" ry="2" />
<text  x="628.90" y="967.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1901" width="38.2" height="15.0" fill="rgb(211,157,27)" rx="2" ry="2" />
<text  x="628.90" y="1911.5" >std..</text>
</g>
<g >
<title>__x64_sys_close (206,404 samples, 0.48%)</title><rect x="838.0" y="1949" width="5.7" height="15.0" fill="rgb(244,37,2)" rx="2" ry="2" />
<text  x="841.04" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="461" width="38.2" height="15.0" fill="rgb(218,89,49)" rx="2" ry="2" />
<text  x="628.90" y="471.5" >std..</text>
</g>
<g >
<title>x86_pmu_enable (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1757" width="34.3" height="15.0" fill="rgb(249,152,6)" rx="2" ry="2" />
<text  x="694.95" y="1767.5" >x8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="573" width="38.2" height="15.0" fill="rgb(225,195,53)" rx="2" ry="2" />
<text  x="628.90" y="583.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="429" width="38.2" height="15.0" fill="rgb(223,189,16)" rx="2" ry="2" />
<text  x="628.90" y="439.5" >std..</text>
</g>
<g >
<title>main (6,620,828 samples, 15.44%)</title><rect x="692.0" y="2061" width="182.2" height="15.0" fill="rgb(224,137,35)" rx="2" ry="2" />
<text  x="694.95" y="2071.5" >main</text>
</g>
<g >
<title>[unknown] (2,142,695 samples, 5.00%)</title><rect x="17.3" y="2077" width="58.9" height="15.0" fill="rgb(243,80,16)" rx="2" ry="2" />
<text  x="20.26" y="2087.5" >[unkno..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="541" width="38.2" height="15.0" fill="rgb(251,50,5)" rx="2" ry="2" />
<text  x="628.90" y="551.5" >std..</text>
</g>
<g >
<title>error_entry (510,339 samples, 1.19%)</title><rect x="17.3" y="2045" width="14.0" height="15.0" fill="rgb(231,223,10)" rx="2" ry="2" />
<text  x="20.26" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="77" width="38.2" height="15.0" fill="rgb(210,133,19)" rx="2" ry="2" />
<text  x="628.90" y="87.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="701" width="38.2" height="15.0" fill="rgb(223,125,49)" rx="2" ry="2" />
<text  x="628.90" y="711.5" >std..</text>
</g>
<g >
<title>exit_mmap (832,051 samples, 1.94%)</title><rect x="664.1" y="1869" width="22.9" height="15.0" fill="rgb(241,6,31)" rx="2" ry="2" />
<text  x="667.12" y="1879.5" >e..</text>
</g>
<g >
<title>ext4_da_write_begin (283,173 samples, 0.66%)</title><rect x="866.4" y="1805" width="7.8" height="15.0" fill="rgb(234,32,15)" rx="2" ry="2" />
<text  x="869.39" y="1815.5" ></text>
</g>
<g >
<title>uv__read (207,767 samples, 0.48%)</title><rect x="582.0" y="1949" width="5.7" height="15.0" fill="rgb(245,143,50)" rx="2" ry="2" />
<text  x="584.95" y="1959.5" ></text>
</g>
<g >
<title>do_syscall_64 (832,051 samples, 1.94%)</title><rect x="664.1" y="2045" width="22.9" height="15.0" fill="rgb(254,150,20)" rx="2" ry="2" />
<text  x="667.12" y="2055.5" >d..</text>
</g>
<g >
<title>begin_new_exec (832,051 samples, 1.94%)</title><rect x="664.1" y="1917" width="22.9" height="15.0" fill="rgb(234,114,14)" rx="2" ry="2" />
<text  x="667.12" y="1927.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1533" width="38.2" height="15.0" fill="rgb(206,165,52)" rx="2" ry="2" />
<text  x="628.90" y="1543.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1261" width="38.2" height="15.0" fill="rgb(249,151,31)" rx="2" ry="2" />
<text  x="628.90" y="1271.5" >std..</text>
</g>
<g >
<title>ksys_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1901" width="7.8" height="15.0" fill="rgb(220,122,40)" rx="2" ry="2" />
<text  x="869.39" y="1911.5" ></text>
</g>
<g >
<title>find_busiest_group (511,275 samples, 1.19%)</title><rect x="567.9" y="1917" width="14.1" height="15.0" fill="rgb(215,101,51)" rx="2" ry="2" />
<text  x="570.88" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="109" width="38.2" height="15.0" fill="rgb(228,151,22)" rx="2" ry="2" />
<text  x="628.90" y="119.5" >std..</text>
</g>
<g >
<title>__hrtimer_start_range_ns (209,806 samples, 0.49%)</title><rect x="1178.5" y="1965" width="5.8" height="15.0" fill="rgb(234,111,5)" rx="2" ry="2" />
<text  x="1181.50" y="1975.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (207,767 samples, 0.48%)</title><rect x="582.0" y="2045" width="5.7" height="15.0" fill="rgb(253,223,46)" rx="2" ry="2" />
<text  x="584.95" y="2055.5" ></text>
</g>
<g >
<title>pagecache_get_page (283,173 samples, 0.66%)</title><rect x="866.4" y="1773" width="7.8" height="15.0" fill="rgb(216,55,5)" rx="2" ry="2" />
<text  x="869.39" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1437" width="38.2" height="15.0" fill="rgb(211,217,18)" rx="2" ry="2" />
<text  x="628.90" y="1447.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="317" width="38.2" height="15.0" fill="rgb(250,83,40)" rx="2" ry="2" />
<text  x="628.90" y="327.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1245" width="38.2" height="15.0" fill="rgb(250,67,35)" rx="2" ry="2" />
<text  x="628.90" y="1255.5" >std..</text>
</g>
<g >
<title>__update_load_avg_se (166,431 samples, 0.39%)</title><rect x="777.5" y="1821" width="4.6" height="15.0" fill="rgb(225,188,39)" rx="2" ry="2" />
<text  x="780.50" y="1831.5" ></text>
</g>
<g >
<title>get_page_from_freelist (283,173 samples, 0.66%)</title><rect x="866.4" y="1709" width="7.8" height="15.0" fill="rgb(227,143,37)" rx="2" ry="2" />
<text  x="869.39" y="1719.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (207,767 samples, 0.48%)</title><rect x="582.0" y="1773" width="5.7" height="15.0" fill="rgb(237,3,32)" rx="2" ry="2" />
<text  x="584.95" y="1783.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (207,767 samples, 0.48%)</title><rect x="582.0" y="1901" width="5.7" height="15.0" fill="rgb(225,78,12)" rx="2" ry="2" />
<text  x="584.95" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1645" width="38.2" height="15.0" fill="rgb(232,83,22)" rx="2" ry="2" />
<text  x="628.90" y="1655.5" >std..</text>
</g>
<g >
<title>__calc_delta (82,697 samples, 0.19%)</title><rect x="765.9" y="1837" width="2.3" height="15.0" fill="rgb(226,35,0)" rx="2" ry="2" />
<text  x="768.93" y="1847.5" ></text>
</g>
<g >
<title>tasklet_action (208,926 samples, 0.49%)</title><rect x="879.9" y="1901" width="5.8" height="15.0" fill="rgb(250,149,37)" rx="2" ry="2" />
<text  x="882.90" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="925" width="38.2" height="15.0" fill="rgb(239,156,5)" rx="2" ry="2" />
<text  x="628.90" y="935.5" >std..</text>
</g>
<g >
<title>x86_64_start_kernel (207,897 samples, 0.48%)</title><rect x="1184.3" y="2061" width="5.7" height="15.0" fill="rgb(222,35,42)" rx="2" ry="2" />
<text  x="1187.28" y="2071.5" ></text>
</g>
<g >
<title>__GI___ioctl (1,345,267 samples, 3.14%)</title><rect x="692.0" y="1997" width="37.0" height="15.0" fill="rgb(247,48,4)" rx="2" ry="2" />
<text  x="694.95" y="2007.5" >__G..</text>
</g>
<g >
<title>balance_fair (511,275 samples, 1.19%)</title><rect x="567.9" y="1965" width="14.1" height="15.0" fill="rgb(221,54,32)" rx="2" ry="2" />
<text  x="570.88" y="1975.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (208,926 samples, 0.49%)</title><rect x="879.9" y="1885" width="5.8" height="15.0" fill="rgb(221,80,33)" rx="2" ry="2" />
<text  x="882.90" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1757" width="38.2" height="15.0" fill="rgb(213,151,40)" rx="2" ry="2" />
<text  x="628.90" y="1767.5" >std..</text>
</g>
<g >
<title>native_write_msr (1,218,979 samples, 2.84%)</title><rect x="692.7" y="1725" width="33.6" height="15.0" fill="rgb(243,170,33)" rx="2" ry="2" />
<text  x="695.74" y="1735.5" >na..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1213" width="38.2" height="15.0" fill="rgb(236,181,4)" rx="2" ry="2" />
<text  x="628.90" y="1223.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1517" width="38.2" height="15.0" fill="rgb(236,115,54)" rx="2" ry="2" />
<text  x="628.90" y="1527.5" >std..</text>
</g>
<g >
<title>__GI___libc_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1965" width="7.8" height="15.0" fill="rgb(242,56,34)" rx="2" ry="2" />
<text  x="869.39" y="1975.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (11,056,575 samples, 25.79%)</title><rect x="874.2" y="1981" width="304.3" height="15.0" fill="rgb(208,181,18)" rx="2" ry="2" />
<text  x="877.18" y="1991.5" >cpuidle_enter_state</text>
</g>
<g >
<title>load_elf_binary (179,101 samples, 0.42%)</title><rect x="687.0" y="1853" width="5.0" height="15.0" fill="rgb(220,110,53)" rx="2" ry="2" />
<text  x="690.02" y="1863.5" ></text>
</g>
<g >
<title>mmput (832,051 samples, 1.94%)</title><rect x="664.1" y="1885" width="22.9" height="15.0" fill="rgb(211,127,27)" rx="2" ry="2" />
<text  x="667.12" y="1895.5" >m..</text>
</g>
<g >
<title>handle_pte_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1885" width="7.7" height="15.0" fill="rgb(254,197,19)" rx="2" ry="2" />
<text  x="846.72" y="1895.5" ></text>
</g>
<g >
<title>do_syscall_64 (154,367 samples, 0.36%)</title><rect x="833.8" y="1981" width="4.2" height="15.0" fill="rgb(246,62,33)" rx="2" ry="2" />
<text  x="836.79" y="1991.5" ></text>
</g>
<g >
<title>do_lookup_x (252,507 samples, 0.59%)</title><rect x="69.3" y="2061" width="6.9" height="15.0" fill="rgb(239,224,34)" rx="2" ry="2" />
<text  x="72.29" y="2071.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (179,101 samples, 0.42%)</title><rect x="687.0" y="1901" width="5.0" height="15.0" fill="rgb(235,191,10)" rx="2" ry="2" />
<text  x="690.02" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="477" width="38.2" height="15.0" fill="rgb(249,139,4)" rx="2" ry="2" />
<text  x="628.90" y="487.5" >std..</text>
</g>
<g >
<title>kmem_cache_alloc (263,909 samples, 0.62%)</title><rect x="10.0" y="1933" width="7.3" height="15.0" fill="rgb(215,11,24)" rx="2" ry="2" />
<text  x="13.00" y="1943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (154,367 samples, 0.36%)</title><rect x="833.8" y="1997" width="4.2" height="15.0" fill="rgb(217,173,50)" rx="2" ry="2" />
<text  x="836.79" y="2007.5" ></text>
</g>
<g >
<title>__kmalloc_node (74,163 samples, 0.17%)</title><rect x="831.7" y="1869" width="2.1" height="15.0" fill="rgb(219,221,45)" rx="2" ry="2" />
<text  x="834.75" y="1879.5" ></text>
</g>
<g >
<title>__handle_mm_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="1997" width="7.3" height="15.0" fill="rgb(246,128,48)" rx="2" ry="2" />
<text  x="13.00" y="2007.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (207,897 samples, 0.48%)</title><rect x="1184.3" y="1949" width="5.7" height="15.0" fill="rgb(240,156,7)" rx="2" ry="2" />
<text  x="1187.28" y="1959.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (179,101 samples, 0.42%)</title><rect x="687.0" y="1933" width="5.0" height="15.0" fill="rgb(230,143,35)" rx="2" ry="2" />
<text  x="690.02" y="1943.5" ></text>
</g>
<g >
<title>_raw_spin_lock (277,801 samples, 0.65%)</title><rect x="843.7" y="1853" width="7.7" height="15.0" fill="rgb(208,120,38)" rx="2" ry="2" />
<text  x="846.72" y="1863.5" ></text>
</g>
<g >
<title>_start (237,046 samples, 0.55%)</title><rect x="551.2" y="2077" width="6.5" height="15.0" fill="rgb(230,17,48)" rx="2" ry="2" />
<text  x="554.17" y="2087.5" ></text>
</g>
<g >
<title>_perf_ioctl (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1917" width="34.3" height="15.0" fill="rgb(248,141,14)" rx="2" ry="2" />
<text  x="694.95" y="1927.5" >_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1837" width="38.2" height="15.0" fill="rgb(221,78,29)" rx="2" ry="2" />
<text  x="628.90" y="1847.5" >std..</text>
</g>
<g >
<title>migration/3 (133,502 samples, 0.31%)</title><rect x="564.2" y="2093" width="3.7" height="15.0" fill="rgb(253,169,25)" rx="2" ry="2" />
<text  x="567.21" y="2103.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (895,961 samples, 2.09%)</title><rect x="37.5" y="2061" width="24.7" height="15.0" fill="rgb(246,155,28)" rx="2" ry="2" />
<text  x="40.51" y="2071.5" >_..</text>
</g>
<g >
<title>__x64_sys_execve (179,101 samples, 0.42%)</title><rect x="687.0" y="1949" width="5.0" height="15.0" fill="rgb(251,187,13)" rx="2" ry="2" />
<text  x="690.02" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1869" width="38.2" height="15.0" fill="rgb(215,48,46)" rx="2" ry="2" />
<text  x="628.90" y="1879.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="813" width="38.2" height="15.0" fill="rgb(210,61,48)" rx="2" ry="2" />
<text  x="628.90" y="823.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="973" width="38.2" height="15.0" fill="rgb(231,115,44)" rx="2" ry="2" />
<text  x="628.90" y="983.5" >std..</text>
</g>
<g >
<title>update_cfs_group (172,060 samples, 0.40%)</title><rect x="784.5" y="1853" width="4.8" height="15.0" fill="rgb(241,72,23)" rx="2" ry="2" />
<text  x="787.52" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="2077" width="38.2" height="15.0" fill="rgb(244,47,48)" rx="2" ry="2" />
<text  x="628.90" y="2087.5" >std..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (207,767 samples, 0.48%)</title><rect x="582.0" y="1917" width="5.7" height="15.0" fill="rgb(225,83,37)" rx="2" ry="2" />
<text  x="584.95" y="1927.5" ></text>
</g>
<g >
<title>_dl_relocate_object (895,961 samples, 2.09%)</title><rect x="37.5" y="2029" width="24.7" height="15.0" fill="rgb(222,142,2)" rx="2" ry="2" />
<text  x="40.51" y="2039.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="733" width="38.2" height="15.0" fill="rgb(208,182,12)" rx="2" ry="2" />
<text  x="628.90" y="743.5" >std..</text>
</g>
<g >
<title>unmap_single_vma (389,385 samples, 0.91%)</title><rect x="676.3" y="1837" width="10.7" height="15.0" fill="rgb(244,118,28)" rx="2" ry="2" />
<text  x="679.31" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="269" width="38.2" height="15.0" fill="rgb(240,151,20)" rx="2" ry="2" />
<text  x="628.90" y="279.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1997" width="38.2" height="15.0" fill="rgb(216,209,11)" rx="2" ry="2" />
<text  x="628.90" y="2007.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1229" width="38.2" height="15.0" fill="rgb(217,95,40)" rx="2" ry="2" />
<text  x="628.90" y="1239.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="237" width="38.2" height="15.0" fill="rgb(210,90,26)" rx="2" ry="2" />
<text  x="628.90" y="247.5" >std..</text>
</g>
<g >
<title>exec_mmap (179,101 samples, 0.42%)</title><rect x="687.0" y="1821" width="5.0" height="15.0" fill="rgb(245,65,32)" rx="2" ry="2" />
<text  x="690.02" y="1831.5" ></text>
</g>
<g >
<title>usb_anchor_suspend_wakeups (208,926 samples, 0.49%)</title><rect x="879.9" y="1853" width="5.8" height="15.0" fill="rgb(216,201,9)" rx="2" ry="2" />
<text  x="882.90" y="1863.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,807,987 samples, 8.88%)</title><rect x="729.0" y="1965" width="104.8" height="15.0" fill="rgb(213,142,23)" rx="2" ry="2" />
<text  x="731.98" y="1975.5" >do_syscall_64</text>
</g>
<g >
<title>ext4_buffered_write_iter (283,173 samples, 0.66%)</title><rect x="866.4" y="1837" width="7.8" height="15.0" fill="rgb(238,126,40)" rx="2" ry="2" />
<text  x="869.39" y="1847.5" ></text>
</g>
<g >
<title>__close (206,404 samples, 0.48%)</title><rect x="838.0" y="1997" width="5.7" height="15.0" fill="rgb(212,224,14)" rx="2" ry="2" />
<text  x="841.04" y="2007.5" ></text>
</g>
<g >
<title>dequeue_task_fair (1,603,057 samples, 3.74%)</title><rect x="745.1" y="1869" width="44.2" height="15.0" fill="rgb(253,21,22)" rx="2" ry="2" />
<text  x="748.13" y="1879.5" >dequ..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (283,173 samples, 0.66%)</title><rect x="866.4" y="1949" width="7.8" height="15.0" fill="rgb(247,229,12)" rx="2" ry="2" />
<text  x="869.39" y="1959.5" ></text>
</g>
<g >
<title>tick_nohz_restart (209,806 samples, 0.49%)</title><rect x="1178.5" y="1997" width="5.8" height="15.0" fill="rgb(233,47,8)" rx="2" ry="2" />
<text  x="1181.50" y="2007.5" ></text>
</g>
<g >
<title>set_cpus_allowed_common (171,385 samples, 0.40%)</title><rect x="812.9" y="1869" width="4.7" height="15.0" fill="rgb(253,199,46)" rx="2" ry="2" />
<text  x="815.91" y="1879.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,345,267 samples, 3.14%)</title><rect x="692.0" y="1965" width="37.0" height="15.0" fill="rgb(245,160,8)" rx="2" ry="2" />
<text  x="694.95" y="1975.5" >do_..</text>
</g>
<g >
<title>perf-exec (1,011,152 samples, 2.36%)</title><rect x="664.1" y="2093" width="27.9" height="15.0" fill="rgb(223,199,47)" rx="2" ry="2" />
<text  x="667.12" y="2103.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="829" width="38.2" height="15.0" fill="rgb(235,97,31)" rx="2" ry="2" />
<text  x="628.90" y="839.5" >std..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1,218,979 samples, 2.84%)</title><rect x="692.7" y="1741" width="33.6" height="15.0" fill="rgb(214,74,3)" rx="2" ry="2" />
<text  x="695.74" y="1751.5" >in..</text>
</g>
<g >
<title>mutex_unlock (154,367 samples, 0.36%)</title><rect x="833.8" y="1917" width="4.2" height="15.0" fill="rgb(228,228,37)" rx="2" ry="2" />
<text  x="836.79" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="877" width="38.2" height="15.0" fill="rgb(223,184,6)" rx="2" ry="2" />
<text  x="628.90" y="887.5" >std..</text>
</g>
<g >
<title>run_rebalance_domains (227,734 samples, 0.53%)</title><rect x="885.7" y="1901" width="6.2" height="15.0" fill="rgb(209,133,18)" rx="2" ry="2" />
<text  x="888.65" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1661" width="38.2" height="15.0" fill="rgb(218,185,26)" rx="2" ry="2" />
<text  x="628.90" y="1671.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="333" width="38.2" height="15.0" fill="rgb(213,129,29)" rx="2" ry="2" />
<text  x="628.90" y="343.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1677" width="38.2" height="15.0" fill="rgb(250,66,20)" rx="2" ry="2" />
<text  x="628.90" y="1687.5" >std..</text>
</g>
<g >
<title>__irq_work_queue_local (88,546 samples, 0.21%)</title><rect x="782.1" y="1789" width="2.4" height="15.0" fill="rgb(224,202,29)" rx="2" ry="2" />
<text  x="785.08" y="1799.5" ></text>
</g>
<g >
<title>kthread (133,502 samples, 0.31%)</title><rect x="564.2" y="2061" width="3.7" height="15.0" fill="rgb(215,148,31)" rx="2" ry="2" />
<text  x="567.21" y="2071.5" ></text>
</g>
<g >
<title>start_secondary (11,266,381 samples, 26.28%)</title><rect x="874.2" y="2061" width="310.1" height="15.0" fill="rgb(236,64,29)" rx="2" ry="2" />
<text  x="877.18" y="2071.5" >start_secondary</text>
</g>
<g >
<title>put_prev_task_fair (340,653 samples, 0.79%)</title><rect x="822.4" y="1885" width="9.3" height="15.0" fill="rgb(211,20,24)" rx="2" ry="2" />
<text  x="825.37" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="2061" width="38.2" height="15.0" fill="rgb(218,96,30)" rx="2" ry="2" />
<text  x="628.90" y="2071.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="941" width="38.2" height="15.0" fill="rgb(241,188,34)" rx="2" ry="2" />
<text  x="628.90" y="951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1773" width="38.2" height="15.0" fill="rgb(221,104,34)" rx="2" ry="2" />
<text  x="628.90" y="1783.5" >std..</text>
</g>
<g >
<title>rebalance_domains (227,734 samples, 0.53%)</title><rect x="885.7" y="1885" width="6.2" height="15.0" fill="rgb(228,184,52)" rx="2" ry="2" />
<text  x="888.65" y="1895.5" ></text>
</g>
<g >
<title>__x64_sys_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1917" width="7.8" height="15.0" fill="rgb(218,7,33)" rx="2" ry="2" />
<text  x="869.39" y="1927.5" ></text>
</g>
<g >
<title>pick_next_task (511,275 samples, 1.19%)</title><rect x="567.9" y="1997" width="14.1" height="15.0" fill="rgb(241,159,0)" rx="2" ry="2" />
<text  x="570.88" y="2007.5" ></text>
</g>
<g >
<title>error_return (264,501 samples, 0.62%)</title><rect x="851.4" y="1965" width="7.2" height="15.0" fill="rgb(237,56,5)" rx="2" ry="2" />
<text  x="854.37" y="1975.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (97,632 samples, 0.23%)</title><rect x="726.3" y="1949" width="2.7" height="15.0" fill="rgb(254,68,35)" rx="2" ry="2" />
<text  x="729.29" y="1959.5" ></text>
</g>
<g >
<title>generic_perform_write (283,173 samples, 0.66%)</title><rect x="866.4" y="1821" width="7.8" height="15.0" fill="rgb(208,92,52)" rx="2" ry="2" />
<text  x="869.39" y="1831.5" ></text>
</g>
<g >
<title>newidle_balance (511,275 samples, 1.19%)</title><rect x="567.9" y="1949" width="14.1" height="15.0" fill="rgb(223,79,35)" rx="2" ry="2" />
<text  x="570.88" y="1959.5" ></text>
</g>
<g >
<title>zap_pte_range (187,653 samples, 0.44%)</title><rect x="681.9" y="1789" width="5.1" height="15.0" fill="rgb(244,110,23)" rx="2" ry="2" />
<text  x="684.86" y="1799.5" ></text>
</g>
<g >
<title>update_cfs_group (253,514 samples, 0.59%)</title><rect x="768.2" y="1837" width="7.0" height="15.0" fill="rgb(233,127,53)" rx="2" ry="2" />
<text  x="771.21" y="1847.5" ></text>
</g>
<g >
<title>ctx_resched (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1773" width="34.3" height="15.0" fill="rgb(210,53,22)" rx="2" ry="2" />
<text  x="694.95" y="1783.5" >ct..</text>
</g>
<g >
<title>exec_mmap (832,051 samples, 1.94%)</title><rect x="664.1" y="1901" width="22.9" height="15.0" fill="rgb(214,175,15)" rx="2" ry="2" />
<text  x="667.12" y="1911.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="365" width="38.2" height="15.0" fill="rgb(231,183,47)" rx="2" ry="2" />
<text  x="628.90" y="375.5" >std..</text>
</g>
<g >
<title>cpuidle_enter (11,056,575 samples, 25.79%)</title><rect x="874.2" y="1997" width="304.3" height="15.0" fill="rgb(229,167,9)" rx="2" ry="2" />
<text  x="877.18" y="2007.5" >cpuidle_enter</text>
</g>
<g >
<title>__sched_setaffinity (3,732,321 samples, 8.71%)</title><rect x="731.1" y="1917" width="102.7" height="15.0" fill="rgb(211,1,21)" rx="2" ry="2" />
<text  x="734.06" y="1927.5" >__sched_seta..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (511,275 samples, 1.19%)</title><rect x="567.9" y="1901" width="14.1" height="15.0" fill="rgb(213,66,13)" rx="2" ry="2" />
<text  x="570.88" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1709" width="38.2" height="15.0" fill="rgb(217,33,47)" rx="2" ry="2" />
<text  x="628.90" y="1719.5" >std..</text>
</g>
<g >
<title>asm_common_interrupt (208,926 samples, 0.49%)</title><rect x="879.9" y="1965" width="5.8" height="15.0" fill="rgb(240,121,35)" rx="2" ry="2" />
<text  x="882.90" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1741" width="38.2" height="15.0" fill="rgb(237,198,51)" rx="2" ry="2" />
<text  x="628.90" y="1751.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="381" width="38.2" height="15.0" fill="rgb(245,21,13)" rx="2" ry="2" />
<text  x="628.90" y="391.5" >std..</text>
</g>
<g >
<title>mod_objcg_state (263,909 samples, 0.62%)</title><rect x="10.0" y="1901" width="7.3" height="15.0" fill="rgb(234,100,17)" rx="2" ry="2" />
<text  x="13.00" y="1911.5" ></text>
</g>
<g >
<title>do_sys_poll (154,367 samples, 0.36%)</title><rect x="833.8" y="1949" width="4.2" height="15.0" fill="rgb(217,207,26)" rx="2" ry="2" />
<text  x="836.79" y="1959.5" ></text>
</g>
<g >
<title>put_prev_entity (86,755 samples, 0.20%)</title><rect x="810.5" y="1853" width="2.4" height="15.0" fill="rgb(248,18,9)" rx="2" ry="2" />
<text  x="813.52" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1341" width="38.2" height="15.0" fill="rgb(250,137,0)" rx="2" ry="2" />
<text  x="628.90" y="1351.5" >std..</text>
</g>
<g >
<title>smpboot_thread_fn (511,275 samples, 1.19%)</title><rect x="567.9" y="2045" width="14.1" height="15.0" fill="rgb(222,95,4)" rx="2" ry="2" />
<text  x="570.88" y="2055.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1949" width="34.3" height="15.0" fill="rgb(244,139,41)" rx="2" ry="2" />
<text  x="694.95" y="1959.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1421" width="38.2" height="15.0" fill="rgb(239,9,17)" rx="2" ry="2" />
<text  x="628.90" y="1431.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="125" width="38.2" height="15.0" fill="rgb(231,63,8)" rx="2" ry="2" />
<text  x="628.90" y="135.5" >std..</text>
</g>
<g >
<title>cpu_startup_entry (207,897 samples, 0.48%)</title><rect x="1184.3" y="1981" width="5.7" height="15.0" fill="rgb(233,1,31)" rx="2" ry="2" />
<text  x="1187.28" y="1991.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (263,909 samples, 0.62%)</title><rect x="10.0" y="1917" width="7.3" height="15.0" fill="rgb(233,191,37)" rx="2" ry="2" />
<text  x="13.00" y="1927.5" ></text>
</g>
<g >
<title>__bitmap_weight (171,385 samples, 0.40%)</title><rect x="812.9" y="1853" width="4.7" height="15.0" fill="rgb(224,139,15)" rx="2" ry="2" />
<text  x="815.91" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1069" width="38.2" height="15.0" fill="rgb(215,72,37)" rx="2" ry="2" />
<text  x="628.90" y="1079.5" >std..</text>
</g>
<g >
<title>perf (6,620,828 samples, 15.44%)</title><rect x="692.0" y="2093" width="182.2" height="15.0" fill="rgb(237,26,12)" rx="2" ry="2" />
<text  x="694.95" y="2103.5" >perf</text>
</g>
<g >
<title>unlink_file_vma (215,452 samples, 0.50%)</title><rect x="664.1" y="1837" width="6.0" height="15.0" fill="rgb(248,214,2)" rx="2" ry="2" />
<text  x="667.12" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="989" width="38.2" height="15.0" fill="rgb(219,19,12)" rx="2" ry="2" />
<text  x="628.90" y="999.5" >std..</text>
</g>
<g >
<title>perf_event__synthesize_comm (206,404 samples, 0.48%)</title><rect x="838.0" y="2013" width="5.7" height="15.0" fill="rgb(218,205,3)" rx="2" ry="2" />
<text  x="841.04" y="2023.5" ></text>
</g>
<g >
<title>irq_work_queue (88,546 samples, 0.21%)</title><rect x="782.1" y="1805" width="2.4" height="15.0" fill="rgb(254,199,16)" rx="2" ry="2" />
<text  x="785.08" y="1815.5" ></text>
</g>
<g >
<title>v8::Function::Call (207,767 samples, 0.48%)</title><rect x="582.0" y="1837" width="5.7" height="15.0" fill="rgb(215,37,54)" rx="2" ry="2" />
<text  x="584.95" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="173" width="38.2" height="15.0" fill="rgb(219,177,49)" rx="2" ry="2" />
<text  x="628.90" y="183.5" >std..</text>
</g>
<g >
<title>sched_setaffinity (3,732,321 samples, 8.71%)</title><rect x="731.1" y="1933" width="102.7" height="15.0" fill="rgb(228,56,17)" rx="2" ry="2" />
<text  x="734.06" y="1943.5" >sched_setaff..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1149" width="38.2" height="15.0" fill="rgb(210,85,0)" rx="2" ry="2" />
<text  x="628.90" y="1159.5" >std..</text>
</g>
<g >
<title>__alloc_pages (283,173 samples, 0.66%)</title><rect x="866.4" y="1725" width="7.8" height="15.0" fill="rgb(218,13,54)" rx="2" ry="2" />
<text  x="869.39" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="797" width="38.2" height="15.0" fill="rgb(242,179,35)" rx="2" ry="2" />
<text  x="628.90" y="807.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1853" width="38.2" height="15.0" fill="rgb(212,145,16)" rx="2" ry="2" />
<text  x="628.90" y="1863.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="445" width="38.2" height="15.0" fill="rgb(244,59,39)" rx="2" ry="2" />
<text  x="628.90" y="455.5" >std..</text>
</g>
<g >
<title>asm_exc_page_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1965" width="7.7" height="15.0" fill="rgb(247,182,22)" rx="2" ry="2" />
<text  x="846.72" y="1975.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (208,926 samples, 0.49%)</title><rect x="879.9" y="1869" width="5.8" height="15.0" fill="rgb(247,153,20)" rx="2" ry="2" />
<text  x="882.90" y="1879.5" ></text>
</g>
<g >
<title>[perf-273006.map] (207,767 samples, 0.48%)</title><rect x="582.0" y="1741" width="5.7" height="15.0" fill="rgb(222,220,5)" rx="2" ry="2" />
<text  x="584.95" y="1751.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (10,412,148 samples, 24.29%)</title><rect x="891.9" y="1965" width="286.6" height="15.0" fill="rgb(247,125,16)" rx="2" ry="2" />
<text  x="894.92" y="1975.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>perf_event_for_each_child (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1901" width="34.3" height="15.0" fill="rgb(245,125,45)" rx="2" ry="2" />
<text  x="694.95" y="1911.5" >pe..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (263,909 samples, 0.62%)</title><rect x="10.0" y="2077" width="7.3" height="15.0" fill="rgb(223,37,16)" rx="2" ry="2" />
<text  x="13.00" y="2087.5" ></text>
</g>
<g >
<title>__libc_start_call_main (207,767 samples, 0.48%)</title><rect x="582.0" y="2077" width="5.7" height="15.0" fill="rgb(241,164,27)" rx="2" ry="2" />
<text  x="584.95" y="2087.5" ></text>
</g>
<g >
<title>do_anonymous_page (263,909 samples, 0.62%)</title><rect x="10.0" y="1965" width="7.3" height="15.0" fill="rgb(227,217,51)" rx="2" ry="2" />
<text  x="13.00" y="1975.5" ></text>
</g>
<g >
<title>__slab_free (227,214 samples, 0.53%)</title><rect x="670.1" y="1805" width="6.2" height="15.0" fill="rgb(234,124,34)" rx="2" ry="2" />
<text  x="673.05" y="1815.5" ></text>
</g>
<g >
<title>remote_function (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1821" width="34.3" height="15.0" fill="rgb(239,84,31)" rx="2" ry="2" />
<text  x="694.95" y="1831.5" >re..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1485" width="38.2" height="15.0" fill="rgb(219,204,42)" rx="2" ry="2" />
<text  x="628.90" y="1495.5" >std..</text>
</g>
<g >
<title>update_sg_lb_stats (511,275 samples, 1.19%)</title><rect x="567.9" y="1885" width="14.1" height="15.0" fill="rgb(232,213,9)" rx="2" ry="2" />
<text  x="570.88" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1277" width="38.2" height="15.0" fill="rgb(249,84,47)" rx="2" ry="2" />
<text  x="628.90" y="1287.5" >std..</text>
</g>
<g >
<title>do_user_addr_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1933" width="7.7" height="15.0" fill="rgb(253,180,9)" rx="2" ry="2" />
<text  x="846.72" y="1943.5" ></text>
</g>
<g >
<title>cmd_record (179,101 samples, 0.42%)</title><rect x="687.0" y="2029" width="5.0" height="15.0" fill="rgb(213,46,19)" rx="2" ry="2" />
<text  x="690.02" y="2039.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,106,803 samples, 2.58%)</title><rect x="843.7" y="1997" width="30.5" height="15.0" fill="rgb(215,208,18)" rx="2" ry="2" />
<text  x="846.72" y="2007.5" >pe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="861" width="38.2" height="15.0" fill="rgb(225,62,16)" rx="2" ry="2" />
<text  x="628.90" y="871.5" >std..</text>
</g>
<g >
<title>v8::internal::Execution::Call (207,767 samples, 0.48%)</title><rect x="582.0" y="1821" width="5.7" height="15.0" fill="rgb(205,85,54)" rx="2" ry="2" />
<text  x="584.95" y="1831.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,345,267 samples, 3.14%)</title><rect x="692.0" y="1981" width="37.0" height="15.0" fill="rgb(233,179,37)" rx="2" ry="2" />
<text  x="694.95" y="1991.5" >ent..</text>
</g>
<g >
<title>_raw_spin_lock (206,404 samples, 0.48%)</title><rect x="838.0" y="1917" width="5.7" height="15.0" fill="rgb(221,112,43)" rx="2" ry="2" />
<text  x="841.04" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1165" width="38.2" height="15.0" fill="rgb(227,226,46)" rx="2" ry="2" />
<text  x="628.90" y="1175.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="493" width="38.2" height="15.0" fill="rgb(251,208,16)" rx="2" ry="2" />
<text  x="628.90" y="503.5" >std..</text>
</g>
<g >
<title>x86_64_start_reservations (207,897 samples, 0.48%)</title><rect x="1184.3" y="2045" width="5.7" height="15.0" fill="rgb(208,19,49)" rx="2" ry="2" />
<text  x="1187.28" y="2055.5" ></text>
</g>
<g >
<title>native_x2apic_wait_icr_idle (88,546 samples, 0.21%)</title><rect x="782.1" y="1773" width="2.4" height="15.0" fill="rgb(215,102,47)" rx="2" ry="2" />
<text  x="785.08" y="1783.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (209,806 samples, 0.49%)</title><rect x="1178.5" y="2013" width="5.8" height="15.0" fill="rgb(208,19,22)" rx="2" ry="2" />
<text  x="1181.50" y="2023.5" ></text>
</g>
<g >
<title>begin_new_exec (179,101 samples, 0.42%)</title><rect x="687.0" y="1837" width="5.0" height="15.0" fill="rgb(253,140,23)" rx="2" ry="2" />
<text  x="690.02" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="413" width="38.2" height="15.0" fill="rgb(221,59,1)" rx="2" ry="2" />
<text  x="628.90" y="423.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="685" width="38.2" height="15.0" fill="rgb(218,56,35)" rx="2" ry="2" />
<text  x="628.90" y="695.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1885" width="38.2" height="15.0" fill="rgb(244,184,31)" rx="2" ry="2" />
<text  x="628.90" y="1895.5" >std..</text>
</g>
<g >
<title>uv_run (207,767 samples, 0.48%)</title><rect x="582.0" y="1997" width="5.7" height="15.0" fill="rgb(252,93,18)" rx="2" ry="2" />
<text  x="584.95" y="2007.5" ></text>
</g>
<g >
<title>timerqueue_add (209,806 samples, 0.49%)</title><rect x="1178.5" y="1933" width="5.8" height="15.0" fill="rgb(250,68,31)" rx="2" ry="2" />
<text  x="1181.50" y="1943.5" ></text>
</g>
<g >
<title>chase (20,135,442 samples, 46.97%)</title><rect x="10.0" y="2093" width="554.2" height="15.0" fill="rgb(212,72,53)" rx="2" ry="2" />
<text  x="13.00" y="2103.5" >chase</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="909" width="38.2" height="15.0" fill="rgb(213,22,50)" rx="2" ry="2" />
<text  x="628.90" y="919.5" >std..</text>
</g>
<g >
<title>remove_vma (227,214 samples, 0.53%)</title><rect x="670.1" y="1853" width="6.2" height="15.0" fill="rgb(230,113,21)" rx="2" ry="2" />
<text  x="673.05" y="1863.5" ></text>
</g>
<g >
<title>wall_seconds (15,054,726 samples, 35.12%)</title><rect x="136.8" y="2029" width="414.4" height="15.0" fill="rgb(228,129,34)" rx="2" ry="2" />
<text  x="139.81" y="2039.5" >wall_seconds</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1821" width="38.2" height="15.0" fill="rgb(250,78,32)" rx="2" ry="2" />
<text  x="628.90" y="1831.5" >std..</text>
</g>
<g >
<title>ret_from_fork (511,275 samples, 1.19%)</title><rect x="567.9" y="2077" width="14.1" height="15.0" fill="rgb(226,72,29)" rx="2" ry="2" />
<text  x="570.88" y="2087.5" ></text>
</g>
<g >
<title>[[vdso]] (10,976,330 samples, 25.60%)</title><rect x="249.1" y="2013" width="302.1" height="15.0" fill="rgb(239,122,24)" rx="2" ry="2" />
<text  x="252.06" y="2023.5" >[[vdso]]</text>
</g>
<g >
<title>__unregister_atfork (510,339 samples, 1.19%)</title><rect x="17.3" y="2061" width="14.0" height="15.0" fill="rgb(247,229,48)" rx="2" ry="2" />
<text  x="20.26" y="2071.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (207,767 samples, 0.48%)</title><rect x="582.0" y="1885" width="5.7" height="15.0" fill="rgb(205,104,8)" rx="2" ry="2" />
<text  x="584.95" y="1895.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (215,452 samples, 0.50%)</title><rect x="664.1" y="1821" width="6.0" height="15.0" fill="rgb(205,175,30)" rx="2" ry="2" />
<text  x="667.12" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="2013" width="38.2" height="15.0" fill="rgb(239,141,33)" rx="2" ry="2" />
<text  x="628.90" y="2023.5" >std..</text>
</g>
<g >
<title>handle_mm_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="2013" width="7.3" height="15.0" fill="rgb(214,164,52)" rx="2" ry="2" />
<text  x="13.00" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="141" width="38.2" height="15.0" fill="rgb(252,135,32)" rx="2" ry="2" />
<text  x="628.90" y="151.5" >std..</text>
</g>
<g >
<title>_perf_event_enable (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1885" width="34.3" height="15.0" fill="rgb(244,89,49)" rx="2" ry="2" />
<text  x="694.95" y="1895.5" >_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="285" width="38.2" height="15.0" fill="rgb(235,180,33)" rx="2" ry="2" />
<text  x="628.90" y="295.5" >std..</text>
</g>
<g >
<title>put_prev_entity (257,318 samples, 0.60%)</title><rect x="803.4" y="1869" width="7.1" height="15.0" fill="rgb(253,83,19)" rx="2" ry="2" />
<text  x="806.44" y="1879.5" ></text>
</g>
<g >
<title>swapper (11,474,278 samples, 26.76%)</title><rect x="874.2" y="2093" width="315.8" height="15.0" fill="rgb(232,129,18)" rx="2" ry="2" />
<text  x="877.18" y="2103.5" >swapper</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="61" width="38.2" height="15.0" fill="rgb(234,203,48)" rx="2" ry="2" />
<text  x="628.90" y="71.5" >std..</text>
</g>
<g >
<title>do_user_addr_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="2029" width="7.3" height="15.0" fill="rgb(254,202,31)" rx="2" ry="2" />
<text  x="13.00" y="2039.5" ></text>
</g>
<g >
<title>load_balance (511,275 samples, 1.19%)</title><rect x="567.9" y="1933" width="14.1" height="15.0" fill="rgb(232,74,19)" rx="2" ry="2" />
<text  x="570.88" y="1943.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (3,807,987 samples, 8.88%)</title><rect x="729.0" y="1997" width="104.8" height="15.0" fill="rgb(253,40,40)" rx="2" ry="2" />
<text  x="731.98" y="2007.5" >sched_setaff..</text>
</g>
<g >
<title>dl_main (895,961 samples, 2.09%)</title><rect x="37.5" y="2045" width="24.7" height="15.0" fill="rgb(205,211,47)" rx="2" ry="2" />
<text  x="40.51" y="2055.5" >d..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (832,051 samples, 1.94%)</title><rect x="664.1" y="2061" width="22.9" height="15.0" fill="rgb(230,182,13)" rx="2" ry="2" />
<text  x="667.12" y="2071.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="717" width="38.2" height="15.0" fill="rgb(230,210,47)" rx="2" ry="2" />
<text  x="628.90" y="727.5" >std..</text>
</g>
<g >
<title>kthread (511,275 samples, 1.19%)</title><rect x="567.9" y="2061" width="14.1" height="15.0" fill="rgb(212,59,19)" rx="2" ry="2" />
<text  x="570.88" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="669" width="38.2" height="15.0" fill="rgb(234,216,43)" rx="2" ry="2" />
<text  x="628.90" y="679.5" >std..</text>
</g>
<g >
<title>load_elf_binary (832,051 samples, 1.94%)</title><rect x="664.1" y="1933" width="22.9" height="15.0" fill="rgb(233,5,27)" rx="2" ry="2" />
<text  x="667.12" y="1943.5" >l..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (11,474,278 samples, 26.76%)</title><rect x="874.2" y="2077" width="315.8" height="15.0" fill="rgb(250,29,50)" rx="2" ry="2" />
<text  x="877.18" y="2087.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>hrtimer_start_range_ns (209,806 samples, 0.49%)</title><rect x="1178.5" y="1981" width="5.8" height="15.0" fill="rgb(205,93,16)" rx="2" ry="2" />
<text  x="1181.50" y="1991.5" ></text>
</g>
<g >
<title>kmem_cache_free (227,214 samples, 0.53%)</title><rect x="670.1" y="1821" width="6.2" height="15.0" fill="rgb(243,77,16)" rx="2" ry="2" />
<text  x="673.05" y="1831.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (225,208 samples, 0.53%)</title><rect x="31.3" y="2061" width="6.2" height="15.0" fill="rgb(209,192,25)" rx="2" ry="2" />
<text  x="34.31" y="2071.5" ></text>
</g>
<g >
<title>common_interrupt (208,926 samples, 0.49%)</title><rect x="879.9" y="1949" width="5.8" height="15.0" fill="rgb(217,18,28)" rx="2" ry="2" />
<text  x="882.90" y="1959.5" ></text>
</g>
<g >
<title>node (2,985,399 samples, 6.96%)</title><rect x="582.0" y="2093" width="82.1" height="15.0" fill="rgb(218,137,45)" rx="2" ry="2" />
<text  x="584.95" y="2103.5" >node</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="349" width="38.2" height="15.0" fill="rgb(247,195,12)" rx="2" ry="2" />
<text  x="628.90" y="359.5" >std..</text>
</g>
<g >
<title>run_builtin (6,620,828 samples, 15.44%)</title><rect x="692.0" y="2045" width="182.2" height="15.0" fill="rgb(230,97,48)" rx="2" ry="2" />
<text  x="694.95" y="2055.5" >run_builtin</text>
</g>
<g >
<title>__anon_vma_prepare (263,909 samples, 0.62%)</title><rect x="10.0" y="1949" width="7.3" height="15.0" fill="rgb(226,227,19)" rx="2" ry="2" />
<text  x="13.00" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1405" width="38.2" height="15.0" fill="rgb(224,145,10)" rx="2" ry="2" />
<text  x="628.90" y="1415.5" >std..</text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1,106,803 samples, 2.58%)</title><rect x="843.7" y="2013" width="30.5" height="15.0" fill="rgb(238,114,6)" rx="2" ry="2" />
<text  x="846.72" y="2023.5" >re..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,807,987 samples, 8.88%)</title><rect x="729.0" y="1981" width="104.8" height="15.0" fill="rgb(225,77,38)" rx="2" ry="2" />
<text  x="731.98" y="1991.5" >entry_SYSCAL..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="893" width="38.2" height="15.0" fill="rgb(220,43,47)" rx="2" ry="2" />
<text  x="628.90" y="903.5" >std..</text>
</g>
<g >
<title>cpuidle_idle_call (11,056,575 samples, 25.79%)</title><rect x="874.2" y="2013" width="304.3" height="15.0" fill="rgb(246,140,8)" rx="2" ry="2" />
<text  x="877.18" y="2023.5" >cpuidle_idle_call</text>
</g>
<g >
<title>cpuidle_enter_state (207,897 samples, 0.48%)</title><rect x="1184.3" y="1917" width="5.7" height="15.0" fill="rgb(234,191,22)" rx="2" ry="2" />
<text  x="1187.28" y="1927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (179,101 samples, 0.42%)</title><rect x="687.0" y="1981" width="5.0" height="15.0" fill="rgb(234,81,28)" rx="2" ry="2" />
<text  x="690.02" y="1991.5" ></text>
</g>
<g >
<title>cpuidle_enter (207,897 samples, 0.48%)</title><rect x="1184.3" y="1933" width="5.7" height="15.0" fill="rgb(238,162,26)" rx="2" ry="2" />
<text  x="1187.28" y="1943.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (74,163 samples, 0.17%)</title><rect x="831.7" y="1885" width="2.1" height="15.0" fill="rgb(250,59,30)" rx="2" ry="2" />
<text  x="834.75" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1181" width="38.2" height="15.0" fill="rgb(246,202,36)" rx="2" ry="2" />
<text  x="628.90" y="1191.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1581" width="38.2" height="15.0" fill="rgb(208,84,18)" rx="2" ry="2" />
<text  x="628.90" y="1591.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1725" width="38.2" height="15.0" fill="rgb(222,81,9)" rx="2" ry="2" />
<text  x="628.90" y="1735.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1133" width="38.2" height="15.0" fill="rgb(238,22,22)" rx="2" ry="2" />
<text  x="628.90" y="1143.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1117" width="38.2" height="15.0" fill="rgb(244,201,54)" rx="2" ry="2" />
<text  x="628.90" y="1127.5" >std..</text>
</g>
<g >
<title>irq_exit_rcu (227,734 samples, 0.53%)</title><rect x="885.7" y="1933" width="6.2" height="15.0" fill="rgb(207,163,30)" rx="2" ry="2" />
<text  x="888.65" y="1943.5" ></text>
</g>
<g >
<title>futex_exec_release (179,101 samples, 0.42%)</title><rect x="687.0" y="1789" width="5.0" height="15.0" fill="rgb(243,57,11)" rx="2" ry="2" />
<text  x="690.02" y="1799.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (187,653 samples, 0.44%)</title><rect x="681.9" y="1805" width="5.1" height="15.0" fill="rgb(225,68,53)" rx="2" ry="2" />
<text  x="684.86" y="1815.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (209,806 samples, 0.49%)</title><rect x="1178.5" y="1949" width="5.8" height="15.0" fill="rgb(233,57,33)" rx="2" ry="2" />
<text  x="1181.50" y="1959.5" ></text>
</g>
<g >
<title>__libc_start_call_main (6,620,828 samples, 15.44%)</title><rect x="692.0" y="2077" width="182.2" height="15.0" fill="rgb(227,178,20)" rx="2" ry="2" />
<text  x="694.95" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1565" width="38.2" height="15.0" fill="rgb(242,225,33)" rx="2" ry="2" />
<text  x="628.90" y="1575.5" >std..</text>
</g>
<g >
<title>put_prev_task_fair (86,755 samples, 0.20%)</title><rect x="810.5" y="1869" width="2.4" height="15.0" fill="rgb(249,48,51)" rx="2" ry="2" />
<text  x="813.52" y="1879.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (207,767 samples, 0.48%)</title><rect x="582.0" y="1789" width="5.7" height="15.0" fill="rgb(220,215,10)" rx="2" ry="2" />
<text  x="584.95" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="621" width="38.2" height="15.0" fill="rgb(223,68,16)" rx="2" ry="2" />
<text  x="628.90" y="631.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1629" width="38.2" height="15.0" fill="rgb(254,85,0)" rx="2" ry="2" />
<text  x="628.90" y="1639.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="509" width="38.2" height="15.0" fill="rgb(214,46,29)" rx="2" ry="2" />
<text  x="628.90" y="519.5" >std..</text>
</g>
<g >
<title>__handle_mm_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1901" width="7.7" height="15.0" fill="rgb(218,137,22)" rx="2" ry="2" />
<text  x="846.72" y="1911.5" ></text>
</g>
<g >
<title>event_function_call (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1869" width="34.3" height="15.0" fill="rgb(220,62,30)" rx="2" ry="2" />
<text  x="694.95" y="1879.5" >ev..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="205" width="38.2" height="15.0" fill="rgb(231,118,15)" rx="2" ry="2" />
<text  x="628.90" y="215.5" >std..</text>
</g>
<g >
<title>__schedule (511,275 samples, 1.19%)</title><rect x="567.9" y="2013" width="14.1" height="15.0" fill="rgb(245,67,2)" rx="2" ry="2" />
<text  x="570.88" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1597" width="38.2" height="15.0" fill="rgb(234,219,13)" rx="2" ry="2" />
<text  x="628.90" y="1607.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1037" width="38.2" height="15.0" fill="rgb(244,170,23)" rx="2" ry="2" />
<text  x="628.90" y="1047.5" >std..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (263,909 samples, 0.62%)</title><rect x="10.0" y="1885" width="7.3" height="15.0" fill="rgb(245,109,30)" rx="2" ry="2" />
<text  x="13.00" y="1895.5" ></text>
</g>
<g >
<title>cpu_startup_entry (11,266,381 samples, 26.28%)</title><rect x="874.2" y="2045" width="310.1" height="15.0" fill="rgb(221,173,40)" rx="2" ry="2" />
<text  x="877.18" y="2055.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="845" width="38.2" height="15.0" fill="rgb(249,102,16)" rx="2" ry="2" />
<text  x="628.90" y="855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1789" width="38.2" height="15.0" fill="rgb(216,37,42)" rx="2" ry="2" />
<text  x="628.90" y="1799.5" >std..</text>
</g>
<g >
<title>do_syscall_64 (206,404 samples, 0.48%)</title><rect x="838.0" y="1965" width="5.7" height="15.0" fill="rgb(225,19,54)" rx="2" ry="2" />
<text  x="841.04" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="301" width="38.2" height="15.0" fill="rgb(243,71,49)" rx="2" ry="2" />
<text  x="628.90" y="311.5" >std..</text>
</g>
<g >
<title>record__pushfn (283,173 samples, 0.66%)</title><rect x="866.4" y="1981" width="7.8" height="15.0" fill="rgb(231,189,36)" rx="2" ry="2" />
<text  x="869.39" y="1991.5" ></text>
</g>
<g >
<title>run_builtin (179,101 samples, 0.42%)</title><rect x="687.0" y="2045" width="5.0" height="15.0" fill="rgb(249,228,9)" rx="2" ry="2" />
<text  x="690.02" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1965" width="38.2" height="15.0" fill="rgb(251,160,7)" rx="2" ry="2" />
<text  x="628.90" y="1975.5" >std..</text>
</g>
<g >
<title>do_syscall_64 (179,101 samples, 0.42%)</title><rect x="687.0" y="1965" width="5.0" height="15.0" fill="rgb(239,84,11)" rx="2" ry="2" />
<text  x="690.02" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="93" width="38.2" height="15.0" fill="rgb(245,137,30)" rx="2" ry="2" />
<text  x="628.90" y="103.5" >std..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (832,051 samples, 1.94%)</title><rect x="664.1" y="2013" width="22.9" height="15.0" fill="rgb(241,67,54)" rx="2" ry="2" />
<text  x="667.12" y="2023.5" >d..</text>
</g>
<g >
<title>asm_exc_page_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="2061" width="7.3" height="15.0" fill="rgb(217,43,3)" rx="2" ry="2" />
<text  x="13.00" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1389" width="38.2" height="15.0" fill="rgb(207,99,28)" rx="2" ry="2" />
<text  x="628.90" y="1399.5" >std..</text>
</g>
<g >
<title>__GI___execve (179,101 samples, 0.42%)</title><rect x="687.0" y="1997" width="5.0" height="15.0" fill="rgb(239,84,7)" rx="2" ry="2" />
<text  x="690.02" y="2007.5" ></text>
</g>
<g >
<title>memcpy_erms (170,740 samples, 0.40%)</title><rect x="798.7" y="1869" width="4.7" height="15.0" fill="rgb(222,77,43)" rx="2" ry="2" />
<text  x="801.74" y="1879.5" ></text>
</g>
<g >
<title>__calc_delta (84,003 samples, 0.20%)</title><rect x="775.2" y="1821" width="2.3" height="15.0" fill="rgb(252,164,17)" rx="2" ry="2" />
<text  x="778.19" y="1831.5" ></text>
</g>
<g >
<title>close_fd (206,404 samples, 0.48%)</title><rect x="838.0" y="1933" width="5.7" height="15.0" fill="rgb(253,172,5)" rx="2" ry="2" />
<text  x="841.04" y="1943.5" ></text>
</g>
<g >
<title>vm_area_free (227,214 samples, 0.53%)</title><rect x="670.1" y="1837" width="6.2" height="15.0" fill="rgb(241,192,41)" rx="2" ry="2" />
<text  x="673.05" y="1847.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (207,767 samples, 0.48%)</title><rect x="582.0" y="1869" width="5.7" height="15.0" fill="rgb(225,203,42)" rx="2" ry="2" />
<text  x="584.95" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1373" width="38.2" height="15.0" fill="rgb(243,71,12)" rx="2" ry="2" />
<text  x="628.90" y="1383.5" >std..</text>
</g>
<g >
<title>__page_cache_alloc (283,173 samples, 0.66%)</title><rect x="866.4" y="1757" width="7.8" height="15.0" fill="rgb(228,173,16)" rx="2" ry="2" />
<text  x="869.39" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1981" width="38.2" height="15.0" fill="rgb(219,157,18)" rx="2" ry="2" />
<text  x="628.90" y="1991.5" >std..</text>
</g>
<g >
<title>event_function (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1805" width="34.3" height="15.0" fill="rgb(218,137,9)" rx="2" ry="2" />
<text  x="694.95" y="1815.5" >ev..</text>
</g>
<g >
<title>__do_set_cpus_allowed (3,144,920 samples, 7.34%)</title><rect x="731.1" y="1885" width="86.5" height="15.0" fill="rgb(215,133,19)" rx="2" ry="2" />
<text  x="734.06" y="1895.5" >__do_set_c..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1309" width="38.2" height="15.0" fill="rgb(233,198,30)" rx="2" ry="2" />
<text  x="628.90" y="1319.5" >std..</text>
</g>
<g >
<title>uv__io_poll (207,767 samples, 0.48%)</title><rect x="582.0" y="1981" width="5.7" height="15.0" fill="rgb(223,30,42)" rx="2" ry="2" />
<text  x="584.95" y="1991.5" ></text>
</g>
<g >
<title>bprm_execve (832,051 samples, 1.94%)</title><rect x="664.1" y="1997" width="22.9" height="15.0" fill="rgb(219,192,4)" rx="2" ry="2" />
<text  x="667.12" y="2007.5" >b..</text>
</g>
<g >
<title>bprm_execve (179,101 samples, 0.42%)</title><rect x="687.0" y="1917" width="5.0" height="15.0" fill="rgb(213,144,47)" rx="2" ry="2" />
<text  x="690.02" y="1927.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (227,734 samples, 0.53%)</title><rect x="885.7" y="1965" width="6.2" height="15.0" fill="rgb(212,172,33)" rx="2" ry="2" />
<text  x="888.65" y="1975.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (207,767 samples, 0.48%)</title><rect x="582.0" y="2029" width="5.7" height="15.0" fill="rgb(222,86,38)" rx="2" ry="2" />
<text  x="584.95" y="2039.5" ></text>
</g>
<g >
<title>exc_page_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="2045" width="7.3" height="15.0" fill="rgb(253,49,35)" rx="2" ry="2" />
<text  x="13.00" y="2055.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (207,767 samples, 0.48%)</title><rect x="582.0" y="1933" width="5.7" height="15.0" fill="rgb(248,34,13)" rx="2" ry="2" />
<text  x="584.95" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="749" width="38.2" height="15.0" fill="rgb(227,29,1)" rx="2" ry="2" />
<text  x="628.90" y="759.5" >std..</text>
</g>
<g >
<title>rcu_read_unlock_strict (75,666 samples, 0.18%)</title><rect x="729.0" y="1933" width="2.1" height="15.0" fill="rgb(253,165,8)" rx="2" ry="2" />
<text  x="731.98" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1949" width="38.2" height="15.0" fill="rgb(245,29,54)" rx="2" ry="2" />
<text  x="628.90" y="1959.5" >std..</text>
</g>
<g >
<title>handle_pte_fault (263,909 samples, 0.62%)</title><rect x="10.0" y="1981" width="7.3" height="15.0" fill="rgb(240,59,27)" rx="2" ry="2" />
<text  x="13.00" y="1991.5" ></text>
</g>
<g >
<title>alloc_cpumask_var (74,163 samples, 0.17%)</title><rect x="831.7" y="1901" width="2.1" height="15.0" fill="rgb(229,208,11)" rx="2" ry="2" />
<text  x="834.75" y="1911.5" ></text>
</g>
<g >
<title>exc_page_fault (277,801 samples, 0.65%)</title><rect x="843.7" y="1949" width="7.7" height="15.0" fill="rgb(205,135,51)" rx="2" ry="2" />
<text  x="846.72" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="605" width="38.2" height="15.0" fill="rgb(225,133,53)" rx="2" ry="2" />
<text  x="628.90" y="615.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1933" width="38.2" height="15.0" fill="rgb(237,24,21)" rx="2" ry="2" />
<text  x="628.90" y="1943.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,388,816 samples, 3.24%)</title><rect x="625.9" y="653" width="38.2" height="15.0" fill="rgb(208,56,29)" rx="2" ry="2" />
<text  x="628.90" y="663.5" >std..</text>
</g>
<g >
<title>do_idle (207,897 samples, 0.48%)</title><rect x="1184.3" y="1965" width="5.7" height="15.0" fill="rgb(240,124,36)" rx="2" ry="2" />
<text  x="1187.28" y="1975.5" ></text>
</g>
<g >
<title>arch_call_rest_init (207,897 samples, 0.48%)</title><rect x="1184.3" y="2013" width="5.7" height="15.0" fill="rgb(231,167,25)" rx="2" ry="2" />
<text  x="1187.28" y="2023.5" ></text>
</g>
<g >
<title>__perf_event_enable (1,247,635 samples, 2.91%)</title><rect x="692.0" y="1789" width="34.3" height="15.0" fill="rgb(239,119,16)" rx="2" ry="2" />
<text  x="694.95" y="1799.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="2045" width="38.2" height="15.0" fill="rgb(239,14,35)" rx="2" ry="2" />
<text  x="628.90" y="2055.5" >std..</text>
</g>
<g >
<title>exec_mm_release (179,101 samples, 0.42%)</title><rect x="687.0" y="1805" width="5.0" height="15.0" fill="rgb(206,58,29)" rx="2" ry="2" />
<text  x="690.02" y="1815.5" ></text>
</g>
<g >
<title>main (179,101 samples, 0.42%)</title><rect x="687.0" y="2061" width="5.0" height="15.0" fill="rgb(221,177,7)" rx="2" ry="2" />
<text  x="690.02" y="2071.5" ></text>
</g>
<g >
<title>hrtick_update (84,586 samples, 0.20%)</title><rect x="796.4" y="1869" width="2.3" height="15.0" fill="rgb(252,126,31)" rx="2" ry="2" />
<text  x="799.41" y="1879.5" ></text>
</g>
<g >
<title>clear_page_erms (283,173 samples, 0.66%)</title><rect x="866.4" y="1693" width="7.8" height="15.0" fill="rgb(219,114,20)" rx="2" ry="2" />
<text  x="869.39" y="1703.5" ></text>
</g>
<g >
<title>cpu_stop_should_run (133,502 samples, 0.31%)</title><rect x="564.2" y="2029" width="3.7" height="15.0" fill="rgb(221,121,0)" rx="2" ry="2" />
<text  x="567.21" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="157" width="38.2" height="15.0" fill="rgb(252,104,6)" rx="2" ry="2" />
<text  x="628.90" y="167.5" >std..</text>
</g>
<g >
<title>enqueue_task_fair (259,967 samples, 0.61%)</title><rect x="789.3" y="1869" width="7.1" height="15.0" fill="rgb(208,160,46)" rx="2" ry="2" />
<text  x="792.25" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1005" width="38.2" height="15.0" fill="rgb(217,56,52)" rx="2" ry="2" />
<text  x="628.90" y="1015.5" >std..</text>
</g>
<g >
<title>grab_cache_page_write_begin (283,173 samples, 0.66%)</title><rect x="866.4" y="1789" width="7.8" height="15.0" fill="rgb(214,84,30)" rx="2" ry="2" />
<text  x="869.39" y="1799.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (208,926 samples, 0.49%)</title><rect x="879.9" y="1917" width="5.8" height="15.0" fill="rgb(244,154,41)" rx="2" ry="2" />
<text  x="882.90" y="1927.5" ></text>
</g>
<g >
<title>migration/4 (511,275 samples, 1.19%)</title><rect x="567.9" y="2093" width="14.1" height="15.0" fill="rgb(206,65,25)" rx="2" ry="2" />
<text  x="570.88" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1085" width="38.2" height="15.0" fill="rgb(211,40,16)" rx="2" ry="2" />
<text  x="628.90" y="1095.5" >std..</text>
</g>
<g >
<title>Builtins_LoadIC (207,767 samples, 0.48%)</title><rect x="582.0" y="1725" width="5.7" height="15.0" fill="rgb(222,135,43)" rx="2" ry="2" />
<text  x="584.95" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="1501" width="38.2" height="15.0" fill="rgb(232,226,6)" rx="2" ry="2" />
<text  x="628.90" y="1511.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,388,816 samples, 3.24%)</title><rect x="625.9" y="253" width="38.2" height="15.0" fill="rgb(241,109,29)" rx="2" ry="2" />
<text  x="628.90" y="263.5" >std..</text>
</g>
<g >
<title>all (42,871,876 samples, 100%)</title><rect x="10.0" y="2109" width="1180.0" height="15.0" fill="rgb(246,78,8)" rx="2" ry="2" />
<text  x="13.00" y="2119.5" ></text>
</g>
</g>
</svg>
