<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2158" onload="init(evt)" viewBox="0 0 1200 2158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >FlameGraph_4_128m_1_foward 1_none</text>
<text id="subtitle" x="600.00" y="48" >Count:4_ChainSize:128m_Thread:1_Access:foward 1_Prefetch:none</text>
<text id="details" x="10.00" y="2141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2141" > </text>
<g id="frames">
<g >
<title>__x64_sys_epoll_wait (206,164 samples, 0.44%)</title><rect x="593.2" y="1933" width="5.1" height="15.0" fill="rgb(216,219,46)" rx="2" ry="2" />
<text  x="596.17" y="1943.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (206,849 samples, 0.44%)</title><rect x="1152.4" y="1981" width="5.2" height="15.0" fill="rgb(237,196,36)" rx="2" ry="2" />
<text  x="1155.40" y="1991.5" ></text>
</g>
<g >
<title>quiet_vmstat (206,849 samples, 0.44%)</title><rect x="1152.4" y="1965" width="5.2" height="15.0" fill="rgb(207,57,24)" rx="2" ry="2" />
<text  x="1155.40" y="1975.5" ></text>
</g>
<g >
<title>[chase] (403,381 samples, 0.85%)</title><rect x="100.2" y="2029" width="10.1" height="15.0" fill="rgb(246,54,20)" rx="2" ry="2" />
<text  x="103.21" y="2039.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (3,670,014 samples, 7.78%)</title><rect x="704.0" y="1949" width="91.8" height="15.0" fill="rgb(238,111,33)" rx="2" ry="2" />
<text  x="707.05" y="1959.5" >__x64_sys_..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (203,144 samples, 0.43%)</title><rect x="1162.7" y="1901" width="5.1" height="15.0" fill="rgb(226,55,8)" rx="2" ry="2" />
<text  x="1165.74" y="1911.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (13,146,698 samples, 27.86%)</title><rect x="828.9" y="2013" width="328.7" height="15.0" fill="rgb(213,12,45)" rx="2" ry="2" />
<text  x="831.86" y="2023.5" >cpuidle_idle_call</text>
</g>
<g >
<title>swapper (13,556,267 samples, 28.73%)</title><rect x="828.9" y="2093" width="338.9" height="15.0" fill="rgb(207,224,30)" rx="2" ry="2" />
<text  x="831.86" y="2103.5" >swapper</text>
</g>
<g >
<title>cpuidle_enter_state (12,757,375 samples, 27.03%)</title><rect x="833.4" y="1981" width="319.0" height="15.0" fill="rgb(236,21,50)" rx="2" ry="2" />
<text  x="836.42" y="1991.5" >cpuidle_enter_state</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (551,089 samples, 1.17%)</title><rect x="815.1" y="1949" width="13.8" height="15.0" fill="rgb(220,144,24)" rx="2" ry="2" />
<text  x="818.08" y="1959.5" ></text>
</g>
<g >
<title>zap_pte_range (507,076 samples, 1.07%)</title><rect x="511.9" y="1885" width="12.6" height="15.0" fill="rgb(229,61,30)" rx="2" ry="2" />
<text  x="514.86" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="237" width="34.8" height="15.0" fill="rgb(211,35,16)" rx="2" ry="2" />
<text  x="605.52" y="247.5" >st..</text>
</g>
<g >
<title>__x64_sys_mprotect (268,797 samples, 0.57%)</title><rect x="41.7" y="1981" width="6.7" height="15.0" fill="rgb(207,227,50)" rx="2" ry="2" />
<text  x="44.69" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="605" width="34.8" height="15.0" fill="rgb(216,126,21)" rx="2" ry="2" />
<text  x="605.52" y="615.5" >st..</text>
</g>
<g >
<title>__sched_setaffinity (3,596,930 samples, 7.62%)</title><rect x="705.9" y="1917" width="89.9" height="15.0" fill="rgb(212,213,32)" rx="2" ry="2" />
<text  x="708.88" y="1927.5" >__sched_se..</text>
</g>
<g >
<title>cpu_startup_entry (13,353,123 samples, 28.29%)</title><rect x="828.9" y="2045" width="333.8" height="15.0" fill="rgb(248,133,1)" rx="2" ry="2" />
<text  x="831.86" y="2055.5" >cpu_startup_entry</text>
</g>
<g >
<title>kmem_cache_free (253,820 samples, 0.54%)</title><rect x="643.5" y="1821" width="6.4" height="15.0" fill="rgb(224,154,18)" rx="2" ry="2" />
<text  x="646.52" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1021" width="34.8" height="15.0" fill="rgb(245,134,30)" rx="2" ry="2" />
<text  x="605.52" y="1031.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="189" width="34.8" height="15.0" fill="rgb(232,53,49)" rx="2" ry="2" />
<text  x="605.52" y="199.5" >st..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (13,556,267 samples, 28.73%)</title><rect x="828.9" y="2077" width="338.9" height="15.0" fill="rgb(254,13,3)" rx="2" ry="2" />
<text  x="831.86" y="2087.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (233,272 samples, 0.49%)</title><rect x="524.5" y="2061" width="5.9" height="15.0" fill="rgb(241,206,20)" rx="2" ry="2" />
<text  x="527.54" y="2071.5" ></text>
</g>
<g >
<title>__close (208,573 samples, 0.44%)</title><rect x="795.8" y="1997" width="5.2" height="15.0" fill="rgb(214,119,51)" rx="2" ry="2" />
<text  x="798.81" y="2007.5" ></text>
</g>
<g >
<title>migration/28 (432,727 samples, 0.92%)</title><rect x="547.5" y="2093" width="10.9" height="15.0" fill="rgb(208,11,23)" rx="2" ry="2" />
<text  x="550.54" y="2103.5" ></text>
</g>
<g >
<title>load_elf_binary (981,928 samples, 2.08%)</title><rect x="637.3" y="1933" width="24.6" height="15.0" fill="rgb(231,21,30)" rx="2" ry="2" />
<text  x="640.33" y="1943.5" >l..</text>
</g>
<g >
<title>__x64_sys_read (680,629 samples, 1.44%)</title><rect x="1173.0" y="2013" width="17.0" height="15.0" fill="rgb(245,121,44)" rx="2" ry="2" />
<text  x="1175.98" y="2023.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,392,058 samples, 2.95%)</title><rect x="558.4" y="2029" width="34.8" height="15.0" fill="rgb(249,21,13)" rx="2" ry="2" />
<text  x="561.36" y="2039.5" >In..</text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1709" width="4.2" height="15.0" fill="rgb(244,144,15)" rx="2" ry="2" />
<text  x="601.33" y="1719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (234,113 samples, 0.50%)</title><rect x="661.9" y="1981" width="5.8" height="15.0" fill="rgb(240,134,50)" rx="2" ry="2" />
<text  x="664.88" y="1991.5" ></text>
</g>
<g >
<title>task_rq_lock (76,996 samples, 0.16%)</title><rect x="793.9" y="1901" width="1.9" height="15.0" fill="rgb(254,5,0)" rx="2" ry="2" />
<text  x="796.89" y="1911.5" ></text>
</g>
<g >
<title>do_exit (507,076 samples, 1.07%)</title><rect x="511.9" y="2013" width="12.6" height="15.0" fill="rgb(205,43,21)" rx="2" ry="2" />
<text  x="514.86" y="2023.5" ></text>
</g>
<g >
<title>do_read_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1677" width="6.6" height="15.0" fill="rgb(231,50,32)" rx="2" ry="2" />
<text  x="818.08" y="1687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="93" width="34.8" height="15.0" fill="rgb(244,169,25)" rx="2" ry="2" />
<text  x="605.52" y="103.5" >st..</text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (374,122 samples, 0.79%)</title><rect x="593.2" y="2045" width="9.3" height="15.0" fill="rgb(213,154,46)" rx="2" ry="2" />
<text  x="596.17" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1565" width="34.8" height="15.0" fill="rgb(230,103,35)" rx="2" ry="2" />
<text  x="605.52" y="1575.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (233,272 samples, 0.49%)</title><rect x="524.5" y="2045" width="5.9" height="15.0" fill="rgb(250,222,4)" rx="2" ry="2" />
<text  x="527.54" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1453" width="34.8" height="15.0" fill="rgb(230,116,35)" rx="2" ry="2" />
<text  x="605.52" y="1463.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="269" width="34.8" height="15.0" fill="rgb(214,89,14)" rx="2" ry="2" />
<text  x="605.52" y="279.5" >st..</text>
</g>
<g >
<title>__strlen_evex (206,637 samples, 0.44%)</title><rect x="1167.8" y="2061" width="5.2" height="15.0" fill="rgb(228,108,40)" rx="2" ry="2" />
<text  x="1170.82" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="301" width="34.8" height="15.0" fill="rgb(240,124,28)" rx="2" ry="2" />
<text  x="605.52" y="311.5" >st..</text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1,113,060 samples, 2.36%)</title><rect x="801.0" y="2013" width="27.9" height="15.0" fill="rgb(224,19,40)" rx="2" ry="2" />
<text  x="804.03" y="2023.5" >r..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1661" width="34.8" height="15.0" fill="rgb(231,195,10)" rx="2" ry="2" />
<text  x="605.52" y="1671.5" >st..</text>
</g>
<g >
<title>enqueue_task_fair (87,334 samples, 0.19%)</title><rect x="760.1" y="1869" width="2.2" height="15.0" fill="rgb(234,142,50)" rx="2" ry="2" />
<text  x="763.10" y="1879.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,020,317 samples, 2.16%)</title><rect x="22.9" y="2061" width="25.5" height="15.0" fill="rgb(214,33,1)" rx="2" ry="2" />
<text  x="25.90" y="2071.5" >_..</text>
</g>
<g >
<title>node::SpinEventLoop (374,122 samples, 0.79%)</title><rect x="593.2" y="2013" width="9.3" height="15.0" fill="rgb(220,109,11)" rx="2" ry="2" />
<text  x="596.17" y="2023.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (3,519,934 samples, 7.46%)</title><rect x="705.9" y="1901" width="88.0" height="15.0" fill="rgb(241,98,19)" rx="2" ry="2" />
<text  x="708.88" y="1911.5" >__set_cpus..</text>
</g>
<g >
<title>find_busiest_group (175,588 samples, 0.37%)</title><rect x="530.4" y="1933" width="4.4" height="15.0" fill="rgb(213,23,3)" rx="2" ry="2" />
<text  x="533.37" y="1943.5" ></text>
</g>
<g >
<title>uv_run (374,122 samples, 0.79%)</title><rect x="593.2" y="1997" width="9.3" height="15.0" fill="rgb(214,95,24)" rx="2" ry="2" />
<text  x="596.17" y="2007.5" ></text>
</g>
<g >
<title>_raw_spin_lock (266,784 samples, 0.57%)</title><rect x="815.1" y="1661" width="6.6" height="15.0" fill="rgb(242,141,9)" rx="2" ry="2" />
<text  x="818.08" y="1671.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1741" width="30.8" height="15.0" fill="rgb(251,198,37)" rx="2" ry="2" />
<text  x="673.87" y="1751.5" >in..</text>
</g>
<g >
<title>do_idle (203,144 samples, 0.43%)</title><rect x="1162.7" y="1965" width="5.1" height="15.0" fill="rgb(245,120,24)" rx="2" ry="2" />
<text  x="1165.74" y="1975.5" ></text>
</g>
<g >
<title>exit_mmap (507,076 samples, 1.07%)</title><rect x="511.9" y="1965" width="12.6" height="15.0" fill="rgb(232,129,31)" rx="2" ry="2" />
<text  x="514.86" y="1975.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (233,272 samples, 0.49%)</title><rect x="524.5" y="2013" width="5.9" height="15.0" fill="rgb(224,184,25)" rx="2" ry="2" />
<text  x="527.54" y="2023.5" ></text>
</g>
<g >
<title>leave_mm (201,234 samples, 0.43%)</title><rect x="833.4" y="1965" width="5.1" height="15.0" fill="rgb(235,105,16)" rx="2" ry="2" />
<text  x="836.42" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1117" width="34.8" height="15.0" fill="rgb(211,23,52)" rx="2" ry="2" />
<text  x="605.52" y="1127.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1005" width="34.8" height="15.0" fill="rgb(214,46,28)" rx="2" ry="2" />
<text  x="605.52" y="1015.5" >st..</text>
</g>
<g >
<title>__GI___execve (981,928 samples, 2.08%)</title><rect x="637.3" y="2077" width="24.6" height="15.0" fill="rgb(232,12,5)" rx="2" ry="2" />
<text  x="640.33" y="2087.5" >_..</text>
</g>
<g >
<title>Watcher::isIgnored (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1981" width="34.8" height="15.0" fill="rgb(244,32,2)" rx="2" ry="2" />
<text  x="561.36" y="1991.5" >Wa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="397" width="34.8" height="15.0" fill="rgb(247,131,5)" rx="2" ry="2" />
<text  x="605.52" y="407.5" >st..</text>
</g>
<g >
<title>x86_64_start_kernel (203,144 samples, 0.43%)</title><rect x="1162.7" y="2061" width="5.1" height="15.0" fill="rgb(208,48,16)" rx="2" ry="2" />
<text  x="1165.74" y="2071.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (432,727 samples, 0.92%)</title><rect x="547.5" y="1901" width="10.9" height="15.0" fill="rgb(213,172,9)" rx="2" ry="2" />
<text  x="550.54" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="205" width="34.8" height="15.0" fill="rgb(214,2,20)" rx="2" ry="2" />
<text  x="605.52" y="215.5" >st..</text>
</g>
<g >
<title>run_builtin (6,678,022 samples, 14.15%)</title><rect x="661.9" y="2045" width="167.0" height="15.0" fill="rgb(250,107,29)" rx="2" ry="2" />
<text  x="664.88" y="2055.5" >run_builtin</text>
</g>
<g >
<title>do_syscall_64 (3,670,014 samples, 7.78%)</title><rect x="704.0" y="1965" width="91.8" height="15.0" fill="rgb(219,38,26)" rx="2" ry="2" />
<text  x="707.05" y="1975.5" >do_syscall..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (981,928 samples, 2.08%)</title><rect x="637.3" y="2061" width="24.6" height="15.0" fill="rgb(206,151,34)" rx="2" ry="2" />
<text  x="640.33" y="2071.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1389" width="34.8" height="15.0" fill="rgb(205,25,26)" rx="2" ry="2" />
<text  x="605.52" y="1399.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="749" width="34.8" height="15.0" fill="rgb(228,66,50)" rx="2" ry="2" />
<text  x="605.52" y="759.5" >st..</text>
</g>
<g >
<title>__x64_sys_execve (981,928 samples, 2.08%)</title><rect x="637.3" y="2029" width="24.6" height="15.0" fill="rgb(246,79,2)" rx="2" ry="2" />
<text  x="640.33" y="2039.5" >_..</text>
</g>
<g >
<title>unmap_vmas (480,702 samples, 1.02%)</title><rect x="649.9" y="1853" width="12.0" height="15.0" fill="rgb(226,14,46)" rx="2" ry="2" />
<text  x="652.86" y="1863.5" ></text>
</g>
<g >
<title>begin_new_exec (981,928 samples, 2.08%)</title><rect x="637.3" y="1917" width="24.6" height="15.0" fill="rgb(244,199,51)" rx="2" ry="2" />
<text  x="640.33" y="1927.5" >b..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (167,958 samples, 0.36%)</title><rect x="598.3" y="1917" width="4.2" height="15.0" fill="rgb(244,103,23)" rx="2" ry="2" />
<text  x="601.33" y="1927.5" ></text>
</g>
<g >
<title>event_function (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1805" width="30.8" height="15.0" fill="rgb(247,103,47)" rx="2" ry="2" />
<text  x="673.87" y="1815.5" >ev..</text>
</g>
<g >
<title>_dl_relocate_object (512,618 samples, 1.09%)</title><rect x="28.9" y="2029" width="12.8" height="15.0" fill="rgb(244,186,23)" rx="2" ry="2" />
<text  x="31.87" y="2039.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (233,272 samples, 0.49%)</title><rect x="524.5" y="1997" width="5.9" height="15.0" fill="rgb(247,173,49)" rx="2" ry="2" />
<text  x="527.54" y="2007.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (203,144 samples, 0.43%)</title><rect x="1162.7" y="1917" width="5.1" height="15.0" fill="rgb(238,120,52)" rx="2" ry="2" />
<text  x="1165.74" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1709" width="34.8" height="15.0" fill="rgb(229,59,54)" rx="2" ry="2" />
<text  x="605.52" y="1719.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1693" width="34.8" height="15.0" fill="rgb(237,69,2)" rx="2" ry="2" />
<text  x="605.52" y="1703.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (1,326,859 samples, 2.81%)</title><rect x="670.9" y="1965" width="33.1" height="15.0" fill="rgb(252,155,37)" rx="2" ry="2" />
<text  x="673.87" y="1975.5" >do..</text>
</g>
<g >
<title>exit_mm (507,076 samples, 1.07%)</title><rect x="511.9" y="1997" width="12.6" height="15.0" fill="rgb(230,185,9)" rx="2" ry="2" />
<text  x="514.86" y="2007.5" ></text>
</g>
<g >
<title>mprotect (268,797 samples, 0.57%)</title><rect x="41.7" y="2029" width="6.7" height="15.0" fill="rgb(215,153,23)" rx="2" ry="2" />
<text  x="44.69" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1869" width="34.8" height="15.0" fill="rgb(239,63,39)" rx="2" ry="2" />
<text  x="561.36" y="1879.5" >st..</text>
</g>
<g >
<title>perf_mmap__consume (279,358 samples, 0.59%)</title><rect x="801.0" y="1981" width="7.0" height="15.0" fill="rgb(221,21,41)" rx="2" ry="2" />
<text  x="804.03" y="1991.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (208,573 samples, 0.44%)</title><rect x="795.8" y="1917" width="5.2" height="15.0" fill="rgb(213,37,32)" rx="2" ry="2" />
<text  x="798.81" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="285" width="34.8" height="15.0" fill="rgb(243,198,54)" rx="2" ry="2" />
<text  x="605.52" y="295.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1261" width="34.8" height="15.0" fill="rgb(221,129,19)" rx="2" ry="2" />
<text  x="605.52" y="1271.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="333" width="34.8" height="15.0" fill="rgb(252,164,50)" rx="2" ry="2" />
<text  x="605.52" y="343.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1885" width="34.8" height="15.0" fill="rgb(240,46,18)" rx="2" ry="2" />
<text  x="605.52" y="1895.5" >st..</text>
</g>
<g >
<title>start_secondary (13,353,123 samples, 28.29%)</title><rect x="828.9" y="2061" width="333.8" height="15.0" fill="rgb(224,166,42)" rx="2" ry="2" />
<text  x="831.86" y="2071.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="477" width="34.8" height="15.0" fill="rgb(230,134,29)" rx="2" ry="2" />
<text  x="605.52" y="487.5" >st..</text>
</g>
<g >
<title>process_one_work (511,157 samples, 1.08%)</title><rect x="534.8" y="2029" width="12.7" height="15.0" fill="rgb(228,166,40)" rx="2" ry="2" />
<text  x="537.76" y="2039.5" ></text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1661" width="4.2" height="15.0" fill="rgb(226,1,11)" rx="2" ry="2" />
<text  x="601.33" y="1671.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (233,272 samples, 0.49%)</title><rect x="524.5" y="2029" width="5.9" height="15.0" fill="rgb(230,184,25)" rx="2" ry="2" />
<text  x="527.54" y="2039.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (208,573 samples, 0.44%)</title><rect x="795.8" y="1901" width="5.2" height="15.0" fill="rgb(231,178,5)" rx="2" ry="2" />
<text  x="798.81" y="1911.5" ></text>
</g>
<g >
<title>__entry_text_start (125,403 samples, 0.27%)</title><rect x="667.7" y="1981" width="3.2" height="15.0" fill="rgb(234,196,43)" rx="2" ry="2" />
<text  x="670.74" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1549" width="34.8" height="15.0" fill="rgb(231,54,2)" rx="2" ry="2" />
<text  x="605.52" y="1559.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1741" width="4.2" height="15.0" fill="rgb(238,80,25)" rx="2" ry="2" />
<text  x="601.33" y="1751.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1,392,058 samples, 2.95%)</title><rect x="558.4" y="2077" width="34.8" height="15.0" fill="rgb(250,112,20)" rx="2" ry="2" />
<text  x="561.36" y="2087.5" >[l..</text>
</g>
<g >
<title>update_cfs_group (166,817 samples, 0.35%)</title><rect x="733.1" y="1837" width="4.2" height="15.0" fill="rgb(217,66,48)" rx="2" ry="2" />
<text  x="736.15" y="1847.5" ></text>
</g>
<g >
<title>page_remove_file_rmap (507,076 samples, 1.07%)</title><rect x="511.9" y="1853" width="12.6" height="15.0" fill="rgb(253,34,15)" rx="2" ry="2" />
<text  x="514.86" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="637" width="34.8" height="15.0" fill="rgb(238,190,24)" rx="2" ry="2" />
<text  x="605.52" y="647.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (206,164 samples, 0.44%)</title><rect x="593.2" y="1965" width="5.1" height="15.0" fill="rgb(250,86,32)" rx="2" ry="2" />
<text  x="596.17" y="1975.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (83,547 samples, 0.18%)</title><rect x="747.5" y="1789" width="2.1" height="15.0" fill="rgb(215,211,12)" rx="2" ry="2" />
<text  x="750.52" y="1799.5" ></text>
</g>
<g >
<title>__GI___ioctl (1,452,262 samples, 3.08%)</title><rect x="667.7" y="1997" width="36.3" height="15.0" fill="rgb(221,115,48)" rx="2" ry="2" />
<text  x="670.74" y="2007.5" >__G..</text>
</g>
<g >
<title>x86_pmu_enable (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1757" width="30.8" height="15.0" fill="rgb(250,147,54)" rx="2" ry="2" />
<text  x="673.87" y="1767.5" >x8..</text>
</g>
<g >
<title>[unknown] (1,795,622 samples, 3.80%)</title><rect x="10.0" y="2077" width="44.9" height="15.0" fill="rgb(252,62,6)" rx="2" ry="2" />
<text  x="13.00" y="2087.5" >[unk..</text>
</g>
<g >
<title>__libc_start_call_main (374,122 samples, 0.79%)</title><rect x="593.2" y="2077" width="9.3" height="15.0" fill="rgb(242,121,23)" rx="2" ry="2" />
<text  x="596.17" y="2087.5" ></text>
</g>
<g >
<title>handle_mm_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1741" width="6.6" height="15.0" fill="rgb(232,12,24)" rx="2" ry="2" />
<text  x="818.08" y="1751.5" ></text>
</g>
<g >
<title>_perf_event_enable (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1885" width="30.8" height="15.0" fill="rgb(214,26,7)" rx="2" ry="2" />
<text  x="673.87" y="1895.5" >_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="765" width="34.8" height="15.0" fill="rgb(208,118,12)" rx="2" ry="2" />
<text  x="605.52" y="775.5" >st..</text>
</g>
<g >
<title>__update_load_avg_se (84,277 samples, 0.18%)</title><rect x="749.6" y="1821" width="2.1" height="15.0" fill="rgb(219,108,33)" rx="2" ry="2" />
<text  x="752.60" y="1831.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (167,958 samples, 0.36%)</title><rect x="598.3" y="1901" width="4.2" height="15.0" fill="rgb(231,120,18)" rx="2" ry="2" />
<text  x="601.33" y="1911.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,113,060 samples, 2.36%)</title><rect x="801.0" y="1997" width="27.9" height="15.0" fill="rgb(239,196,39)" rx="2" ry="2" />
<text  x="804.03" y="2007.5" >p..</text>
</g>
<g >
<title>free_pgtables (247,406 samples, 0.52%)</title><rect x="637.3" y="1853" width="6.2" height="15.0" fill="rgb(210,211,10)" rx="2" ry="2" />
<text  x="640.33" y="1863.5" ></text>
</g>
<g >
<title>new_sync_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1869" width="13.8" height="15.0" fill="rgb(219,194,16)" rx="2" ry="2" />
<text  x="818.08" y="1879.5" ></text>
</g>
<g >
<title>do_idle (13,353,123 samples, 28.29%)</title><rect x="828.9" y="2029" width="333.8" height="15.0" fill="rgb(239,107,37)" rx="2" ry="2" />
<text  x="831.86" y="2039.5" >do_idle</text>
</g>
<g >
<title>unmap_page_range (507,076 samples, 1.07%)</title><rect x="511.9" y="1917" width="12.6" height="15.0" fill="rgb(237,58,18)" rx="2" ry="2" />
<text  x="514.86" y="1927.5" ></text>
</g>
<g >
<title>unmap_single_vma (480,702 samples, 1.02%)</title><rect x="649.9" y="1837" width="12.0" height="15.0" fill="rgb(223,47,43)" rx="2" ry="2" />
<text  x="652.86" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1229" width="34.8" height="15.0" fill="rgb(248,168,12)" rx="2" ry="2" />
<text  x="605.52" y="1239.5" >st..</text>
</g>
<g >
<title>v8::Function::Call (167,958 samples, 0.36%)</title><rect x="598.3" y="1837" width="4.2" height="15.0" fill="rgb(246,157,5)" rx="2" ry="2" />
<text  x="601.33" y="1847.5" ></text>
</g>
<g >
<title>search_binary_handler (981,928 samples, 2.08%)</title><rect x="637.3" y="1949" width="24.6" height="15.0" fill="rgb(252,107,41)" rx="2" ry="2" />
<text  x="640.33" y="1959.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1501" width="34.8" height="15.0" fill="rgb(235,161,46)" rx="2" ry="2" />
<text  x="605.52" y="1511.5" >st..</text>
</g>
<g >
<title>sched_setaffinity (3,596,930 samples, 7.62%)</title><rect x="705.9" y="1933" width="89.9" height="15.0" fill="rgb(205,116,29)" rx="2" ry="2" />
<text  x="708.88" y="1943.5" >sched_seta..</text>
</g>
<g >
<title>change_protection (268,797 samples, 0.57%)</title><rect x="41.7" y="1933" width="6.7" height="15.0" fill="rgb(208,80,35)" rx="2" ry="2" />
<text  x="44.69" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="445" width="34.8" height="15.0" fill="rgb(232,92,0)" rx="2" ry="2" />
<text  x="605.52" y="455.5" >st..</text>
</g>
<g >
<title>unmap_page_range (239,543 samples, 0.51%)</title><rect x="655.9" y="1821" width="6.0" height="15.0" fill="rgb(208,198,21)" rx="2" ry="2" />
<text  x="658.89" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1901" width="34.8" height="15.0" fill="rgb(220,143,27)" rx="2" ry="2" />
<text  x="605.52" y="1911.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1373" width="34.8" height="15.0" fill="rgb(226,172,35)" rx="2" ry="2" />
<text  x="605.52" y="1383.5" >st..</text>
</g>
<g >
<title>perf-exec (981,928 samples, 2.08%)</title><rect x="637.3" y="2093" width="24.6" height="15.0" fill="rgb(225,51,21)" rx="2" ry="2" />
<text  x="640.33" y="2103.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1533" width="34.8" height="15.0" fill="rgb(247,115,37)" rx="2" ry="2" />
<text  x="605.52" y="1543.5" >st..</text>
</g>
<g >
<title>worker_thread (175,588 samples, 0.37%)</title><rect x="530.4" y="2045" width="4.4" height="15.0" fill="rgb(243,47,17)" rx="2" ry="2" />
<text  x="533.37" y="2055.5" ></text>
</g>
<g >
<title>_find_next_bit (236,479 samples, 0.50%)</title><rect x="1173.0" y="1805" width="5.9" height="15.0" fill="rgb(217,3,48)" rx="2" ry="2" />
<text  x="1175.98" y="1815.5" ></text>
</g>
<g >
<title>do_syscall_64 (268,797 samples, 0.57%)</title><rect x="41.7" y="1997" width="6.7" height="15.0" fill="rgb(218,42,44)" rx="2" ry="2" />
<text  x="44.69" y="2007.5" ></text>
</g>
<g >
<title>[unknown] (887,266 samples, 1.88%)</title><rect x="1167.8" y="2077" width="22.2" height="15.0" fill="rgb(206,155,25)" rx="2" ry="2" />
<text  x="1170.82" y="2087.5" >[..</text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (167,958 samples, 0.36%)</title><rect x="598.3" y="1885" width="4.2" height="15.0" fill="rgb(235,210,18)" rx="2" ry="2" />
<text  x="601.33" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1997" width="34.8" height="15.0" fill="rgb(221,1,43)" rx="2" ry="2" />
<text  x="605.52" y="2007.5" >st..</text>
</g>
<g >
<title>ksys_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1901" width="13.8" height="15.0" fill="rgb(245,172,49)" rx="2" ry="2" />
<text  x="818.08" y="1911.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (282,613 samples, 0.60%)</title><rect x="808.0" y="1981" width="7.1" height="15.0" fill="rgb(249,134,9)" rx="2" ry="2" />
<text  x="811.01" y="1991.5" ></text>
</g>
<g >
<title>reweight_entity (82,857 samples, 0.18%)</title><rect x="735.2" y="1821" width="2.1" height="15.0" fill="rgb(221,120,32)" rx="2" ry="2" />
<text  x="738.25" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1885" width="34.8" height="15.0" fill="rgb(212,23,27)" rx="2" ry="2" />
<text  x="561.36" y="1895.5" >st..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (507,076 samples, 1.07%)</title><rect x="511.9" y="1901" width="12.6" height="15.0" fill="rgb(243,123,14)" rx="2" ry="2" />
<text  x="514.86" y="1911.5" ></text>
</g>
<g >
<title>generic_perform_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1821" width="13.8" height="15.0" fill="rgb(224,220,45)" rx="2" ry="2" />
<text  x="818.08" y="1831.5" ></text>
</g>
<g >
<title>ret_from_fork (511,157 samples, 1.08%)</title><rect x="534.8" y="2077" width="12.7" height="15.0" fill="rgb(216,72,54)" rx="2" ry="2" />
<text  x="537.76" y="2087.5" ></text>
</g>
<g >
<title>exc_page_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1773" width="6.6" height="15.0" fill="rgb(223,212,34)" rx="2" ry="2" />
<text  x="818.08" y="1783.5" ></text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1677" width="4.2" height="15.0" fill="rgb(208,215,2)" rx="2" ry="2" />
<text  x="601.33" y="1687.5" ></text>
</g>
<g >
<title>hrtick_update (84,265 samples, 0.18%)</title><rect x="762.3" y="1869" width="2.1" height="15.0" fill="rgb(218,207,54)" rx="2" ry="2" />
<text  x="765.28" y="1879.5" ></text>
</g>
<g >
<title>tick_nohz_restart (206,425 samples, 0.44%)</title><rect x="1157.6" y="1997" width="5.1" height="15.0" fill="rgb(242,166,40)" rx="2" ry="2" />
<text  x="1160.57" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1837" width="34.8" height="15.0" fill="rgb(254,227,53)" rx="2" ry="2" />
<text  x="605.52" y="1847.5" >st..</text>
</g>
<g >
<title>migrate_task_rq_fair (432,727 samples, 0.92%)</title><rect x="547.5" y="1965" width="10.9" height="15.0" fill="rgb(254,181,43)" rx="2" ry="2" />
<text  x="550.54" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1469" width="34.8" height="15.0" fill="rgb(206,65,51)" rx="2" ry="2" />
<text  x="605.52" y="1479.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="845" width="34.8" height="15.0" fill="rgb(212,154,38)" rx="2" ry="2" />
<text  x="605.52" y="855.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (206,164 samples, 0.44%)</title><rect x="593.2" y="1949" width="5.1" height="15.0" fill="rgb(217,151,6)" rx="2" ry="2" />
<text  x="596.17" y="1959.5" ></text>
</g>
<g >
<title>__bitmap_weight (173,128 samples, 0.37%)</title><rect x="779.2" y="1853" width="4.3" height="15.0" fill="rgb(206,17,46)" rx="2" ry="2" />
<text  x="782.18" y="1863.5" ></text>
</g>
<g >
<title>kthread (511,157 samples, 1.08%)</title><rect x="534.8" y="2061" width="12.7" height="15.0" fill="rgb(252,26,10)" rx="2" ry="2" />
<text  x="537.76" y="2071.5" ></text>
</g>
<g >
<title>page_remove_rmap (507,076 samples, 1.07%)</title><rect x="511.9" y="1869" width="12.6" height="15.0" fill="rgb(238,146,23)" rx="2" ry="2" />
<text  x="514.86" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="493" width="34.8" height="15.0" fill="rgb(254,4,13)" rx="2" ry="2" />
<text  x="605.52" y="503.5" >st..</text>
</g>
<g >
<title>ret_from_fork (175,588 samples, 0.37%)</title><rect x="530.4" y="2077" width="4.4" height="15.0" fill="rgb(229,173,27)" rx="2" ry="2" />
<text  x="533.37" y="2087.5" ></text>
</g>
<g >
<title>mmap_region (233,272 samples, 0.49%)</title><rect x="524.5" y="1965" width="5.9" height="15.0" fill="rgb(239,136,25)" rx="2" ry="2" />
<text  x="527.54" y="1975.5" ></text>
</g>
<g >
<title>schedule (206,164 samples, 0.44%)</title><rect x="593.2" y="1853" width="5.1" height="15.0" fill="rgb(225,193,51)" rx="2" ry="2" />
<text  x="596.17" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="365" width="34.8" height="15.0" fill="rgb(238,185,14)" rx="2" ry="2" />
<text  x="605.52" y="375.5" >st..</text>
</g>
<g >
<title>change_p4d_range (268,797 samples, 0.57%)</title><rect x="41.7" y="1901" width="6.7" height="15.0" fill="rgb(237,59,16)" rx="2" ry="2" />
<text  x="44.69" y="1911.5" ></text>
</g>
<g >
<title>handle_pte_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1709" width="6.6" height="15.0" fill="rgb(236,141,4)" rx="2" ry="2" />
<text  x="818.08" y="1719.5" ></text>
</g>
<g >
<title>wall_seconds (15,269,475 samples, 32.36%)</title><rect x="117.3" y="2029" width="381.8" height="15.0" fill="rgb(240,157,35)" rx="2" ry="2" />
<text  x="120.30" y="2039.5" >wall_seconds</text>
</g>
<g >
<title>acpi_cpufreq_target (511,157 samples, 1.08%)</title><rect x="534.8" y="1949" width="12.7" height="15.0" fill="rgb(233,20,52)" rx="2" ry="2" />
<text  x="537.76" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1709" width="34.8" height="15.0" fill="rgb(219,176,40)" rx="2" ry="2" />
<text  x="561.36" y="1719.5" >st..</text>
</g>
<g >
<title>put_prev_task_fair (338,926 samples, 0.72%)</title><rect x="770.7" y="1869" width="8.5" height="15.0" fill="rgb(206,194,21)" rx="2" ry="2" />
<text  x="773.70" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="797" width="34.8" height="15.0" fill="rgb(230,110,50)" rx="2" ry="2" />
<text  x="605.52" y="807.5" >st..</text>
</g>
<g >
<title>remote_function (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1821" width="30.8" height="15.0" fill="rgb(209,136,25)" rx="2" ry="2" />
<text  x="673.87" y="1831.5" >re..</text>
</g>
<g >
<title>uv__read (167,958 samples, 0.36%)</title><rect x="598.3" y="1949" width="4.2" height="15.0" fill="rgb(217,66,5)" rx="2" ry="2" />
<text  x="601.33" y="1959.5" ></text>
</g>
<g >
<title>do_syscall_64 (981,928 samples, 2.08%)</title><rect x="637.3" y="2045" width="24.6" height="15.0" fill="rgb(216,103,16)" rx="2" ry="2" />
<text  x="640.33" y="2055.5" >d..</text>
</g>
<g >
<title>schedule (175,588 samples, 0.37%)</title><rect x="530.4" y="2029" width="4.4" height="15.0" fill="rgb(245,200,34)" rx="2" ry="2" />
<text  x="533.37" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="125" width="34.8" height="15.0" fill="rgb(222,218,4)" rx="2" ry="2" />
<text  x="605.52" y="135.5" >st..</text>
</g>
<g >
<title>__evlist__disable.constprop.0 (234,113 samples, 0.50%)</title><rect x="661.9" y="2013" width="5.8" height="15.0" fill="rgb(251,190,14)" rx="2" ry="2" />
<text  x="664.88" y="2023.5" ></text>
</g>
<g >
<title>__pow_finite@GLIBC_2.15 (238,902 samples, 0.51%)</title><rect x="22.9" y="2029" width="6.0" height="15.0" fill="rgb(216,204,35)" rx="2" ry="2" />
<text  x="25.90" y="2039.5" ></text>
</g>
<g >
<title>remove_vma (253,820 samples, 0.54%)</title><rect x="643.5" y="1853" width="6.4" height="15.0" fill="rgb(249,176,11)" rx="2" ry="2" />
<text  x="646.52" y="1863.5" ></text>
</g>
<g >
<title>vm_area_free (253,820 samples, 0.54%)</title><rect x="643.5" y="1837" width="6.4" height="15.0" fill="rgb(225,157,49)" rx="2" ry="2" />
<text  x="646.52" y="1847.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (167,958 samples, 0.36%)</title><rect x="598.3" y="1869" width="4.2" height="15.0" fill="rgb(245,209,10)" rx="2" ry="2" />
<text  x="601.33" y="1879.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (203,144 samples, 0.43%)</title><rect x="1162.7" y="2045" width="5.1" height="15.0" fill="rgb(220,32,46)" rx="2" ry="2" />
<text  x="1165.74" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="717" width="34.8" height="15.0" fill="rgb(242,85,33)" rx="2" ry="2" />
<text  x="605.52" y="727.5" >st..</text>
</g>
<g >
<title>detach_entity_cfs_rq (432,727 samples, 0.92%)</title><rect x="547.5" y="1949" width="10.9" height="15.0" fill="rgb(213,21,36)" rx="2" ry="2" />
<text  x="550.54" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="861" width="34.8" height="15.0" fill="rgb(212,64,54)" rx="2" ry="2" />
<text  x="605.52" y="871.5" >st..</text>
</g>
<g >
<title>__target_index (511,157 samples, 1.08%)</title><rect x="534.8" y="1965" width="12.7" height="15.0" fill="rgb(249,37,3)" rx="2" ry="2" />
<text  x="537.76" y="1975.5" ></text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (206,425 samples, 0.44%)</title><rect x="1157.6" y="1965" width="5.1" height="15.0" fill="rgb(232,101,36)" rx="2" ry="2" />
<text  x="1160.57" y="1975.5" ></text>
</g>
<g >
<title>worker_thread (511,157 samples, 1.08%)</title><rect x="534.8" y="2045" width="12.7" height="15.0" fill="rgb(240,229,27)" rx="2" ry="2" />
<text  x="537.76" y="2055.5" ></text>
</g>
<g >
<title>__schedule (206,164 samples, 0.44%)</title><rect x="593.2" y="1837" width="5.1" height="15.0" fill="rgb(247,149,14)" rx="2" ry="2" />
<text  x="596.17" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="941" width="34.8" height="15.0" fill="rgb(235,96,36)" rx="2" ry="2" />
<text  x="605.52" y="951.5" >st..</text>
</g>
<g >
<title>Timer::calibrate (17,765,113 samples, 37.64%)</title><rect x="54.9" y="2045" width="444.2" height="15.0" fill="rgb(224,83,4)" rx="2" ry="2" />
<text  x="57.90" y="2055.5" >Timer::calibrate</text>
</g>
<g >
<title>__evlist__enable.constprop.0 (5,122,276 samples, 10.85%)</title><rect x="667.7" y="2013" width="128.1" height="15.0" fill="rgb(206,15,23)" rx="2" ry="2" />
<text  x="670.74" y="2023.5" >__evlist__enable..</text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (1,392,058 samples, 2.95%)</title><rect x="558.4" y="2061" width="34.8" height="15.0" fill="rgb(214,136,17)" rx="2" ry="2" />
<text  x="561.36" y="2071.5" >st..</text>
</g>
<g >
<title>do_lookup_x (510,754 samples, 1.08%)</title><rect x="499.1" y="2077" width="12.8" height="15.0" fill="rgb(218,182,39)" rx="2" ry="2" />
<text  x="502.09" y="2087.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (208,573 samples, 0.44%)</title><rect x="795.8" y="2013" width="5.2" height="15.0" fill="rgb(233,116,48)" rx="2" ry="2" />
<text  x="798.81" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="573" width="34.8" height="15.0" fill="rgb(236,3,47)" rx="2" ry="2" />
<text  x="605.52" y="583.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1357" width="34.8" height="15.0" fill="rgb(216,46,52)" rx="2" ry="2" />
<text  x="605.52" y="1367.5" >st..</text>
</g>
<g >
<title>pick_next_task (175,588 samples, 0.37%)</title><rect x="530.4" y="1997" width="4.4" height="15.0" fill="rgb(208,170,36)" rx="2" ry="2" />
<text  x="533.37" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="173" width="34.8" height="15.0" fill="rgb(222,49,20)" rx="2" ry="2" />
<text  x="605.52" y="183.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1805" width="34.8" height="15.0" fill="rgb(237,156,31)" rx="2" ry="2" />
<text  x="605.52" y="1815.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1213" width="34.8" height="15.0" fill="rgb(245,198,33)" rx="2" ry="2" />
<text  x="605.52" y="1223.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1085" width="34.8" height="15.0" fill="rgb(235,36,14)" rx="2" ry="2" />
<text  x="605.52" y="1095.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="781" width="34.8" height="15.0" fill="rgb(228,178,30)" rx="2" ry="2" />
<text  x="605.52" y="791.5" >st..</text>
</g>
<g >
<title>perf_event_for_each_child (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1901" width="30.8" height="15.0" fill="rgb(240,90,40)" rx="2" ry="2" />
<text  x="673.87" y="1911.5" >pe..</text>
</g>
<g >
<title>dequeue_entity (1,324,376 samples, 2.81%)</title><rect x="718.6" y="1853" width="33.1" height="15.0" fill="rgb(245,170,31)" rx="2" ry="2" />
<text  x="721.60" y="1863.5" >de..</text>
</g>
<g >
<title>uv__io_poll (167,958 samples, 0.36%)</title><rect x="598.3" y="1981" width="4.2" height="15.0" fill="rgb(232,71,31)" rx="2" ry="2" />
<text  x="601.33" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1517" width="34.8" height="15.0" fill="rgb(238,112,8)" rx="2" ry="2" />
<text  x="605.52" y="1527.5" >st..</text>
</g>
<g >
<title>memory_stat_show (680,629 samples, 1.44%)</title><rect x="1173.0" y="1885" width="17.0" height="15.0" fill="rgb(242,168,16)" rx="2" ry="2" />
<text  x="1175.98" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1181" width="34.8" height="15.0" fill="rgb(214,217,18)" rx="2" ry="2" />
<text  x="605.52" y="1191.5" >st..</text>
</g>
<g >
<title>event_function_call (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1869" width="30.8" height="15.0" fill="rgb(210,153,27)" rx="2" ry="2" />
<text  x="673.87" y="1879.5" >ev..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="509" width="34.8" height="15.0" fill="rgb(231,3,26)" rx="2" ry="2" />
<text  x="605.52" y="519.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1757" width="4.2" height="15.0" fill="rgb(206,23,4)" rx="2" ry="2" />
<text  x="601.33" y="1767.5" ></text>
</g>
<g >
<title>psi_group_change (206,164 samples, 0.44%)</title><rect x="593.2" y="1805" width="5.1" height="15.0" fill="rgb(233,220,49)" rx="2" ry="2" />
<text  x="596.17" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1629" width="34.8" height="15.0" fill="rgb(247,151,15)" rx="2" ry="2" />
<text  x="605.52" y="1639.5" >st..</text>
</g>
<g >
<title>get_user_cpu_mask (73,084 samples, 0.15%)</title><rect x="704.0" y="1933" width="1.9" height="15.0" fill="rgb(251,20,40)" rx="2" ry="2" />
<text  x="707.05" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="413" width="34.8" height="15.0" fill="rgb(226,200,36)" rx="2" ry="2" />
<text  x="605.52" y="423.5" >st..</text>
</g>
<g >
<title>__x64_sys_ioctl (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1949" width="30.8" height="15.0" fill="rgb(238,7,13)" rx="2" ry="2" />
<text  x="673.87" y="1959.5" >__..</text>
</g>
<g >
<title>InotifyBackend::start (1,392,058 samples, 2.95%)</title><rect x="558.4" y="2045" width="34.8" height="15.0" fill="rgb(228,177,41)" rx="2" ry="2" />
<text  x="561.36" y="2055.5" >In..</text>
</g>
<g >
<title>exc_page_fault (243,599 samples, 0.52%)</title><rect x="16.8" y="2029" width="6.1" height="15.0" fill="rgb(236,121,2)" rx="2" ry="2" />
<text  x="19.81" y="2039.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (175,588 samples, 0.37%)</title><rect x="530.4" y="1901" width="4.4" height="15.0" fill="rgb(239,165,48)" rx="2" ry="2" />
<text  x="533.37" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1037" width="34.8" height="15.0" fill="rgb(244,34,3)" rx="2" ry="2" />
<text  x="605.52" y="1047.5" >st..</text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (284,305 samples, 0.60%)</title><rect x="821.7" y="1805" width="7.2" height="15.0" fill="rgb(251,124,15)" rx="2" ry="2" />
<text  x="824.75" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1677" width="34.8" height="15.0" fill="rgb(209,170,53)" rx="2" ry="2" />
<text  x="605.52" y="1687.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (208,573 samples, 0.44%)</title><rect x="795.8" y="1965" width="5.2" height="15.0" fill="rgb(235,73,43)" rx="2" ry="2" />
<text  x="798.81" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="349" width="34.8" height="15.0" fill="rgb(243,134,8)" rx="2" ry="2" />
<text  x="605.52" y="359.5" >st..</text>
</g>
<g >
<title>tick_nohz_idle_exit (206,425 samples, 0.44%)</title><rect x="1157.6" y="2013" width="5.1" height="15.0" fill="rgb(206,100,48)" rx="2" ry="2" />
<text  x="1160.57" y="2023.5" ></text>
</g>
<g >
<title>native_write_msr (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1725" width="30.8" height="15.0" fill="rgb(253,21,7)" rx="2" ry="2" />
<text  x="673.87" y="1735.5" >na..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1053" width="34.8" height="15.0" fill="rgb(253,43,12)" rx="2" ry="2" />
<text  x="605.52" y="1063.5" >st..</text>
</g>
<g >
<title>do_group_exit (507,076 samples, 1.07%)</title><rect x="511.9" y="2029" width="12.6" height="15.0" fill="rgb(231,1,34)" rx="2" ry="2" />
<text  x="514.86" y="2039.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (84,966 samples, 0.18%)</title><rect x="731.0" y="1837" width="2.1" height="15.0" fill="rgb(253,191,2)" rx="2" ry="2" />
<text  x="734.03" y="1847.5" ></text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1645" width="4.2" height="15.0" fill="rgb(251,62,4)" rx="2" ry="2" />
<text  x="601.33" y="1655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="621" width="34.8" height="15.0" fill="rgb(247,104,28)" rx="2" ry="2" />
<text  x="605.52" y="631.5" >st..</text>
</g>
<g >
<title>mprotect_fixup (268,797 samples, 0.57%)</title><rect x="41.7" y="1949" width="6.7" height="15.0" fill="rgb(247,137,36)" rx="2" ry="2" />
<text  x="44.69" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="317" width="34.8" height="15.0" fill="rgb(241,83,28)" rx="2" ry="2" />
<text  x="605.52" y="327.5" >st..</text>
</g>
<g >
<title>put_prev_entity (252,488 samples, 0.54%)</title><rect x="764.4" y="1869" width="6.3" height="15.0" fill="rgb(245,168,51)" rx="2" ry="2" />
<text  x="767.39" y="1879.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (253,820 samples, 0.54%)</title><rect x="643.5" y="1805" width="6.4" height="15.0" fill="rgb(217,203,36)" rx="2" ry="2" />
<text  x="646.52" y="1815.5" ></text>
</g>
<g >
<title>dl_main (1,020,317 samples, 2.16%)</title><rect x="22.9" y="2045" width="25.5" height="15.0" fill="rgb(239,39,7)" rx="2" ry="2" />
<text  x="25.90" y="2055.5" >d..</text>
</g>
<g >
<title>cgroup_seqfile_show (680,629 samples, 1.44%)</title><rect x="1173.0" y="1901" width="17.0" height="15.0" fill="rgb(237,117,3)" rx="2" ry="2" />
<text  x="1175.98" y="1911.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (432,727 samples, 0.92%)</title><rect x="547.5" y="2029" width="10.9" height="15.0" fill="rgb(236,99,44)" rx="2" ry="2" />
<text  x="550.54" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="957" width="34.8" height="15.0" fill="rgb(232,153,40)" rx="2" ry="2" />
<text  x="605.52" y="967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1597" width="34.8" height="15.0" fill="rgb(251,29,0)" rx="2" ry="2" />
<text  x="605.52" y="1607.5" >st..</text>
</g>
<g >
<title>load_balance (175,588 samples, 0.37%)</title><rect x="530.4" y="1949" width="4.4" height="15.0" fill="rgb(231,38,17)" rx="2" ry="2" />
<text  x="533.37" y="1959.5" ></text>
</g>
<g >
<title>__remove_hrtimer (206,425 samples, 0.44%)</title><rect x="1157.6" y="1949" width="5.1" height="15.0" fill="rgb(247,56,13)" rx="2" ry="2" />
<text  x="1160.57" y="1959.5" ></text>
</g>
<g >
<title>read (680,629 samples, 1.44%)</title><rect x="1173.0" y="2061" width="17.0" height="15.0" fill="rgb(205,159,12)" rx="2" ry="2" />
<text  x="1175.98" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1245" width="34.8" height="15.0" fill="rgb(242,228,50)" rx="2" ry="2" />
<text  x="605.52" y="1255.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1613" width="34.8" height="15.0" fill="rgb(241,110,49)" rx="2" ry="2" />
<text  x="605.52" y="1623.5" >st..</text>
</g>
<g >
<title>zap_pte_range (239,543 samples, 0.51%)</title><rect x="655.9" y="1789" width="6.0" height="15.0" fill="rgb(249,167,7)" rx="2" ry="2" />
<text  x="658.89" y="1799.5" ></text>
</g>
<g >
<title>cpuidle_enter (12,757,375 samples, 27.03%)</title><rect x="833.4" y="1997" width="319.0" height="15.0" fill="rgb(221,35,30)" rx="2" ry="2" />
<text  x="836.42" y="2007.5" >cpuidle_enter</text>
</g>
<g >
<title>kthread (175,588 samples, 0.37%)</title><rect x="530.4" y="2061" width="4.4" height="15.0" fill="rgb(244,190,48)" rx="2" ry="2" />
<text  x="533.37" y="2071.5" ></text>
</g>
<g >
<title>systemd-oomd (887,266 samples, 1.88%)</title><rect x="1167.8" y="2093" width="22.2" height="15.0" fill="rgb(226,91,42)" rx="2" ry="2" />
<text  x="1170.82" y="2103.5" >s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="141" width="34.8" height="15.0" fill="rgb(232,111,34)" rx="2" ry="2" />
<text  x="605.52" y="151.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="2061" width="34.8" height="15.0" fill="rgb(220,146,15)" rx="2" ry="2" />
<text  x="605.52" y="2071.5" >st..</text>
</g>
<g >
<title>psi_task_switch (206,164 samples, 0.44%)</title><rect x="593.2" y="1821" width="5.1" height="15.0" fill="rgb(236,23,29)" rx="2" ry="2" />
<text  x="596.17" y="1831.5" ></text>
</g>
<g >
<title>__libc_start_call_main (17,765,113 samples, 37.64%)</title><rect x="54.9" y="2077" width="444.2" height="15.0" fill="rgb(251,5,18)" rx="2" ry="2" />
<text  x="57.90" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>rest_init (203,144 samples, 0.43%)</title><rect x="1162.7" y="1997" width="5.1" height="15.0" fill="rgb(229,119,44)" rx="2" ry="2" />
<text  x="1165.74" y="2007.5" ></text>
</g>
<g >
<title>main (6,678,022 samples, 14.15%)</title><rect x="661.9" y="2061" width="167.0" height="15.0" fill="rgb(253,6,17)" rx="2" ry="2" />
<text  x="664.88" y="2071.5" >main</text>
</g>
<g >
<title>__mem_cgroup_flush_stats (680,629 samples, 1.44%)</title><rect x="1173.0" y="1853" width="17.0" height="15.0" fill="rgb(229,110,52)" rx="2" ry="2" />
<text  x="1175.98" y="1863.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (253,820 samples, 0.54%)</title><rect x="643.5" y="1773" width="6.4" height="15.0" fill="rgb(237,215,36)" rx="2" ry="2" />
<text  x="646.52" y="1783.5" ></text>
</g>
<g >
<title>smp_call_function_single (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1853" width="30.8" height="15.0" fill="rgb(215,41,11)" rx="2" ry="2" />
<text  x="673.87" y="1863.5" >sm..</text>
</g>
<g >
<title>cgroup_rstat_updated (242,731 samples, 0.51%)</title><rect x="743.5" y="1805" width="6.1" height="15.0" fill="rgb(210,105,6)" rx="2" ry="2" />
<text  x="746.54" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="525" width="34.8" height="15.0" fill="rgb(233,195,39)" rx="2" ry="2" />
<text  x="605.52" y="535.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1757" width="6.6" height="15.0" fill="rgb(249,12,40)" rx="2" ry="2" />
<text  x="818.08" y="1767.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (374,122 samples, 0.79%)</title><rect x="593.2" y="2029" width="9.3" height="15.0" fill="rgb(237,144,21)" rx="2" ry="2" />
<text  x="596.17" y="2039.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (203,144 samples, 0.43%)</title><rect x="1162.7" y="1949" width="5.1" height="15.0" fill="rgb(243,136,2)" rx="2" ry="2" />
<text  x="1165.74" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1325" width="34.8" height="15.0" fill="rgb(241,222,0)" rx="2" ry="2" />
<text  x="605.52" y="1335.5" >st..</text>
</g>
<g >
<title>vfs_read (680,629 samples, 1.44%)</title><rect x="1173.0" y="1981" width="17.0" height="15.0" fill="rgb(227,144,8)" rx="2" ry="2" />
<text  x="1175.98" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1837" width="34.8" height="15.0" fill="rgb(223,162,34)" rx="2" ry="2" />
<text  x="561.36" y="1847.5" >st..</text>
</g>
<g >
<title>dequeue_task_fair (1,914,294 samples, 4.06%)</title><rect x="712.2" y="1869" width="47.9" height="15.0" fill="rgb(248,172,16)" rx="2" ry="2" />
<text  x="715.23" y="1879.5" >dequ..</text>
</g>
<g >
<title>node (3,158,238 samples, 6.69%)</title><rect x="558.4" y="2093" width="78.9" height="15.0" fill="rgb(231,198,5)" rx="2" ry="2" />
<text  x="561.36" y="2103.5" >node</text>
</g>
<g >
<title>newidle_balance (175,588 samples, 0.37%)</title><rect x="530.4" y="1965" width="4.4" height="15.0" fill="rgb(246,4,2)" rx="2" ry="2" />
<text  x="533.37" y="1975.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (167,958 samples, 0.36%)</title><rect x="598.3" y="1821" width="4.2" height="15.0" fill="rgb(231,31,0)" rx="2" ry="2" />
<text  x="601.33" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="2029" width="34.8" height="15.0" fill="rgb(214,118,39)" rx="2" ry="2" />
<text  x="605.52" y="2039.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="973" width="34.8" height="15.0" fill="rgb(231,101,34)" rx="2" ry="2" />
<text  x="605.52" y="983.5" >st..</text>
</g>
<g >
<title>ctx_resched (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1773" width="30.8" height="15.0" fill="rgb(226,92,31)" rx="2" ry="2" />
<text  x="673.87" y="1783.5" >ct..</text>
</g>
<g >
<title>change_protection_range (268,797 samples, 0.57%)</title><rect x="41.7" y="1917" width="6.7" height="15.0" fill="rgb(211,77,25)" rx="2" ry="2" />
<text  x="44.69" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1853" width="34.8" height="15.0" fill="rgb(230,45,35)" rx="2" ry="2" />
<text  x="561.36" y="1863.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1293" width="34.8" height="15.0" fill="rgb(249,22,26)" rx="2" ry="2" />
<text  x="605.52" y="1303.5" >st..</text>
</g>
<g >
<title>std::vector&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt; &gt;::vector (1,392,058 samples, 2.95%)</title><rect x="602.5" y="61" width="34.8" height="15.0" fill="rgb(214,106,45)" rx="2" ry="2" />
<text  x="605.52" y="71.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="2045" width="34.8" height="15.0" fill="rgb(217,73,32)" rx="2" ry="2" />
<text  x="605.52" y="2055.5" >st..</text>
</g>
<g >
<title>exec_mmap (981,928 samples, 2.08%)</title><rect x="637.3" y="1901" width="24.6" height="15.0" fill="rgb(250,33,4)" rx="2" ry="2" />
<text  x="640.33" y="1911.5" >e..</text>
</g>
<g >
<title>smpboot_thread_fn (432,727 samples, 0.92%)</title><rect x="547.5" y="2045" width="10.9" height="15.0" fill="rgb(219,190,19)" rx="2" ry="2" />
<text  x="550.54" y="2055.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (247,406 samples, 0.52%)</title><rect x="637.3" y="1837" width="6.2" height="15.0" fill="rgb(223,29,0)" rx="2" ry="2" />
<text  x="640.33" y="1847.5" ></text>
</g>
<g >
<title>start_kernel (203,144 samples, 0.43%)</title><rect x="1162.7" y="2029" width="5.1" height="15.0" fill="rgb(217,139,28)" rx="2" ry="2" />
<text  x="1165.74" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="877" width="34.8" height="15.0" fill="rgb(213,193,47)" rx="2" ry="2" />
<text  x="605.52" y="887.5" >st..</text>
</g>
<g >
<title>switch_mm_irqs_off (201,234 samples, 0.43%)</title><rect x="833.4" y="1949" width="5.1" height="15.0" fill="rgb(238,8,22)" rx="2" ry="2" />
<text  x="836.42" y="1959.5" ></text>
</g>
<g >
<title>do_mmap (233,272 samples, 0.49%)</title><rect x="524.5" y="1981" width="5.9" height="15.0" fill="rgb(244,124,3)" rx="2" ry="2" />
<text  x="527.54" y="1991.5" ></text>
</g>
<g >
<title>generic_exec_single (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1837" width="30.8" height="15.0" fill="rgb(238,138,54)" rx="2" ry="2" />
<text  x="673.87" y="1847.5" >ge..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (239,543 samples, 0.51%)</title><rect x="655.9" y="1805" width="6.0" height="15.0" fill="rgb(230,126,10)" rx="2" ry="2" />
<text  x="658.89" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1645" width="34.8" height="15.0" fill="rgb(223,0,6)" rx="2" ry="2" />
<text  x="605.52" y="1655.5" >st..</text>
</g>
<g >
<title>do_epoll_wait (206,164 samples, 0.44%)</title><rect x="593.2" y="1917" width="5.1" height="15.0" fill="rgb(226,108,38)" rx="2" ry="2" />
<text  x="596.17" y="1927.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (253,820 samples, 0.54%)</title><rect x="643.5" y="1789" width="6.4" height="15.0" fill="rgb(223,14,30)" rx="2" ry="2" />
<text  x="646.52" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="701" width="34.8" height="15.0" fill="rgb(247,130,7)" rx="2" ry="2" />
<text  x="605.52" y="711.5" >st..</text>
</g>
<g >
<title>__GI___ioctl (234,113 samples, 0.50%)</title><rect x="661.9" y="1997" width="5.8" height="15.0" fill="rgb(238,199,25)" rx="2" ry="2" />
<text  x="664.88" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1485" width="34.8" height="15.0" fill="rgb(216,141,32)" rx="2" ry="2" />
<text  x="605.52" y="1495.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1757" width="34.8" height="15.0" fill="rgb(231,35,14)" rx="2" ry="2" />
<text  x="561.36" y="1767.5" >st..</text>
</g>
<g >
<title>perf_ioctl (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1933" width="30.8" height="15.0" fill="rgb(228,72,52)" rx="2" ry="2" />
<text  x="673.87" y="1943.5" >pe..</text>
</g>
<g >
<title>node::Start (374,122 samples, 0.79%)</title><rect x="593.2" y="2061" width="9.3" height="15.0" fill="rgb(216,91,9)" rx="2" ry="2" />
<text  x="596.17" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1069" width="34.8" height="15.0" fill="rgb(217,186,29)" rx="2" ry="2" />
<text  x="605.52" y="1079.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1725" width="4.2" height="15.0" fill="rgb(210,9,34)" rx="2" ry="2" />
<text  x="601.33" y="1735.5" ></text>
</g>
<g >
<title>set_cpus_allowed_common (173,128 samples, 0.37%)</title><rect x="779.2" y="1869" width="4.3" height="15.0" fill="rgb(227,82,21)" rx="2" ry="2" />
<text  x="782.18" y="1879.5" ></text>
</g>
<g >
<title>vfs_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1885" width="13.8" height="15.0" fill="rgb(239,111,28)" rx="2" ry="2" />
<text  x="818.08" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1821" width="34.8" height="15.0" fill="rgb(248,35,46)" rx="2" ry="2" />
<text  x="561.36" y="1831.5" >st..</text>
</g>
<g >
<title>__cpufreq_driver_target (511,157 samples, 1.08%)</title><rect x="534.8" y="1981" width="12.7" height="15.0" fill="rgb(212,2,12)" rx="2" ry="2" />
<text  x="537.76" y="1991.5" ></text>
</g>
<g >
<title>__schedule (175,588 samples, 0.37%)</title><rect x="530.4" y="2013" width="4.4" height="15.0" fill="rgb(254,183,28)" rx="2" ry="2" />
<text  x="533.37" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1949" width="34.8" height="15.0" fill="rgb(243,191,24)" rx="2" ry="2" />
<text  x="561.36" y="1959.5" >st..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (206,849 samples, 0.44%)</title><rect x="1152.4" y="1997" width="5.2" height="15.0" fill="rgb(226,204,17)" rx="2" ry="2" />
<text  x="1155.40" y="2007.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (208,573 samples, 0.44%)</title><rect x="795.8" y="1949" width="5.2" height="15.0" fill="rgb(220,72,13)" rx="2" ry="2" />
<text  x="798.81" y="1959.5" ></text>
</g>
<g >
<title>mmput (981,928 samples, 2.08%)</title><rect x="637.3" y="1885" width="24.6" height="15.0" fill="rgb(246,120,26)" rx="2" ry="2" />
<text  x="640.33" y="1895.5" >m..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="925" width="34.8" height="15.0" fill="rgb(235,81,44)" rx="2" ry="2" />
<text  x="605.52" y="935.5" >st..</text>
</g>
<g >
<title>__cpu_indicator_init (272,338 samples, 0.58%)</title><rect x="10.0" y="2061" width="6.8" height="15.0" fill="rgb(215,125,50)" rx="2" ry="2" />
<text  x="13.00" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="829" width="34.8" height="15.0" fill="rgb(237,208,0)" rx="2" ry="2" />
<text  x="605.52" y="839.5" >st..</text>
</g>
<g >
<title>update_load_avg (432,727 samples, 0.92%)</title><rect x="547.5" y="1917" width="10.9" height="15.0" fill="rgb(229,48,30)" rx="2" ry="2" />
<text  x="550.54" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1757" width="34.8" height="15.0" fill="rgb(212,166,26)" rx="2" ry="2" />
<text  x="605.52" y="1767.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="989" width="34.8" height="15.0" fill="rgb(207,82,4)" rx="2" ry="2" />
<text  x="605.52" y="999.5" >st..</text>
</g>
<g >
<title>mmap64 (233,272 samples, 0.49%)</title><rect x="524.5" y="2077" width="5.9" height="15.0" fill="rgb(237,69,11)" rx="2" ry="2" />
<text  x="527.54" y="2087.5" ></text>
</g>
<g >
<title>handle_mm_fault (243,599 samples, 0.52%)</title><rect x="16.8" y="1997" width="6.1" height="15.0" fill="rgb(211,119,15)" rx="2" ry="2" />
<text  x="19.81" y="2007.5" ></text>
</g>
<g >
<title>_perf_ioctl (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1917" width="30.8" height="15.0" fill="rgb(213,54,20)" rx="2" ry="2" />
<text  x="673.87" y="1927.5" >_p..</text>
</g>
<g >
<title>ksys_read (680,629 samples, 1.44%)</title><rect x="1173.0" y="1997" width="17.0" height="15.0" fill="rgb(251,54,42)" rx="2" ry="2" />
<text  x="1175.98" y="2007.5" ></text>
</g>
<g >
<title>cpumask_any_and_distribute (76,443 samples, 0.16%)</title><rect x="783.5" y="1885" width="1.9" height="15.0" fill="rgb(217,150,8)" rx="2" ry="2" />
<text  x="786.50" y="1895.5" ></text>
</g>
<g >
<title>__perf_event_enable (1,231,590 samples, 2.61%)</title><rect x="670.9" y="1789" width="30.8" height="15.0" fill="rgb(215,115,26)" rx="2" ry="2" />
<text  x="673.87" y="1799.5" >__..</text>
</g>
<g >
<title>do_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1693" width="6.6" height="15.0" fill="rgb(253,203,3)" rx="2" ry="2" />
<text  x="818.08" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1773" width="34.8" height="15.0" fill="rgb(209,175,45)" rx="2" ry="2" />
<text  x="561.36" y="1783.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1821" width="34.8" height="15.0" fill="rgb(251,223,46)" rx="2" ry="2" />
<text  x="605.52" y="1831.5" >st..</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1997" width="34.8" height="15.0" fill="rgb(238,199,8)" rx="2" ry="2" />
<text  x="561.36" y="2007.5" >In..</text>
</g>
<g >
<title>propagate_entity_cfs_rq (432,727 samples, 0.92%)</title><rect x="547.5" y="1933" width="10.9" height="15.0" fill="rgb(226,223,33)" rx="2" ry="2" />
<text  x="550.54" y="1943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (208,573 samples, 0.44%)</title><rect x="795.8" y="1981" width="5.2" height="15.0" fill="rgb(213,185,33)" rx="2" ry="2" />
<text  x="798.81" y="1991.5" ></text>
</g>
<g >
<title>bprm_execve (981,928 samples, 2.08%)</title><rect x="637.3" y="1997" width="24.6" height="15.0" fill="rgb(221,140,2)" rx="2" ry="2" />
<text  x="640.33" y="2007.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1101" width="34.8" height="15.0" fill="rgb(210,59,23)" rx="2" ry="2" />
<text  x="605.52" y="1111.5" >st..</text>
</g>
<g >
<title>cpu_startup_entry (203,144 samples, 0.43%)</title><rect x="1162.7" y="1981" width="5.1" height="15.0" fill="rgb(242,100,22)" rx="2" ry="2" />
<text  x="1165.74" y="1991.5" ></text>
</g>
<g >
<title>record__pushfn (551,089 samples, 1.17%)</title><rect x="815.1" y="1981" width="13.8" height="15.0" fill="rgb(225,139,39)" rx="2" ry="2" />
<text  x="818.08" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1805" width="34.8" height="15.0" fill="rgb(236,18,22)" rx="2" ry="2" />
<text  x="561.36" y="1815.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="381" width="34.8" height="15.0" fill="rgb(219,63,9)" rx="2" ry="2" />
<text  x="605.52" y="391.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1741" width="34.8" height="15.0" fill="rgb(236,58,24)" rx="2" ry="2" />
<text  x="561.36" y="1751.5" >st..</text>
</g>
<g >
<title>memory_stat_format (680,629 samples, 1.44%)</title><rect x="1173.0" y="1869" width="17.0" height="15.0" fill="rgb(223,203,3)" rx="2" ry="2" />
<text  x="1175.98" y="1879.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (242,731 samples, 0.51%)</title><rect x="743.5" y="1821" width="6.1" height="15.0" fill="rgb(247,205,24)" rx="2" ry="2" />
<text  x="746.54" y="1831.5" ></text>
</g>
<g >
<title>exit_mmap (981,928 samples, 2.08%)</title><rect x="637.3" y="1869" width="24.6" height="15.0" fill="rgb(237,71,16)" rx="2" ry="2" />
<text  x="640.33" y="1879.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="2077" width="34.8" height="15.0" fill="rgb(232,24,10)" rx="2" ry="2" />
<text  x="605.52" y="2087.5" >st..</text>
</g>
<g >
<title>put_prev_task_fair (338,823 samples, 0.72%)</title><rect x="785.4" y="1885" width="8.5" height="15.0" fill="rgb(237,50,38)" rx="2" ry="2" />
<text  x="788.42" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1437" width="34.8" height="15.0" fill="rgb(237,38,6)" rx="2" ry="2" />
<text  x="605.52" y="1447.5" >st..</text>
</g>
<g >
<title>kworker/4:0-eve (511,157 samples, 1.08%)</title><rect x="534.8" y="2093" width="12.7" height="15.0" fill="rgb(223,38,40)" rx="2" ry="2" />
<text  x="537.76" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1149" width="34.8" height="15.0" fill="rgb(224,131,7)" rx="2" ry="2" />
<text  x="605.52" y="1159.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1421" width="34.8" height="15.0" fill="rgb(221,199,2)" rx="2" ry="2" />
<text  x="605.52" y="1431.5" >st..</text>
</g>
<g >
<title>dbs_work_handler (511,157 samples, 1.08%)</title><rect x="534.8" y="2013" width="12.7" height="15.0" fill="rgb(214,36,23)" rx="2" ry="2" />
<text  x="537.76" y="2023.5" ></text>
</g>
<g >
<title>unmap_single_vma (507,076 samples, 1.07%)</title><rect x="511.9" y="1933" width="12.6" height="15.0" fill="rgb(231,59,0)" rx="2" ry="2" />
<text  x="514.86" y="1943.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (175,588 samples, 0.37%)</title><rect x="530.4" y="1917" width="4.4" height="15.0" fill="rgb(243,180,20)" rx="2" ry="2" />
<text  x="533.37" y="1927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,670,014 samples, 7.78%)</title><rect x="704.0" y="1981" width="91.8" height="15.0" fill="rgb(215,211,10)" rx="2" ry="2" />
<text  x="707.05" y="1991.5" >entry_SYSC..</text>
</g>
<g >
<title>__vdso_gettimeofday (280,182 samples, 0.59%)</title><rect x="110.3" y="2029" width="7.0" height="15.0" fill="rgb(221,135,51)" rx="2" ry="2" />
<text  x="113.29" y="2039.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (268,797 samples, 0.57%)</title><rect x="41.7" y="1965" width="6.7" height="15.0" fill="rgb(208,127,48)" rx="2" ry="2" />
<text  x="44.69" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,392,058 samples, 2.95%)</title><rect x="602.5" y="77" width="34.8" height="15.0" fill="rgb(232,53,39)" rx="2" ry="2" />
<text  x="605.52" y="87.5" >st..</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (3,670,014 samples, 7.78%)</title><rect x="704.0" y="1997" width="91.8" height="15.0" fill="rgb(243,75,53)" rx="2" ry="2" />
<text  x="707.05" y="2007.5" >sched_seta..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="653" width="34.8" height="15.0" fill="rgb(212,63,46)" rx="2" ry="2" />
<text  x="605.52" y="663.5" >st..</text>
</g>
<g >
<title>set_task_cpu (432,727 samples, 0.92%)</title><rect x="547.5" y="1981" width="10.9" height="15.0" fill="rgb(226,215,16)" rx="2" ry="2" />
<text  x="550.54" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="541" width="34.8" height="15.0" fill="rgb(212,157,3)" rx="2" ry="2" />
<text  x="605.52" y="551.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1581" width="34.8" height="15.0" fill="rgb(243,188,25)" rx="2" ry="2" />
<text  x="605.52" y="1591.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1933" width="34.8" height="15.0" fill="rgb(216,64,40)" rx="2" ry="2" />
<text  x="605.52" y="1943.5" >st..</text>
</g>
<g >
<title>asm_exc_page_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1789" width="6.6" height="15.0" fill="rgb(252,112,25)" rx="2" ry="2" />
<text  x="818.08" y="1799.5" ></text>
</g>
<g >
<title>intel_check_word.constprop.0 (259,368 samples, 0.55%)</title><rect x="48.4" y="2061" width="6.5" height="15.0" fill="rgb(218,81,6)" rx="2" ry="2" />
<text  x="51.41" y="2071.5" ></text>
</g>
<g >
<title>[[vdso]] (12,723,954 samples, 26.96%)</title><rect x="180.9" y="2013" width="318.2" height="15.0" fill="rgb(248,145,38)" rx="2" ry="2" />
<text  x="183.94" y="2023.5" >[[vdso]]</text>
</g>
<g >
<title>Builtins_JSEntry (167,958 samples, 0.36%)</title><rect x="598.3" y="1789" width="4.2" height="15.0" fill="rgb(235,210,37)" rx="2" ry="2" />
<text  x="601.33" y="1799.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (167,958 samples, 0.36%)</title><rect x="598.3" y="1853" width="4.2" height="15.0" fill="rgb(219,67,6)" rx="2" ry="2" />
<text  x="601.33" y="1863.5" ></text>
</g>
<g >
<title>_find_next_bit (206,849 samples, 0.44%)</title><rect x="1152.4" y="1933" width="5.2" height="15.0" fill="rgb(215,226,36)" rx="2" ry="2" />
<text  x="1155.40" y="1943.5" ></text>
</g>
<g >
<title>__calc_delta (167,445 samples, 0.35%)</title><rect x="739.3" y="1821" width="4.2" height="15.0" fill="rgb(242,2,32)" rx="2" ry="2" />
<text  x="742.35" y="1831.5" ></text>
</g>
<g >
<title>cmd_record (6,678,022 samples, 14.15%)</title><rect x="661.9" y="2029" width="167.0" height="15.0" fill="rgb(251,20,44)" rx="2" ry="2" />
<text  x="664.88" y="2039.5" >cmd_record</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (167,958 samples, 0.36%)</title><rect x="598.3" y="1805" width="4.2" height="15.0" fill="rgb(207,81,53)" rx="2" ry="2" />
<text  x="601.33" y="1815.5" ></text>
</g>
<g >
<title>do_syscall_64 (680,629 samples, 1.44%)</title><rect x="1173.0" y="2029" width="17.0" height="15.0" fill="rgb(246,146,5)" rx="2" ry="2" />
<text  x="1175.98" y="2039.5" ></text>
</g>
<g >
<title>rb_erase (206,425 samples, 0.44%)</title><rect x="1157.6" y="1933" width="5.1" height="15.0" fill="rgb(234,29,38)" rx="2" ry="2" />
<text  x="1160.57" y="1943.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (206,164 samples, 0.44%)</title><rect x="593.2" y="1885" width="5.1" height="15.0" fill="rgb(216,201,5)" rx="2" ry="2" />
<text  x="596.17" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="909" width="34.8" height="15.0" fill="rgb(239,72,19)" rx="2" ry="2" />
<text  x="605.52" y="919.5" >st..</text>
</g>
<g >
<title>migration_cpu_stop (432,727 samples, 0.92%)</title><rect x="547.5" y="2013" width="10.9" height="15.0" fill="rgb(240,85,21)" rx="2" ry="2" />
<text  x="550.54" y="2023.5" ></text>
</g>
<g >
<title>epoll_wait (206,164 samples, 0.44%)</title><rect x="593.2" y="1981" width="5.1" height="15.0" fill="rgb(212,81,3)" rx="2" ry="2" />
<text  x="596.17" y="1991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (507,076 samples, 1.07%)</title><rect x="511.9" y="2077" width="12.6" height="15.0" fill="rgb(232,88,39)" rx="2" ry="2" />
<text  x="514.86" y="2087.5" ></text>
</g>
<g >
<title>update_cfs_group (335,370 samples, 0.71%)</title><rect x="751.7" y="1853" width="8.4" height="15.0" fill="rgb(237,125,30)" rx="2" ry="2" />
<text  x="754.71" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1933" width="34.8" height="15.0" fill="rgb(246,97,33)" rx="2" ry="2" />
<text  x="561.36" y="1943.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1901" width="34.8" height="15.0" fill="rgb(241,85,17)" rx="2" ry="2" />
<text  x="561.36" y="1911.5" >st..</text>
</g>
<g >
<title>od_dbs_update (511,157 samples, 1.08%)</title><rect x="534.8" y="1997" width="12.7" height="15.0" fill="rgb(206,44,48)" rx="2" ry="2" />
<text  x="537.76" y="2007.5" ></text>
</g>
<g >
<title>__do_set_cpus_allowed (3,104,668 samples, 6.58%)</title><rect x="705.9" y="1885" width="77.6" height="15.0" fill="rgb(245,68,16)" rx="2" ry="2" />
<text  x="708.88" y="1895.5" >__do_set..</text>
</g>
<g >
<title>chase (20,811,837 samples, 44.10%)</title><rect x="10.0" y="2093" width="520.4" height="15.0" fill="rgb(242,48,33)" rx="2" ry="2" />
<text  x="13.00" y="2103.5" >chase</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="109" width="34.8" height="15.0" fill="rgb(244,64,26)" rx="2" ry="2" />
<text  x="605.52" y="119.5" >st..</text>
</g>
<g >
<title>cpuidle_enter (203,144 samples, 0.43%)</title><rect x="1162.7" y="1933" width="5.1" height="15.0" fill="rgb(207,74,32)" rx="2" ry="2" />
<text  x="1165.74" y="1943.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (507,076 samples, 1.07%)</title><rect x="511.9" y="2045" width="12.6" height="15.0" fill="rgb(241,108,31)" rx="2" ry="2" />
<text  x="514.86" y="2055.5" ></text>
</g>
<g >
<title>pick_next_task_fair (175,588 samples, 0.37%)</title><rect x="530.4" y="1981" width="4.4" height="15.0" fill="rgb(247,126,3)" rx="2" ry="2" />
<text  x="533.37" y="1991.5" ></text>
</g>
<g >
<title>ep_poll (206,164 samples, 0.44%)</title><rect x="593.2" y="1901" width="5.1" height="15.0" fill="rgb(207,116,16)" rx="2" ry="2" />
<text  x="596.17" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1197" width="34.8" height="15.0" fill="rgb(214,78,12)" rx="2" ry="2" />
<text  x="605.52" y="1207.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="685" width="34.8" height="15.0" fill="rgb(233,0,43)" rx="2" ry="2" />
<text  x="605.52" y="695.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (551,089 samples, 1.17%)</title><rect x="815.1" y="1933" width="13.8" height="15.0" fill="rgb(237,168,27)" rx="2" ry="2" />
<text  x="818.08" y="1943.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (279,358 samples, 0.59%)</title><rect x="801.0" y="1965" width="7.0" height="15.0" fill="rgb(232,38,25)" rx="2" ry="2" />
<text  x="804.03" y="1975.5" ></text>
</g>
<g >
<title>__libc_start_call_main (6,678,022 samples, 14.15%)</title><rect x="661.9" y="2077" width="167.0" height="15.0" fill="rgb(227,78,41)" rx="2" ry="2" />
<text  x="664.88" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>vma_link (233,272 samples, 0.49%)</title><rect x="524.5" y="1949" width="5.9" height="15.0" fill="rgb(248,55,20)" rx="2" ry="2" />
<text  x="527.54" y="1959.5" ></text>
</g>
<g >
<title>do_syscall_64 (507,076 samples, 1.07%)</title><rect x="511.9" y="2061" width="12.6" height="15.0" fill="rgb(218,24,45)" rx="2" ry="2" />
<text  x="514.86" y="2071.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (243,599 samples, 0.52%)</title><rect x="16.8" y="2045" width="6.1" height="15.0" fill="rgb(227,153,0)" rx="2" ry="2" />
<text  x="19.81" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1965" width="34.8" height="15.0" fill="rgb(233,95,32)" rx="2" ry="2" />
<text  x="605.52" y="1975.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (266,784 samples, 0.57%)</title><rect x="815.1" y="1725" width="6.6" height="15.0" fill="rgb(241,32,9)" rx="2" ry="2" />
<text  x="818.08" y="1735.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (272,338 samples, 0.58%)</title><rect x="10.0" y="2045" width="6.8" height="15.0" fill="rgb(248,149,15)" rx="2" ry="2" />
<text  x="13.00" y="2055.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1965" width="34.8" height="15.0" fill="rgb(235,149,21)" rx="2" ry="2" />
<text  x="561.36" y="1975.5" >Gl..</text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (680,629 samples, 1.44%)</title><rect x="1173.0" y="1837" width="17.0" height="15.0" fill="rgb(236,140,20)" rx="2" ry="2" />
<text  x="1175.98" y="1847.5" ></text>
</g>
<g >
<title>need_update (206,849 samples, 0.44%)</title><rect x="1152.4" y="1949" width="5.2" height="15.0" fill="rgb(249,206,2)" rx="2" ry="2" />
<text  x="1155.40" y="1959.5" ></text>
</g>
<g >
<title>do_syscall_64 (234,113 samples, 0.50%)</title><rect x="661.9" y="1965" width="5.8" height="15.0" fill="rgb(245,14,44)" rx="2" ry="2" />
<text  x="664.88" y="1975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (268,797 samples, 0.57%)</title><rect x="41.7" y="2013" width="6.7" height="15.0" fill="rgb(230,140,30)" rx="2" ry="2" />
<text  x="44.69" y="2023.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (206,164 samples, 0.44%)</title><rect x="593.2" y="1869" width="5.1" height="15.0" fill="rgb(227,225,18)" rx="2" ry="2" />
<text  x="596.17" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1853" width="34.8" height="15.0" fill="rgb(244,13,45)" rx="2" ry="2" />
<text  x="605.52" y="1863.5" >st..</text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (167,958 samples, 0.36%)</title><rect x="598.3" y="1773" width="4.2" height="15.0" fill="rgb(216,98,1)" rx="2" ry="2" />
<text  x="601.33" y="1783.5" ></text>
</g>
<g >
<title>[perf-273006.map] (167,958 samples, 0.36%)</title><rect x="598.3" y="1693" width="4.2" height="15.0" fill="rgb(205,36,24)" rx="2" ry="2" />
<text  x="601.33" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1725" width="34.8" height="15.0" fill="rgb(253,202,9)" rx="2" ry="2" />
<text  x="561.36" y="1735.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="733" width="34.8" height="15.0" fill="rgb(236,176,46)" rx="2" ry="2" />
<text  x="605.52" y="743.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="429" width="34.8" height="15.0" fill="rgb(243,101,53)" rx="2" ry="2" />
<text  x="605.52" y="439.5" >st..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (208,573 samples, 0.44%)</title><rect x="795.8" y="1933" width="5.2" height="15.0" fill="rgb(233,51,14)" rx="2" ry="2" />
<text  x="798.81" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1789" width="34.8" height="15.0" fill="rgb(226,38,41)" rx="2" ry="2" />
<text  x="605.52" y="1799.5" >st..</text>
</g>
<g >
<title>Builtins_LoadGlobalIC (167,958 samples, 0.36%)</title><rect x="598.3" y="1629" width="4.2" height="15.0" fill="rgb(250,133,36)" rx="2" ry="2" />
<text  x="601.33" y="1639.5" ></text>
</g>
<g >
<title>cgroup_rstat_flush_locked (680,629 samples, 1.44%)</title><rect x="1173.0" y="1821" width="17.0" height="15.0" fill="rgb(218,72,5)" rx="2" ry="2" />
<text  x="1175.98" y="1831.5" ></text>
</g>
<g >
<title>all (47,193,030 samples, 100%)</title><rect x="10.0" y="2109" width="1180.0" height="15.0" fill="rgb(247,87,34)" rx="2" ry="2" />
<text  x="13.00" y="2119.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="253" width="34.8" height="15.0" fill="rgb(247,131,45)" rx="2" ry="2" />
<text  x="605.52" y="263.5" >st..</text>
</g>
<g >
<title>__x64_sys_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1917" width="13.8" height="15.0" fill="rgb(219,43,26)" rx="2" ry="2" />
<text  x="818.08" y="1927.5" ></text>
</g>
<g >
<title>kernfs_seq_show (680,629 samples, 1.44%)</title><rect x="1173.0" y="1917" width="17.0" height="15.0" fill="rgb(214,63,11)" rx="2" ry="2" />
<text  x="1175.98" y="1927.5" ></text>
</g>
<g >
<title>perf (6,678,022 samples, 14.15%)</title><rect x="661.9" y="2093" width="167.0" height="15.0" fill="rgb(212,137,20)" rx="2" ry="2" />
<text  x="664.88" y="2103.5" >perf</text>
</g>
<g >
<title>syscall_exit_to_user_mode (95,269 samples, 0.20%)</title><rect x="701.7" y="1949" width="2.3" height="15.0" fill="rgb(254,210,53)" rx="2" ry="2" />
<text  x="704.67" y="1959.5" ></text>
</g>
<g >
<title>perf_event_ctx_lock_nested.constprop.0 (234,113 samples, 0.50%)</title><rect x="661.9" y="1917" width="5.8" height="15.0" fill="rgb(214,146,34)" rx="2" ry="2" />
<text  x="664.88" y="1927.5" ></text>
</g>
<g >
<title>kernfs_fop_read_iter (680,629 samples, 1.44%)</title><rect x="1173.0" y="1949" width="17.0" height="15.0" fill="rgb(251,194,10)" rx="2" ry="2" />
<text  x="1175.98" y="1959.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (167,958 samples, 0.36%)</title><rect x="598.3" y="1933" width="4.2" height="15.0" fill="rgb(212,9,1)" rx="2" ry="2" />
<text  x="601.33" y="1943.5" ></text>
</g>
<g >
<title>_dl_new_object (243,599 samples, 0.52%)</title><rect x="16.8" y="2061" width="6.1" height="15.0" fill="rgb(211,67,37)" rx="2" ry="2" />
<text  x="19.81" y="2071.5" ></text>
</g>
<g >
<title>__get_user_nocheck_1 (266,784 samples, 0.57%)</title><rect x="815.1" y="1805" width="6.6" height="15.0" fill="rgb(233,147,32)" rx="2" ry="2" />
<text  x="818.08" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="461" width="34.8" height="15.0" fill="rgb(229,114,11)" rx="2" ry="2" />
<text  x="605.52" y="471.5" >st..</text>
</g>
<g >
<title>kthread (432,727 samples, 0.92%)</title><rect x="547.5" y="2061" width="10.9" height="15.0" fill="rgb(229,117,54)" rx="2" ry="2" />
<text  x="550.54" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1405" width="34.8" height="15.0" fill="rgb(217,147,51)" rx="2" ry="2" />
<text  x="605.52" y="1415.5" >st..</text>
</g>
<g >
<title>ext4_buffered_write_iter (551,089 samples, 1.17%)</title><rect x="815.1" y="1837" width="13.8" height="15.0" fill="rgb(239,103,26)" rx="2" ry="2" />
<text  x="818.08" y="1847.5" ></text>
</g>
<g >
<title>perf_ioctl (234,113 samples, 0.50%)</title><rect x="661.9" y="1933" width="5.8" height="15.0" fill="rgb(208,147,18)" rx="2" ry="2" />
<text  x="664.88" y="1943.5" ></text>
</g>
<g >
<title>__GI___libc_write (551,089 samples, 1.17%)</title><rect x="815.1" y="1965" width="13.8" height="15.0" fill="rgb(206,106,10)" rx="2" ry="2" />
<text  x="818.08" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1341" width="34.8" height="15.0" fill="rgb(243,172,33)" rx="2" ry="2" />
<text  x="605.52" y="1351.5" >st..</text>
</g>
<g >
<title>move_queued_task (432,727 samples, 0.92%)</title><rect x="547.5" y="1997" width="10.9" height="15.0" fill="rgb(252,83,7)" rx="2" ry="2" />
<text  x="550.54" y="2007.5" ></text>
</g>
<g >
<title>native_write_msr (511,157 samples, 1.08%)</title><rect x="534.8" y="1933" width="12.7" height="15.0" fill="rgb(236,38,46)" rx="2" ry="2" />
<text  x="537.76" y="1943.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,326,859 samples, 2.81%)</title><rect x="670.9" y="1981" width="33.1" height="15.0" fill="rgb(242,172,25)" rx="2" ry="2" />
<text  x="673.87" y="1991.5" >en..</text>
</g>
<g >
<title>put_prev_entity (168,779 samples, 0.36%)</title><rect x="775.0" y="1853" width="4.2" height="15.0" fill="rgb(244,47,29)" rx="2" ry="2" />
<text  x="777.96" y="1863.5" ></text>
</g>
<g >
<title>arch_call_rest_init (203,144 samples, 0.43%)</title><rect x="1162.7" y="2013" width="5.1" height="15.0" fill="rgb(254,0,42)" rx="2" ry="2" />
<text  x="1165.74" y="2023.5" ></text>
</g>
<g >
<title>update_load_avg (84,277 samples, 0.18%)</title><rect x="749.6" y="1837" width="2.1" height="15.0" fill="rgb(234,151,50)" rx="2" ry="2" />
<text  x="752.60" y="1847.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (12,556,141 samples, 26.61%)</title><rect x="838.5" y="1965" width="313.9" height="15.0" fill="rgb(206,144,42)" rx="2" ry="2" />
<text  x="841.45" y="1975.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>mmput (507,076 samples, 1.07%)</title><rect x="511.9" y="1981" width="12.6" height="15.0" fill="rgb(239,146,43)" rx="2" ry="2" />
<text  x="514.86" y="1991.5" ></text>
</g>
<g >
<title>seq_read_iter (680,629 samples, 1.44%)</title><rect x="1173.0" y="1933" width="17.0" height="15.0" fill="rgb(237,86,27)" rx="2" ry="2" />
<text  x="1175.98" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="893" width="34.8" height="15.0" fill="rgb(251,99,50)" rx="2" ry="2" />
<text  x="605.52" y="903.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1917" width="34.8" height="15.0" fill="rgb(241,166,45)" rx="2" ry="2" />
<text  x="605.52" y="1927.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (680,629 samples, 1.44%)</title><rect x="1173.0" y="2045" width="17.0" height="15.0" fill="rgb(244,11,9)" rx="2" ry="2" />
<text  x="1175.98" y="2055.5" ></text>
</g>
<g >
<title>ret_from_fork (432,727 samples, 0.92%)</title><rect x="547.5" y="2077" width="10.9" height="15.0" fill="rgb(208,208,33)" rx="2" ry="2" />
<text  x="550.54" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1725" width="34.8" height="15.0" fill="rgb(219,7,1)" rx="2" ry="2" />
<text  x="605.52" y="1735.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1165" width="34.8" height="15.0" fill="rgb(235,116,0)" rx="2" ry="2" />
<text  x="605.52" y="1175.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1949" width="34.8" height="15.0" fill="rgb(208,148,41)" rx="2" ry="2" />
<text  x="605.52" y="1959.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1773" width="34.8" height="15.0" fill="rgb(214,17,15)" rx="2" ry="2" />
<text  x="605.52" y="1783.5" >st..</text>
</g>
<g >
<title>exec_binprm (981,928 samples, 2.08%)</title><rect x="637.3" y="1965" width="24.6" height="15.0" fill="rgb(216,195,10)" rx="2" ry="2" />
<text  x="640.33" y="1975.5" >e..</text>
</g>
<g >
<title>copy_user_generic_unrolled (73,084 samples, 0.15%)</title><rect x="704.0" y="1917" width="1.9" height="15.0" fill="rgb(245,15,10)" rx="2" ry="2" />
<text  x="707.05" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="2013" width="34.8" height="15.0" fill="rgb(250,69,10)" rx="2" ry="2" />
<text  x="605.52" y="2023.5" >st..</text>
</g>
<g >
<title>ext4_file_write_iter (551,089 samples, 1.17%)</title><rect x="815.1" y="1853" width="13.8" height="15.0" fill="rgb(206,169,23)" rx="2" ry="2" />
<text  x="818.08" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="221" width="34.8" height="15.0" fill="rgb(242,50,20)" rx="2" ry="2" />
<text  x="605.52" y="231.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1789" width="34.8" height="15.0" fill="rgb(221,13,5)" rx="2" ry="2" />
<text  x="561.36" y="1799.5" >st..</text>
</g>
<g >
<title>new_sync_read (680,629 samples, 1.44%)</title><rect x="1173.0" y="1965" width="17.0" height="15.0" fill="rgb(229,111,48)" rx="2" ry="2" />
<text  x="1175.98" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1869" width="34.8" height="15.0" fill="rgb(234,160,3)" rx="2" ry="2" />
<text  x="605.52" y="1879.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="157" width="34.8" height="15.0" fill="rgb(237,93,1)" rx="2" ry="2" />
<text  x="605.52" y="167.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1309" width="34.8" height="15.0" fill="rgb(209,105,13)" rx="2" ry="2" />
<text  x="605.52" y="1319.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="589" width="34.8" height="15.0" fill="rgb(220,9,26)" rx="2" ry="2" />
<text  x="605.52" y="599.5" >st..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (76,996 samples, 0.16%)</title><rect x="793.9" y="1885" width="1.9" height="15.0" fill="rgb(241,155,35)" rx="2" ry="2" />
<text  x="796.89" y="1895.5" ></text>
</g>
<g >
<title>uv__stream_io (167,958 samples, 0.36%)</title><rect x="598.3" y="1965" width="4.2" height="15.0" fill="rgb(235,183,41)" rx="2" ry="2" />
<text  x="601.33" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1981" width="34.8" height="15.0" fill="rgb(217,47,39)" rx="2" ry="2" />
<text  x="605.52" y="1991.5" >st..</text>
</g>
<g >
<title>unmap_vmas (507,076 samples, 1.07%)</title><rect x="511.9" y="1949" width="12.6" height="15.0" fill="rgb(251,197,35)" rx="2" ry="2" />
<text  x="514.86" y="1959.5" ></text>
</g>
<g >
<title>do_user_addr_fault (243,599 samples, 0.52%)</title><rect x="16.8" y="2013" width="6.1" height="15.0" fill="rgb(249,39,12)" rx="2" ry="2" />
<text  x="19.81" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1277" width="34.8" height="15.0" fill="rgb(226,5,16)" rx="2" ry="2" />
<text  x="605.52" y="1287.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="558.4" y="1917" width="34.8" height="15.0" fill="rgb(226,15,45)" rx="2" ry="2" />
<text  x="561.36" y="1927.5" >st..</text>
</g>
<g >
<title>kworker/47:1-ev (175,588 samples, 0.37%)</title><rect x="530.4" y="2093" width="4.4" height="15.0" fill="rgb(241,102,15)" rx="2" ry="2" />
<text  x="533.37" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1741" width="34.8" height="15.0" fill="rgb(250,73,43)" rx="2" ry="2" />
<text  x="605.52" y="1751.5" >st..</text>
</g>
<g >
<title>hrtimer_cancel (206,425 samples, 0.44%)</title><rect x="1157.6" y="1981" width="5.1" height="15.0" fill="rgb(224,184,34)" rx="2" ry="2" />
<text  x="1160.57" y="1991.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (444,150 samples, 0.94%)</title><rect x="1178.9" y="1805" width="11.1" height="15.0" fill="rgb(206,87,17)" rx="2" ry="2" />
<text  x="1181.89" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="813" width="34.8" height="15.0" fill="rgb(232,165,34)" rx="2" ry="2" />
<text  x="605.52" y="823.5" >st..</text>
</g>
<g >
<title>bprm_execve.part.0 (981,928 samples, 2.08%)</title><rect x="637.3" y="1981" width="24.6" height="15.0" fill="rgb(210,111,29)" rx="2" ry="2" />
<text  x="640.33" y="1991.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,392,058 samples, 2.95%)</title><rect x="602.5" y="669" width="34.8" height="15.0" fill="rgb(224,183,10)" rx="2" ry="2" />
<text  x="605.52" y="679.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="1133" width="34.8" height="15.0" fill="rgb(247,20,35)" rx="2" ry="2" />
<text  x="605.52" y="1143.5" >st..</text>
</g>
<g >
<title>__entry_text_start (282,613 samples, 0.60%)</title><rect x="808.0" y="1965" width="7.1" height="15.0" fill="rgb(221,48,43)" rx="2" ry="2" />
<text  x="811.01" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,392,058 samples, 2.95%)</title><rect x="602.5" y="557" width="34.8" height="15.0" fill="rgb(210,119,54)" rx="2" ry="2" />
<text  x="605.52" y="567.5" >st..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,392,058 samples, 2.95%)</title><rect x="558.4" y="2013" width="34.8" height="15.0" fill="rgb(206,67,33)" rx="2" ry="2" />
<text  x="561.36" y="2023.5" >In..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (981,928 samples, 2.08%)</title><rect x="637.3" y="2013" width="24.6" height="15.0" fill="rgb(231,191,3)" rx="2" ry="2" />
<text  x="640.33" y="2023.5" >d..</text>
</g>
<g >
<title>__x64_sys_ioctl (234,113 samples, 0.50%)</title><rect x="661.9" y="1949" width="5.8" height="15.0" fill="rgb(244,83,53)" rx="2" ry="2" />
<text  x="664.88" y="1959.5" ></text>
</g>
<g >
<title>main (17,765,113 samples, 37.64%)</title><rect x="54.9" y="2061" width="444.2" height="15.0" fill="rgb(242,196,18)" rx="2" ry="2" />
<text  x="57.90" y="2071.5" >main</text>
</g>
<g >
<title>update_curr (491,279 samples, 1.04%)</title><rect x="737.3" y="1837" width="12.3" height="15.0" fill="rgb(238,144,16)" rx="2" ry="2" />
<text  x="740.32" y="1847.5" ></text>
</g>
</g>
</svg>
