<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2158" onload="init(evt)" viewBox="0 0 1200 2158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >FlameGraph_3_64m_1_foward 1_none</text>
<text id="subtitle" x="600.00" y="48" >Count:3_ChainSize:64m_Thread:1_Access:foward 1_Prefetch:none</text>
<text id="details" x="10.00" y="2141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2141" > </text>
<g id="frames">
<g >
<title>mod_timer (207,121 samples, 0.47%)</title><rect x="829.7" y="1709" width="5.6" height="15.0" fill="rgb(234,156,8)" rx="2" ry="2" />
<text  x="832.69" y="1719.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,107,453 samples, 2.54%)</title><rect x="794.2" y="1997" width="29.9" height="15.0" fill="rgb(222,103,54)" rx="2" ry="2" />
<text  x="797.22" y="2007.5" >pe..</text>
</g>
<g >
<title>dbs_update_util_handler (85,713 samples, 0.20%)</title><rect x="726.8" y="1821" width="2.3" height="15.0" fill="rgb(205,55,14)" rx="2" ry="2" />
<text  x="729.78" y="1831.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (207,121 samples, 0.47%)</title><rect x="829.7" y="1853" width="5.6" height="15.0" fill="rgb(223,206,45)" rx="2" ry="2" />
<text  x="832.69" y="1863.5" ></text>
</g>
<g >
<title>__calc_delta (82,357 samples, 0.19%)</title><rect x="715.5" y="1821" width="2.2" height="15.0" fill="rgb(252,154,4)" rx="2" ry="2" />
<text  x="718.50" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="973" width="37.6" height="15.0" fill="rgb(237,68,50)" rx="2" ry="2" />
<text  x="589.33" y="983.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1661" width="37.5" height="15.0" fill="rgb(245,147,54)" rx="2" ry="2" />
<text  x="541.96" y="1671.5" >std..</text>
</g>
<g >
<title>cpuidle_enter (12,669,723 samples, 29.01%)</title><rect x="829.7" y="1997" width="342.3" height="15.0" fill="rgb(241,9,42)" rx="2" ry="2" />
<text  x="832.69" y="2007.5" >cpuidle_enter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1901" width="37.6" height="15.0" fill="rgb(231,10,38)" rx="2" ry="2" />
<text  x="589.33" y="1911.5" >std..</text>
</g>
<g >
<title>run_rebalance_domains (498,045 samples, 1.14%)</title><rect x="835.3" y="1901" width="13.4" height="15.0" fill="rgb(223,213,38)" rx="2" ry="2" />
<text  x="838.28" y="1911.5" ></text>
</g>
<g >
<title>perf-exec (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2093" width="27.4" height="15.0" fill="rgb(241,134,4)" rx="2" ry="2" />
<text  x="626.90" y="2103.5" >p..</text>
</g>
<g >
<title>__libc_start_call_main (362,698 samples, 0.83%)</title><rect x="576.5" y="2077" width="9.8" height="15.0" fill="rgb(250,13,10)" rx="2" ry="2" />
<text  x="579.53" y="2087.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (546,426 samples, 1.25%)</title><rect x="809.4" y="1853" width="14.7" height="15.0" fill="rgb(227,115,26)" rx="2" ry="2" />
<text  x="812.38" y="1863.5" ></text>
</g>
<g >
<title>generic_exec_single (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1837" width="36.5" height="15.0" fill="rgb(228,199,0)" rx="2" ry="2" />
<text  x="654.33" y="1847.5" >gen..</text>
</g>
<g >
<title>smpboot_thread_fn (138,280 samples, 0.32%)</title><rect x="521.1" y="2045" width="3.7" height="15.0" fill="rgb(205,150,38)" rx="2" ry="2" />
<text  x="524.10" y="2055.5" ></text>
</g>
<g >
<title>record__pushfn (546,426 samples, 1.25%)</title><rect x="809.4" y="1981" width="14.7" height="15.0" fill="rgb(208,179,30)" rx="2" ry="2" />
<text  x="812.38" y="1991.5" ></text>
</g>
<g >
<title>__switch_to_asm (522,704 samples, 1.20%)</title><rect x="524.8" y="2013" width="14.2" height="15.0" fill="rgb(208,186,37)" rx="2" ry="2" />
<text  x="527.84" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1421" width="37.6" height="15.0" fill="rgb(237,89,45)" rx="2" ry="2" />
<text  x="589.33" y="1431.5" >std..</text>
</g>
<g >
<title>node::NodeMainInstance::Run (362,698 samples, 0.83%)</title><rect x="576.5" y="2029" width="9.8" height="15.0" fill="rgb(241,130,33)" rx="2" ry="2" />
<text  x="579.53" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="269" width="37.6" height="15.0" fill="rgb(207,37,31)" rx="2" ry="2" />
<text  x="589.33" y="279.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1645" width="37.5" height="15.0" fill="rgb(244,35,54)" rx="2" ry="2" />
<text  x="541.96" y="1655.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1757" width="37.6" height="15.0" fill="rgb(243,174,12)" rx="2" ry="2" />
<text  x="589.33" y="1767.5" >std..</text>
</g>
<g >
<title>hrtimer_cancel (207,845 samples, 0.48%)</title><rect x="1172.0" y="1981" width="5.7" height="15.0" fill="rgb(230,21,20)" rx="2" ry="2" />
<text  x="1175.04" y="1991.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (183,512 samples, 0.42%)</title><rect x="1177.7" y="1885" width="4.9" height="15.0" fill="rgb(233,147,27)" rx="2" ry="2" />
<text  x="1180.66" y="1895.5" ></text>
</g>
<g >
<title>wall_seconds (904,954 samples, 2.07%)</title><rect x="466.5" y="2045" width="24.4" height="15.0" fill="rgb(212,224,8)" rx="2" ry="2" />
<text  x="469.47" y="2055.5" >w..</text>
</g>
<g >
<title>switch_mm (179,627 samples, 0.41%)</title><rect x="646.5" y="1885" width="4.8" height="15.0" fill="rgb(236,84,47)" rx="2" ry="2" />
<text  x="649.47" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="861" width="37.6" height="15.0" fill="rgb(237,157,0)" rx="2" ry="2" />
<text  x="589.33" y="871.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1709" width="37.6" height="15.0" fill="rgb(225,213,17)" rx="2" ry="2" />
<text  x="589.33" y="1719.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1437" width="37.6" height="15.0" fill="rgb(245,63,46)" rx="2" ry="2" />
<text  x="589.33" y="1447.5" >std..</text>
</g>
<g >
<title>set_cpus_allowed_common (344,194 samples, 0.79%)</title><rect x="777.2" y="1885" width="9.3" height="15.0" fill="rgb(219,83,38)" rx="2" ry="2" />
<text  x="780.22" y="1895.5" ></text>
</g>
<g >
<title>__iommu_dma_unmap (207,121 samples, 0.47%)</title><rect x="829.7" y="1757" width="5.6" height="15.0" fill="rgb(211,122,4)" rx="2" ry="2" />
<text  x="832.69" y="1767.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (216,125 samples, 0.49%)</title><rect x="623.9" y="1821" width="5.8" height="15.0" fill="rgb(252,10,21)" rx="2" ry="2" />
<text  x="626.90" y="1831.5" ></text>
</g>
<g >
<title>exc_page_fault (277,886 samples, 0.64%)</title><rect x="801.9" y="1949" width="7.5" height="15.0" fill="rgb(210,122,15)" rx="2" ry="2" />
<text  x="804.87" y="1959.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1981" width="36.5" height="15.0" fill="rgb(224,63,43)" rx="2" ry="2" />
<text  x="654.33" y="1991.5" >ent..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="349" width="37.6" height="15.0" fill="rgb(213,155,13)" rx="2" ry="2" />
<text  x="589.33" y="359.5" >std..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,390,340 samples, 3.18%)</title><rect x="539.0" y="2013" width="37.5" height="15.0" fill="rgb(252,136,38)" rx="2" ry="2" />
<text  x="541.96" y="2023.5" >Ino..</text>
</g>
<g >
<title>kthread (494,677 samples, 1.13%)</title><rect x="507.7" y="2061" width="13.4" height="15.0" fill="rgb(218,45,2)" rx="2" ry="2" />
<text  x="510.74" y="2071.5" ></text>
</g>
<g >
<title>usb_hcd_unmap_urb_for_dma (207,121 samples, 0.47%)</title><rect x="829.7" y="1821" width="5.6" height="15.0" fill="rgb(243,107,19)" rx="2" ry="2" />
<text  x="832.69" y="1831.5" ></text>
</g>
<g >
<title>__iommu_dma_unmap_swiotlb (207,121 samples, 0.47%)</title><rect x="829.7" y="1773" width="5.6" height="15.0" fill="rgb(206,145,25)" rx="2" ry="2" />
<text  x="832.69" y="1783.5" ></text>
</g>
<g >
<title>Watcher::isIgnored (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1981" width="37.5" height="15.0" fill="rgb(210,82,39)" rx="2" ry="2" />
<text  x="541.96" y="1991.5" >Wat..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="573" width="37.6" height="15.0" fill="rgb(243,158,28)" rx="2" ry="2" />
<text  x="589.33" y="583.5" >std..</text>
</g>
<g >
<title>asm_exc_page_fault (502,826 samples, 1.15%)</title><rect x="10.0" y="2045" width="13.6" height="15.0" fill="rgb(225,23,13)" rx="2" ry="2" />
<text  x="13.00" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1725" width="37.6" height="15.0" fill="rgb(230,93,8)" rx="2" ry="2" />
<text  x="589.33" y="1735.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1133" width="37.6" height="15.0" fill="rgb(219,218,18)" rx="2" ry="2" />
<text  x="589.33" y="1143.5" >std..</text>
</g>
<g >
<title>ep_poll (185,301 samples, 0.42%)</title><rect x="576.5" y="1901" width="5.0" height="15.0" fill="rgb(248,113,0)" rx="2" ry="2" />
<text  x="579.53" y="1911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (185,301 samples, 0.42%)</title><rect x="576.5" y="1965" width="5.0" height="15.0" fill="rgb(234,194,16)" rx="2" ry="2" />
<text  x="579.53" y="1975.5" ></text>
</g>
<g >
<title>remove_vma (227,720 samples, 0.52%)</title><rect x="629.7" y="1853" width="6.2" height="15.0" fill="rgb(224,97,22)" rx="2" ry="2" />
<text  x="632.74" y="1863.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2061" width="27.4" height="15.0" fill="rgb(209,116,17)" rx="2" ry="2" />
<text  x="626.90" y="2071.5" >e..</text>
</g>
<g >
<title>_dl_relocate_object (201,953 samples, 0.46%)</title><rect x="23.6" y="2029" width="5.4" height="15.0" fill="rgb(226,71,43)" rx="2" ry="2" />
<text  x="26.59" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1277" width="37.5" height="15.0" fill="rgb(252,33,53)" rx="2" ry="2" />
<text  x="541.96" y="1287.5" >std..</text>
</g>
<g >
<title>iommu_dma_free_iova (207,121 samples, 0.47%)</title><rect x="829.7" y="1741" width="5.6" height="15.0" fill="rgb(216,228,21)" rx="2" ry="2" />
<text  x="832.69" y="1751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="2013" width="37.6" height="15.0" fill="rgb(213,218,3)" rx="2" ry="2" />
<text  x="589.33" y="2023.5" >std..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1,390,340 samples, 3.18%)</title><rect x="539.0" y="2077" width="37.5" height="15.0" fill="rgb(225,85,52)" rx="2" ry="2" />
<text  x="541.96" y="2087.5" >[li..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1037" width="37.6" height="15.0" fill="rgb(238,220,18)" rx="2" ry="2" />
<text  x="589.33" y="1047.5" >std..</text>
</g>
<g >
<title>schedule_idle (111,117 samples, 0.25%)</title><rect x="1187.0" y="1949" width="3.0" height="15.0" fill="rgb(211,161,21)" rx="2" ry="2" />
<text  x="1190.00" y="1959.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (11,964,557 samples, 27.40%)</title><rect x="848.7" y="1965" width="323.3" height="15.0" fill="rgb(218,208,12)" rx="2" ry="2" />
<text  x="851.74" y="1975.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>cpu_stopper_thread (494,677 samples, 1.13%)</title><rect x="507.7" y="2029" width="13.4" height="15.0" fill="rgb(230,32,11)" rx="2" ry="2" />
<text  x="510.74" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1501" width="37.6" height="15.0" fill="rgb(224,113,1)" rx="2" ry="2" />
<text  x="589.33" y="1511.5" >std..</text>
</g>
<g >
<title>perf_event_for_each_child (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1901" width="36.5" height="15.0" fill="rgb(248,92,8)" rx="2" ry="2" />
<text  x="654.33" y="1911.5" >per..</text>
</g>
<g >
<title>page_remove_rmap (202,736 samples, 0.46%)</title><rect x="641.0" y="1773" width="5.5" height="15.0" fill="rgb(241,85,48)" rx="2" ry="2" />
<text  x="644.00" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1629" width="37.6" height="15.0" fill="rgb(225,87,41)" rx="2" ry="2" />
<text  x="589.33" y="1639.5" >std..</text>
</g>
<g >
<title>enqueue_task_fair (494,677 samples, 1.13%)</title><rect x="507.7" y="1965" width="13.4" height="15.0" fill="rgb(226,78,35)" rx="2" ry="2" />
<text  x="510.74" y="1975.5" ></text>
</g>
<g >
<title>remote_function (1,276,739 samples, 2.92%)</title><rect x="653.3" y="1821" width="34.5" height="15.0" fill="rgb(226,61,22)" rx="2" ry="2" />
<text  x="656.29" y="1831.5" >re..</text>
</g>
<g >
<title>update_curr (82,357 samples, 0.19%)</title><rect x="715.5" y="1837" width="2.2" height="15.0" fill="rgb(253,191,17)" rx="2" ry="2" />
<text  x="718.50" y="1847.5" ></text>
</g>
<g >
<title>cmd_record (6,395,707 samples, 14.65%)</title><rect x="651.3" y="2029" width="172.8" height="15.0" fill="rgb(225,67,48)" rx="2" ry="2" />
<text  x="654.33" y="2039.5" >cmd_record</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1373" width="37.5" height="15.0" fill="rgb(244,26,49)" rx="2" ry="2" />
<text  x="541.96" y="1383.5" >std..</text>
</g>
<g >
<title>update_cfs_group (82,743 samples, 0.19%)</title><rect x="713.3" y="1837" width="2.2" height="15.0" fill="rgb(220,39,52)" rx="2" ry="2" />
<text  x="716.26" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1533" width="37.6" height="15.0" fill="rgb(247,28,48)" rx="2" ry="2" />
<text  x="589.33" y="1543.5" >std..</text>
</g>
<g >
<title>queue_iova (207,121 samples, 0.47%)</title><rect x="829.7" y="1725" width="5.6" height="15.0" fill="rgb(220,80,51)" rx="2" ry="2" />
<text  x="832.69" y="1735.5" ></text>
</g>
<g >
<title>_init (220,941 samples, 0.51%)</title><rect x="497.3" y="2077" width="6.0" height="15.0" fill="rgb(218,20,46)" rx="2" ry="2" />
<text  x="500.34" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1277" width="37.6" height="15.0" fill="rgb(233,146,23)" rx="2" ry="2" />
<text  x="589.33" y="1287.5" >std..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1981" width="98.0" height="15.0" fill="rgb(250,131,8)" rx="2" ry="2" />
<text  x="693.61" y="1991.5" >entry_SYSCA..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (185,301 samples, 0.42%)</title><rect x="576.5" y="1933" width="5.0" height="15.0" fill="rgb(238,112,53)" rx="2" ry="2" />
<text  x="579.53" y="1943.5" ></text>
</g>
<g >
<title>begin_new_exec (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1917" width="27.4" height="15.0" fill="rgb(220,5,10)" rx="2" ry="2" />
<text  x="626.90" y="1927.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1821" width="37.6" height="15.0" fill="rgb(240,148,47)" rx="2" ry="2" />
<text  x="589.33" y="1831.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="765" width="37.6" height="15.0" fill="rgb(239,216,27)" rx="2" ry="2" />
<text  x="589.33" y="775.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="813" width="37.6" height="15.0" fill="rgb(245,83,26)" rx="2" ry="2" />
<text  x="589.33" y="823.5" >std..</text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (177,397 samples, 0.41%)</title><rect x="581.5" y="1773" width="4.8" height="15.0" fill="rgb(214,182,11)" rx="2" ry="2" />
<text  x="584.54" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1677" width="37.6" height="15.0" fill="rgb(252,213,43)" rx="2" ry="2" />
<text  x="589.33" y="1687.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1501" width="37.5" height="15.0" fill="rgb(217,179,30)" rx="2" ry="2" />
<text  x="541.96" y="1511.5" >std..</text>
</g>
<g >
<title>__rb_erase_color (216,125 samples, 0.49%)</title><rect x="623.9" y="1805" width="5.8" height="15.0" fill="rgb(212,147,54)" rx="2" ry="2" />
<text  x="626.90" y="1815.5" ></text>
</g>
<g >
<title>sched_setaffinity (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1933" width="98.0" height="15.0" fill="rgb(211,97,19)" rx="2" ry="2" />
<text  x="693.61" y="1943.5" >sched_setaf..</text>
</g>
<g >
<title>event_function_call (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1869" width="36.5" height="15.0" fill="rgb(223,143,36)" rx="2" ry="2" />
<text  x="654.33" y="1879.5" >eve..</text>
</g>
<g >
<title>event_function (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1805" width="33.7" height="15.0" fill="rgb(211,209,30)" rx="2" ry="2" />
<text  x="657.09" y="1815.5" >ev..</text>
</g>
<g >
<title>uv_run (362,698 samples, 0.83%)</title><rect x="576.5" y="1997" width="9.8" height="15.0" fill="rgb(242,106,6)" rx="2" ry="2" />
<text  x="579.53" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="365" width="37.6" height="15.0" fill="rgb(229,40,35)" rx="2" ry="2" />
<text  x="589.33" y="375.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1677" width="37.5" height="15.0" fill="rgb(223,102,19)" rx="2" ry="2" />
<text  x="541.96" y="1687.5" >std..</text>
</g>
<g >
<title>dequeue_entity (138,280 samples, 0.32%)</title><rect x="521.1" y="1949" width="3.7" height="15.0" fill="rgb(206,98,38)" rx="2" ry="2" />
<text  x="524.10" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1741" width="37.6" height="15.0" fill="rgb(229,12,10)" rx="2" ry="2" />
<text  x="589.33" y="1751.5" >std..</text>
</g>
<g >
<title>__handle_mm_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="1997" width="6.0" height="15.0" fill="rgb(232,131,9)" rx="2" ry="2" />
<text  x="500.34" y="2007.5" ></text>
</g>
<g >
<title>dput (207,393 samples, 0.47%)</title><rect x="788.6" y="1853" width="5.6" height="15.0" fill="rgb(215,219,47)" rx="2" ry="2" />
<text  x="791.62" y="1863.5" ></text>
</g>
<g >
<title>_dl_start (237,444 samples, 0.54%)</title><rect x="490.9" y="2061" width="6.4" height="15.0" fill="rgb(239,26,51)" rx="2" ry="2" />
<text  x="493.93" y="2071.5" ></text>
</g>
<g >
<title>start_secondary (13,082,571 samples, 29.96%)</title><rect x="824.1" y="2061" width="353.6" height="15.0" fill="rgb(207,220,16)" rx="2" ry="2" />
<text  x="827.15" y="2071.5" >start_secondary</text>
</g>
<g >
<title>_dl_start_user (237,444 samples, 0.54%)</title><rect x="490.9" y="2077" width="6.4" height="15.0" fill="rgb(218,181,8)" rx="2" ry="2" />
<text  x="493.93" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1805" width="37.5" height="15.0" fill="rgb(218,100,28)" rx="2" ry="2" />
<text  x="541.96" y="1815.5" >std..</text>
</g>
<g >
<title>_dl_sysdep_start (201,953 samples, 0.46%)</title><rect x="23.6" y="2061" width="5.4" height="15.0" fill="rgb(223,78,28)" rx="2" ry="2" />
<text  x="26.59" y="2071.5" ></text>
</g>
<g >
<title>tick_nohz_restart (207,845 samples, 0.48%)</title><rect x="1172.0" y="1997" width="5.7" height="15.0" fill="rgb(248,5,2)" rx="2" ry="2" />
<text  x="1175.04" y="2007.5" ></text>
</g>
<g >
<title>search_binary_handler (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1949" width="27.4" height="15.0" fill="rgb(252,132,22)" rx="2" ry="2" />
<text  x="626.90" y="1959.5" >s..</text>
</g>
<g >
<title>rest_init (456,806 samples, 1.05%)</title><rect x="1177.7" y="1997" width="12.3" height="15.0" fill="rgb(212,217,22)" rx="2" ry="2" />
<text  x="1180.66" y="2007.5" ></text>
</g>
<g >
<title>__libc_start_call_main (6,395,707 samples, 14.65%)</title><rect x="651.3" y="2077" width="172.8" height="15.0" fill="rgb(234,30,49)" rx="2" ry="2" />
<text  x="654.33" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>run_rebalance_domains (183,512 samples, 0.42%)</title><rect x="1177.7" y="1837" width="4.9" height="15.0" fill="rgb(212,163,54)" rx="2" ry="2" />
<text  x="1180.66" y="1847.5" ></text>
</g>
<g >
<title>d_lru_add (207,393 samples, 0.47%)</title><rect x="788.6" y="1837" width="5.6" height="15.0" fill="rgb(225,68,37)" rx="2" ry="2" />
<text  x="791.62" y="1847.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2029" width="27.4" height="15.0" fill="rgb(236,104,35)" rx="2" ry="2" />
<text  x="626.90" y="2039.5" >_..</text>
</g>
<g >
<title>update_cfs_group (503,929 samples, 1.15%)</title><rect x="729.1" y="1853" width="13.6" height="15.0" fill="rgb(232,18,24)" rx="2" ry="2" />
<text  x="732.09" y="1863.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (13,539,377 samples, 31.00%)</title><rect x="824.1" y="2077" width="365.9" height="15.0" fill="rgb(225,124,50)" rx="2" ry="2" />
<text  x="827.15" y="2087.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>do_read_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="1949" width="6.0" height="15.0" fill="rgb(205,103,31)" rx="2" ry="2" />
<text  x="500.34" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="829" width="37.6" height="15.0" fill="rgb(218,42,30)" rx="2" ry="2" />
<text  x="589.33" y="839.5" >std..</text>
</g>
<g >
<title>unlink_file_vma (216,125 samples, 0.49%)</title><rect x="623.9" y="1837" width="5.8" height="15.0" fill="rgb(227,129,8)" rx="2" ry="2" />
<text  x="626.90" y="1847.5" ></text>
</g>
<g >
<title>irqentry_exit (277,886 samples, 0.64%)</title><rect x="801.9" y="1933" width="7.5" height="15.0" fill="rgb(239,63,8)" rx="2" ry="2" />
<text  x="804.87" y="1943.5" ></text>
</g>
<g >
<title>dequeue_entity (750,953 samples, 1.72%)</title><rect x="708.8" y="1853" width="20.3" height="15.0" fill="rgb(220,25,13)" rx="2" ry="2" />
<text  x="711.80" y="1863.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (183,512 samples, 0.42%)</title><rect x="1177.7" y="1853" width="4.9" height="15.0" fill="rgb(249,89,52)" rx="2" ry="2" />
<text  x="1180.66" y="1863.5" ></text>
</g>
<g >
<title>arch_call_rest_init (456,806 samples, 1.05%)</title><rect x="1177.7" y="2013" width="12.3" height="15.0" fill="rgb(226,48,9)" rx="2" ry="2" />
<text  x="1180.66" y="2023.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (456,806 samples, 1.05%)</title><rect x="1177.7" y="2061" width="12.3" height="15.0" fill="rgb(207,228,52)" rx="2" ry="2" />
<text  x="1180.66" y="2071.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (111,117 samples, 0.25%)</title><rect x="1187.0" y="1901" width="3.0" height="15.0" fill="rgb(248,107,36)" rx="2" ry="2" />
<text  x="1190.00" y="1911.5" ></text>
</g>
<g >
<title>enqueue_task (494,677 samples, 1.13%)</title><rect x="507.7" y="1981" width="13.4" height="15.0" fill="rgb(210,126,52)" rx="2" ry="2" />
<text  x="510.74" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1549" width="37.6" height="15.0" fill="rgb(213,1,14)" rx="2" ry="2" />
<text  x="589.33" y="1559.5" >std..</text>
</g>
<g >
<title>do_epoll_wait (185,301 samples, 0.42%)</title><rect x="576.5" y="1917" width="5.0" height="15.0" fill="rgb(226,173,2)" rx="2" ry="2" />
<text  x="579.53" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1405" width="37.6" height="15.0" fill="rgb(223,121,25)" rx="2" ry="2" />
<text  x="589.33" y="1415.5" >std..</text>
</g>
<g >
<title>uv__read (177,397 samples, 0.41%)</title><rect x="581.5" y="1949" width="4.8" height="15.0" fill="rgb(254,68,50)" rx="2" ry="2" />
<text  x="584.54" y="1959.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (277,886 samples, 0.64%)</title><rect x="801.9" y="1965" width="7.5" height="15.0" fill="rgb(216,100,53)" rx="2" ry="2" />
<text  x="804.87" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1453" width="37.6" height="15.0" fill="rgb(228,229,8)" rx="2" ry="2" />
<text  x="589.33" y="1463.5" >std..</text>
</g>
<g >
<title>error_entry (281,381 samples, 0.64%)</title><rect x="816.5" y="1805" width="7.6" height="15.0" fill="rgb(227,10,12)" rx="2" ry="2" />
<text  x="819.54" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="509" width="37.6" height="15.0" fill="rgb(253,204,19)" rx="2" ry="2" />
<text  x="589.33" y="519.5" >std..</text>
</g>
<g >
<title>__fput (207,393 samples, 0.47%)</title><rect x="788.6" y="1869" width="5.6" height="15.0" fill="rgb(225,214,21)" rx="2" ry="2" />
<text  x="791.62" y="1879.5" ></text>
</g>
<g >
<title>_perf_event_enable (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1885" width="36.5" height="15.0" fill="rgb(251,42,13)" rx="2" ry="2" />
<text  x="654.33" y="1895.5" >_pe..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (498,045 samples, 1.14%)</title><rect x="835.3" y="1949" width="13.4" height="15.0" fill="rgb(209,214,34)" rx="2" ry="2" />
<text  x="838.28" y="1959.5" ></text>
</g>
<g >
<title>alloc_cpumask_var_node (77,489 samples, 0.18%)</title><rect x="786.5" y="1885" width="2.1" height="15.0" fill="rgb(242,165,28)" rx="2" ry="2" />
<text  x="789.53" y="1895.5" ></text>
</g>
<g >
<title>__remove_hrtimer (207,845 samples, 0.48%)</title><rect x="1172.0" y="1949" width="5.7" height="15.0" fill="rgb(224,6,34)" rx="2" ry="2" />
<text  x="1175.04" y="1959.5" ></text>
</g>
<g >
<title>irq_exit_rcu (498,045 samples, 1.14%)</title><rect x="835.3" y="1933" width="13.4" height="15.0" fill="rgb(236,26,52)" rx="2" ry="2" />
<text  x="838.28" y="1943.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (207,393 samples, 0.47%)</title><rect x="788.6" y="1949" width="5.6" height="15.0" fill="rgb(252,80,7)" rx="2" ry="2" />
<text  x="791.62" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1197" width="37.6" height="15.0" fill="rgb(238,210,49)" rx="2" ry="2" />
<text  x="589.33" y="1207.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1773" width="37.5" height="15.0" fill="rgb(222,204,35)" rx="2" ry="2" />
<text  x="541.96" y="1783.5" >std..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (277,886 samples, 0.64%)</title><rect x="801.9" y="1917" width="7.5" height="15.0" fill="rgb(235,139,50)" rx="2" ry="2" />
<text  x="804.87" y="1927.5" ></text>
</g>
<g >
<title>get_nohz_timer_target (207,121 samples, 0.47%)</title><rect x="829.7" y="1677" width="5.6" height="15.0" fill="rgb(236,38,26)" rx="2" ry="2" />
<text  x="832.69" y="1687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="61" width="37.6" height="15.0" fill="rgb(224,9,33)" rx="2" ry="2" />
<text  x="589.33" y="71.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1341" width="37.5" height="15.0" fill="rgb(239,34,8)" rx="2" ry="2" />
<text  x="541.96" y="1351.5" >std..</text>
</g>
<g >
<title>epoll_wait (185,301 samples, 0.42%)</title><rect x="576.5" y="1981" width="5.0" height="15.0" fill="rgb(223,217,30)" rx="2" ry="2" />
<text  x="579.53" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="109" width="37.6" height="15.0" fill="rgb(217,46,0)" rx="2" ry="2" />
<text  x="589.33" y="119.5" >std..</text>
</g>
<g >
<title>vma_do_fput (227,720 samples, 0.52%)</title><rect x="629.7" y="1837" width="6.2" height="15.0" fill="rgb(217,133,29)" rx="2" ry="2" />
<text  x="632.74" y="1847.5" ></text>
</g>
<g >
<title>handle_mm_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="2013" width="6.0" height="15.0" fill="rgb(242,38,42)" rx="2" ry="2" />
<text  x="500.34" y="2023.5" ></text>
</g>
<g >
<title>rebalance_domains (498,045 samples, 1.14%)</title><rect x="835.3" y="1885" width="13.4" height="15.0" fill="rgb(220,122,19)" rx="2" ry="2" />
<text  x="838.28" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1597" width="37.6" height="15.0" fill="rgb(244,203,47)" rx="2" ry="2" />
<text  x="589.33" y="1607.5" >std..</text>
</g>
<g >
<title>unmap_single_vma (391,454 samples, 0.90%)</title><rect x="635.9" y="1837" width="10.6" height="15.0" fill="rgb(240,40,19)" rx="2" ry="2" />
<text  x="638.90" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="685" width="37.6" height="15.0" fill="rgb(214,62,23)" rx="2" ry="2" />
<text  x="589.33" y="695.5" >std..</text>
</g>
<g >
<title>unmap_vmas (391,454 samples, 0.90%)</title><rect x="635.9" y="1853" width="10.6" height="15.0" fill="rgb(228,17,48)" rx="2" ry="2" />
<text  x="638.90" y="1863.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (207,845 samples, 0.48%)</title><rect x="1172.0" y="2013" width="5.7" height="15.0" fill="rgb(232,221,27)" rx="2" ry="2" />
<text  x="1175.04" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1181" width="37.6" height="15.0" fill="rgb(209,36,36)" rx="2" ry="2" />
<text  x="589.33" y="1191.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1517" width="37.6" height="15.0" fill="rgb(223,177,42)" rx="2" ry="2" />
<text  x="589.33" y="1527.5" >std..</text>
</g>
<g >
<title>__sched_setaffinity (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1917" width="98.0" height="15.0" fill="rgb(209,11,34)" rx="2" ry="2" />
<text  x="693.61" y="1927.5" >__sched_set..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1821" width="37.5" height="15.0" fill="rgb(216,58,16)" rx="2" ry="2" />
<text  x="541.96" y="1831.5" >std..</text>
</g>
<g >
<title>migration/4 (522,704 samples, 1.20%)</title><rect x="524.8" y="2093" width="14.2" height="15.0" fill="rgb(210,98,22)" rx="2" ry="2" />
<text  x="527.84" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1853" width="37.5" height="15.0" fill="rgb(253,169,30)" rx="2" ry="2" />
<text  x="541.96" y="1863.5" >std..</text>
</g>
<g >
<title>__close (207,393 samples, 0.47%)</title><rect x="788.6" y="1997" width="5.6" height="15.0" fill="rgb(214,131,20)" rx="2" ry="2" />
<text  x="791.62" y="2007.5" ></text>
</g>
<g >
<title>load_elf_binary (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1933" width="27.4" height="15.0" fill="rgb(207,160,11)" rx="2" ry="2" />
<text  x="626.90" y="1943.5" >l..</text>
</g>
<g >
<title>kthread (138,280 samples, 0.32%)</title><rect x="521.1" y="2061" width="3.7" height="15.0" fill="rgb(240,204,9)" rx="2" ry="2" />
<text  x="524.10" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1789" width="37.5" height="15.0" fill="rgb(234,196,13)" rx="2" ry="2" />
<text  x="541.96" y="1799.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1693" width="37.5" height="15.0" fill="rgb(236,15,24)" rx="2" ry="2" />
<text  x="541.96" y="1703.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="909" width="37.6" height="15.0" fill="rgb(233,96,50)" rx="2" ry="2" />
<text  x="589.33" y="919.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1741" width="37.5" height="15.0" fill="rgb(243,44,34)" rx="2" ry="2" />
<text  x="541.96" y="1751.5" >std..</text>
</g>
<g >
<title>[[vdso]] (7,411,834 samples, 16.97%)</title><rect x="266.2" y="2013" width="200.3" height="15.0" fill="rgb(235,200,9)" rx="2" ry="2" />
<text  x="269.20" y="2023.5" >[[vdso]]</text>
</g>
<g >
<title>[chase] (289,920 samples, 0.66%)</title><rect x="137.4" y="2029" width="7.8" height="15.0" fill="rgb(229,42,12)" rx="2" ry="2" />
<text  x="140.36" y="2039.5" ></text>
</g>
<g >
<title>update_load_avg (420,745 samples, 0.96%)</title><rect x="717.7" y="1837" width="11.4" height="15.0" fill="rgb(242,51,20)" rx="2" ry="2" />
<text  x="720.73" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1837" width="37.6" height="15.0" fill="rgb(211,221,39)" rx="2" ry="2" />
<text  x="589.33" y="1847.5" >std..</text>
</g>
<g >
<title>irq_exit_rcu (72,685 samples, 0.17%)</title><rect x="651.3" y="1789" width="2.0" height="15.0" fill="rgb(224,45,37)" rx="2" ry="2" />
<text  x="654.33" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="301" width="37.6" height="15.0" fill="rgb(218,227,40)" rx="2" ry="2" />
<text  x="589.33" y="311.5" >std..</text>
</g>
<g >
<title>handle_pte_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="1981" width="6.0" height="15.0" fill="rgb(220,205,49)" rx="2" ry="2" />
<text  x="500.34" y="1991.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2045" width="27.4" height="15.0" fill="rgb(212,140,13)" rx="2" ry="2" />
<text  x="626.90" y="2055.5" >d..</text>
</g>
<g >
<title>do_syscall_64 (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1965" width="98.0" height="15.0" fill="rgb(224,118,31)" rx="2" ry="2" />
<text  x="693.61" y="1975.5" >do_syscall_64</text>
</g>
<g >
<title>exc_page_fault (265,045 samples, 0.61%)</title><rect x="809.4" y="1773" width="7.1" height="15.0" fill="rgb(234,223,17)" rx="2" ry="2" />
<text  x="812.38" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1885" width="37.5" height="15.0" fill="rgb(234,84,20)" rx="2" ry="2" />
<text  x="541.96" y="1895.5" >std..</text>
</g>
<g >
<title>tasklet_action (207,121 samples, 0.47%)</title><rect x="829.7" y="1901" width="5.6" height="15.0" fill="rgb(216,59,3)" rx="2" ry="2" />
<text  x="832.69" y="1911.5" ></text>
</g>
<g >
<title>put_prev_entity (170,029 samples, 0.39%)</title><rect x="761.1" y="1853" width="4.6" height="15.0" fill="rgb(225,92,48)" rx="2" ry="2" />
<text  x="764.07" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1229" width="37.6" height="15.0" fill="rgb(225,198,46)" rx="2" ry="2" />
<text  x="589.33" y="1239.5" >std..</text>
</g>
<g >
<title>irq_exit_rcu (183,512 samples, 0.42%)</title><rect x="1177.7" y="1869" width="4.9" height="15.0" fill="rgb(232,15,30)" rx="2" ry="2" />
<text  x="1180.66" y="1879.5" ></text>
</g>
<g >
<title>do_user_addr_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="2029" width="6.0" height="15.0" fill="rgb(222,16,19)" rx="2" ry="2" />
<text  x="500.34" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1261" width="37.5" height="15.0" fill="rgb(249,202,11)" rx="2" ry="2" />
<text  x="541.96" y="1271.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="429" width="37.6" height="15.0" fill="rgb(221,227,3)" rx="2" ry="2" />
<text  x="589.33" y="439.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="749" width="37.6" height="15.0" fill="rgb(252,69,44)" rx="2" ry="2" />
<text  x="589.33" y="759.5" >std..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (177,397 samples, 0.41%)</title><rect x="581.5" y="1917" width="4.8" height="15.0" fill="rgb(253,225,28)" rx="2" ry="2" />
<text  x="584.54" y="1927.5" ></text>
</g>
<g >
<title>do_syscall_64 (546,426 samples, 1.25%)</title><rect x="809.4" y="1933" width="14.7" height="15.0" fill="rgb(241,100,13)" rx="2" ry="2" />
<text  x="812.38" y="1943.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (179,627 samples, 0.41%)</title><rect x="646.5" y="1853" width="4.8" height="15.0" fill="rgb(241,64,27)" rx="2" ry="2" />
<text  x="649.47" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1869" width="37.6" height="15.0" fill="rgb(246,53,17)" rx="2" ry="2" />
<text  x="589.33" y="1879.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="781" width="37.6" height="15.0" fill="rgb(218,186,47)" rx="2" ry="2" />
<text  x="589.33" y="791.5" >std..</text>
</g>
<g >
<title>generic_perform_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1821" width="14.7" height="15.0" fill="rgb(219,202,19)" rx="2" ry="2" />
<text  x="812.38" y="1831.5" ></text>
</g>
<g >
<title>__update_load_avg_se (85,014 samples, 0.19%)</title><rect x="747.3" y="1821" width="2.3" height="15.0" fill="rgb(232,189,37)" rx="2" ry="2" />
<text  x="750.31" y="1831.5" ></text>
</g>
<g >
<title>select_estimate_accuracy (185,301 samples, 0.42%)</title><rect x="576.5" y="1885" width="5.0" height="15.0" fill="rgb(244,188,6)" rx="2" ry="2" />
<text  x="579.53" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1693" width="37.6" height="15.0" fill="rgb(245,225,28)" rx="2" ry="2" />
<text  x="589.33" y="1703.5" >std..</text>
</g>
<g >
<title>do_syscall_64 (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1965" width="36.5" height="15.0" fill="rgb(242,9,46)" rx="2" ry="2" />
<text  x="654.33" y="1975.5" >do_..</text>
</g>
<g >
<title>bprm_execve (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1997" width="27.4" height="15.0" fill="rgb(234,106,52)" rx="2" ry="2" />
<text  x="626.90" y="2007.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1853" width="37.6" height="15.0" fill="rgb(232,135,23)" rx="2" ry="2" />
<text  x="589.33" y="1863.5" >std..</text>
</g>
<g >
<title>kthread (522,704 samples, 1.20%)</title><rect x="524.8" y="2061" width="14.2" height="15.0" fill="rgb(220,133,36)" rx="2" ry="2" />
<text  x="527.84" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1773" width="37.6" height="15.0" fill="rgb(228,166,33)" rx="2" ry="2" />
<text  x="589.33" y="1783.5" >std..</text>
</g>
<g >
<title>dequeue_task_fair (1,424,669 samples, 3.26%)</title><rect x="704.2" y="1869" width="38.5" height="15.0" fill="rgb(239,201,1)" rx="2" ry="2" />
<text  x="707.22" y="1879.5" >deq..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1309" width="37.6" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="589.33" y="1319.5" >std..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (85,537 samples, 0.20%)</title><rect x="768.0" y="1885" width="2.3" height="15.0" fill="rgb(230,61,42)" rx="2" ry="2" />
<text  x="770.98" y="1895.5" ></text>
</g>
<g >
<title>perf_event__synthesize_comm (207,393 samples, 0.47%)</title><rect x="788.6" y="2013" width="5.6" height="15.0" fill="rgb(218,28,51)" rx="2" ry="2" />
<text  x="791.62" y="2023.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (498,045 samples, 1.14%)</title><rect x="835.3" y="1965" width="13.4" height="15.0" fill="rgb(210,167,14)" rx="2" ry="2" />
<text  x="838.28" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="733" width="37.6" height="15.0" fill="rgb(230,13,29)" rx="2" ry="2" />
<text  x="589.33" y="743.5" >std..</text>
</g>
<g >
<title>v8::Function::Call (177,397 samples, 0.41%)</title><rect x="581.5" y="1837" width="4.8" height="15.0" fill="rgb(227,164,44)" rx="2" ry="2" />
<text  x="584.54" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1629" width="37.5" height="15.0" fill="rgb(235,119,40)" rx="2" ry="2" />
<text  x="541.96" y="1639.5" >std..</text>
</g>
<g >
<title>migration_cpu_stop (494,677 samples, 1.13%)</title><rect x="507.7" y="2013" width="13.4" height="15.0" fill="rgb(233,4,51)" rx="2" ry="2" />
<text  x="510.74" y="2023.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (207,393 samples, 0.47%)</title><rect x="788.6" y="1933" width="5.6" height="15.0" fill="rgb(212,174,0)" rx="2" ry="2" />
<text  x="791.62" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1613" width="37.5" height="15.0" fill="rgb(205,154,32)" rx="2" ry="2" />
<text  x="541.96" y="1623.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1805" width="37.6" height="15.0" fill="rgb(205,204,24)" rx="2" ry="2" />
<text  x="589.33" y="1815.5" >std..</text>
</g>
<g >
<title>dequeue_task (138,280 samples, 0.32%)</title><rect x="521.1" y="1981" width="3.7" height="15.0" fill="rgb(219,1,1)" rx="2" ry="2" />
<text  x="524.10" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1613" width="37.6" height="15.0" fill="rgb(222,29,18)" rx="2" ry="2" />
<text  x="589.33" y="1623.5" >std..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (183,512 samples, 0.42%)</title><rect x="1177.7" y="1901" width="4.9" height="15.0" fill="rgb(219,98,11)" rx="2" ry="2" />
<text  x="1180.66" y="1911.5" ></text>
</g>
<g >
<title>dma_unmap_page_attrs (207,121 samples, 0.47%)</title><rect x="829.7" y="1805" width="5.6" height="15.0" fill="rgb(216,214,32)" rx="2" ry="2" />
<text  x="832.69" y="1815.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (179,627 samples, 0.41%)</title><rect x="646.5" y="1869" width="4.8" height="15.0" fill="rgb(224,204,47)" rx="2" ry="2" />
<text  x="649.47" y="1879.5" ></text>
</g>
<g >
<title>task_work_run (207,393 samples, 0.47%)</title><rect x="788.6" y="1901" width="5.6" height="15.0" fill="rgb(245,109,34)" rx="2" ry="2" />
<text  x="791.62" y="1911.5" ></text>
</g>
<g >
<title>do_syscall_64 (185,301 samples, 0.42%)</title><rect x="576.5" y="1949" width="5.0" height="15.0" fill="rgb(248,91,45)" rx="2" ry="2" />
<text  x="579.53" y="1959.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (1,390,340 samples, 3.18%)</title><rect x="539.0" y="2061" width="37.5" height="15.0" fill="rgb(209,150,27)" rx="2" ry="2" />
<text  x="541.96" y="2071.5" >std..</text>
</g>
<g >
<title>do_idle (456,806 samples, 1.05%)</title><rect x="1177.7" y="1965" width="12.3" height="15.0" fill="rgb(232,72,43)" rx="2" ry="2" />
<text  x="1180.66" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="541" width="37.6" height="15.0" fill="rgb(230,84,30)" rx="2" ry="2" />
<text  x="589.33" y="551.5" >std..</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1949" width="98.0" height="15.0" fill="rgb(229,153,4)" rx="2" ry="2" />
<text  x="693.61" y="1959.5" >__x64_sys_s..</text>
</g>
<g >
<title>__GI___ioctl (1,453,645 samples, 3.33%)</title><rect x="651.3" y="1997" width="39.3" height="15.0" fill="rgb(218,148,28)" rx="2" ry="2" />
<text  x="654.33" y="2007.5" >__G..</text>
</g>
<g >
<title>put_prev_entity (256,285 samples, 0.59%)</title><rect x="751.9" y="1869" width="6.9" height="15.0" fill="rgb(242,2,32)" rx="2" ry="2" />
<text  x="754.87" y="1879.5" ></text>
</g>
<g >
<title>update_blocked_averages (183,512 samples, 0.42%)</title><rect x="1177.7" y="1821" width="4.9" height="15.0" fill="rgb(236,79,28)" rx="2" ry="2" />
<text  x="1180.66" y="1831.5" ></text>
</g>
<g >
<title>irq_exit_rcu (207,121 samples, 0.47%)</title><rect x="829.7" y="1933" width="5.6" height="15.0" fill="rgb(227,119,42)" rx="2" ry="2" />
<text  x="832.69" y="1943.5" ></text>
</g>
<g >
<title>ret_from_fork (522,704 samples, 1.20%)</title><rect x="524.8" y="2077" width="14.2" height="15.0" fill="rgb(236,150,11)" rx="2" ry="2" />
<text  x="527.84" y="2087.5" ></text>
</g>
<g >
<title>v8::Value::IsArrayBufferView (177,397 samples, 0.41%)</title><rect x="581.5" y="1677" width="4.8" height="15.0" fill="rgb(218,19,39)" rx="2" ry="2" />
<text  x="584.54" y="1687.5" ></text>
</g>
<g >
<title>operator new (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1245" width="37.5" height="15.0" fill="rgb(209,194,38)" rx="2" ry="2" />
<text  x="541.96" y="1255.5" >ope..</text>
</g>
<g >
<title>load_balance (498,045 samples, 1.14%)</title><rect x="835.3" y="1869" width="13.4" height="15.0" fill="rgb(219,43,47)" rx="2" ry="2" />
<text  x="838.28" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="237" width="37.6" height="15.0" fill="rgb(217,79,14)" rx="2" ry="2" />
<text  x="589.33" y="247.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="381" width="37.6" height="15.0" fill="rgb(250,44,22)" rx="2" ry="2" />
<text  x="589.33" y="391.5" >std..</text>
</g>
<g >
<title>put_prev_task_fair (253,895 samples, 0.58%)</title><rect x="758.8" y="1869" width="6.9" height="15.0" fill="rgb(232,130,23)" rx="2" ry="2" />
<text  x="761.80" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="957" width="37.6" height="15.0" fill="rgb(215,55,37)" rx="2" ry="2" />
<text  x="589.33" y="967.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1405" width="37.5" height="15.0" fill="rgb(238,20,16)" rx="2" ry="2" />
<text  x="541.96" y="1415.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1341" width="37.6" height="15.0" fill="rgb(219,191,18)" rx="2" ry="2" />
<text  x="589.33" y="1351.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="589" width="37.6" height="15.0" fill="rgb(209,101,27)" rx="2" ry="2" />
<text  x="589.33" y="599.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1709" width="37.5" height="15.0" fill="rgb(249,198,14)" rx="2" ry="2" />
<text  x="541.96" y="1719.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="2061" width="37.6" height="15.0" fill="rgb(221,66,2)" rx="2" ry="2" />
<text  x="589.33" y="2071.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="477" width="37.6" height="15.0" fill="rgb(233,7,2)" rx="2" ry="2" />
<text  x="589.33" y="487.5" >std..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (207,393 samples, 0.47%)</title><rect x="788.6" y="1981" width="5.6" height="15.0" fill="rgb(236,31,8)" rx="2" ry="2" />
<text  x="791.62" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1357" width="37.5" height="15.0" fill="rgb(237,212,43)" rx="2" ry="2" />
<text  x="541.96" y="1367.5" >std..</text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1997" width="37.5" height="15.0" fill="rgb(206,147,50)" rx="2" ry="2" />
<text  x="541.96" y="2007.5" >Ino..</text>
</g>
<g >
<title>main (16,658,426 samples, 38.15%)</title><rect x="40.8" y="2061" width="450.1" height="15.0" fill="rgb(208,15,22)" rx="2" ry="2" />
<text  x="43.79" y="2071.5" >main</text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (177,397 samples, 0.41%)</title><rect x="581.5" y="1901" width="4.8" height="15.0" fill="rgb(220,141,38)" rx="2" ry="2" />
<text  x="584.54" y="1911.5" ></text>
</g>
<g >
<title>enqueue_task_fair (84,780 samples, 0.19%)</title><rect x="770.3" y="1885" width="2.3" height="15.0" fill="rgb(210,159,2)" rx="2" ry="2" />
<text  x="773.30" y="1895.5" ></text>
</g>
<g >
<title>[perf-273006.map] (177,397 samples, 0.41%)</title><rect x="581.5" y="1725" width="4.8" height="15.0" fill="rgb(252,45,6)" rx="2" ry="2" />
<text  x="584.54" y="1735.5" ></text>
</g>
<g >
<title>[perf-273006.map] (177,397 samples, 0.41%)</title><rect x="581.5" y="1757" width="4.8" height="15.0" fill="rgb(249,195,43)" rx="2" ry="2" />
<text  x="584.54" y="1767.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (177,397 samples, 0.41%)</title><rect x="581.5" y="1789" width="4.8" height="15.0" fill="rgb(207,18,0)" rx="2" ry="2" />
<text  x="584.54" y="1799.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (177,397 samples, 0.41%)</title><rect x="581.5" y="1885" width="4.8" height="15.0" fill="rgb(207,152,40)" rx="2" ry="2" />
<text  x="584.54" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1885" width="37.6" height="15.0" fill="rgb(217,74,47)" rx="2" ry="2" />
<text  x="589.33" y="1895.5" >std..</text>
</g>
<g >
<title>node::InternalMakeCallback (177,397 samples, 0.41%)</title><rect x="581.5" y="1853" width="4.8" height="15.0" fill="rgb(238,109,18)" rx="2" ry="2" />
<text  x="584.54" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1389" width="37.5" height="15.0" fill="rgb(214,49,43)" rx="2" ry="2" />
<text  x="541.96" y="1399.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1213" width="37.6" height="15.0" fill="rgb(234,35,50)" rx="2" ry="2" />
<text  x="589.33" y="1223.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="141" width="37.6" height="15.0" fill="rgb(235,64,47)" rx="2" ry="2" />
<text  x="589.33" y="151.5" >std..</text>
</g>
<g >
<title>__get_user_nocheck_1 (265,045 samples, 0.61%)</title><rect x="809.4" y="1805" width="7.1" height="15.0" fill="rgb(213,99,42)" rx="2" ry="2" />
<text  x="812.38" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="157" width="37.6" height="15.0" fill="rgb(212,120,38)" rx="2" ry="2" />
<text  x="589.33" y="167.5" >std..</text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (177,397 samples, 0.41%)</title><rect x="581.5" y="1869" width="4.8" height="15.0" fill="rgb(212,72,24)" rx="2" ry="2" />
<text  x="584.54" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1437" width="37.5" height="15.0" fill="rgb(220,42,43)" rx="2" ry="2" />
<text  x="541.96" y="1447.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1261" width="37.6" height="15.0" fill="rgb(246,27,16)" rx="2" ry="2" />
<text  x="589.33" y="1271.5" >std..</text>
</g>
<g >
<title>swapper (13,539,377 samples, 31.00%)</title><rect x="824.1" y="2093" width="365.9" height="15.0" fill="rgb(244,182,30)" rx="2" ry="2" />
<text  x="827.15" y="2103.5" >swapper</text>
</g>
<g >
<title>exit_mmap (835,299 samples, 1.91%)</title><rect x="623.9" y="1869" width="22.6" height="15.0" fill="rgb(234,211,20)" rx="2" ry="2" />
<text  x="626.90" y="1879.5" >e..</text>
</g>
<g >
<title>do_syscall_64 (207,393 samples, 0.47%)</title><rect x="788.6" y="1965" width="5.6" height="15.0" fill="rgb(251,132,44)" rx="2" ry="2" />
<text  x="791.62" y="1975.5" ></text>
</g>
<g >
<title>iommu_dma_unmap_page (207,121 samples, 0.47%)</title><rect x="829.7" y="1789" width="5.6" height="15.0" fill="rgb(207,189,22)" rx="2" ry="2" />
<text  x="832.69" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1117" width="37.6" height="15.0" fill="rgb(221,98,14)" rx="2" ry="2" />
<text  x="589.33" y="1127.5" >std..</text>
</g>
<g >
<title>__x64_sys_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1917" width="14.7" height="15.0" fill="rgb(212,118,49)" rx="2" ry="2" />
<text  x="812.38" y="1927.5" ></text>
</g>
<g >
<title>migration/28 (494,677 samples, 1.13%)</title><rect x="507.7" y="2093" width="13.4" height="15.0" fill="rgb(219,183,28)" rx="2" ry="2" />
<text  x="510.74" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="205" width="37.6" height="15.0" fill="rgb(244,24,26)" rx="2" ry="2" />
<text  x="589.33" y="215.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1901" width="37.5" height="15.0" fill="rgb(250,214,18)" rx="2" ry="2" />
<text  x="541.96" y="1911.5" >std..</text>
</g>
<g >
<title>__GI___libc_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1965" width="14.7" height="15.0" fill="rgb(245,37,51)" rx="2" ry="2" />
<text  x="812.38" y="1975.5" ></text>
</g>
<g >
<title>fput_many (227,720 samples, 0.52%)</title><rect x="629.7" y="1821" width="6.2" height="15.0" fill="rgb(252,101,28)" rx="2" ry="2" />
<text  x="632.74" y="1831.5" ></text>
</g>
<g >
<title>update_load_avg (85,014 samples, 0.19%)</title><rect x="747.3" y="1837" width="2.3" height="15.0" fill="rgb(216,159,50)" rx="2" ry="2" />
<text  x="750.31" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="221" width="37.6" height="15.0" fill="rgb(241,160,9)" rx="2" ry="2" />
<text  x="589.33" y="231.5" >std..</text>
</g>
<g >
<title>perf_ioctl (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1933" width="36.5" height="15.0" fill="rgb(231,74,54)" rx="2" ry="2" />
<text  x="654.33" y="1943.5" >per..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="333" width="37.6" height="15.0" fill="rgb(216,157,33)" rx="2" ry="2" />
<text  x="589.33" y="343.5" >std..</text>
</g>
<g >
<title>ctx_resched (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1773" width="33.7" height="15.0" fill="rgb(242,51,53)" rx="2" ry="2" />
<text  x="657.09" y="1783.5" >ct..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1421" width="37.5" height="15.0" fill="rgb(242,39,39)" rx="2" ry="2" />
<text  x="541.96" y="1431.5" >std..</text>
</g>
<g >
<title>do_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="1965" width="6.0" height="15.0" fill="rgb(252,199,17)" rx="2" ry="2" />
<text  x="500.34" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1165" width="37.6" height="15.0" fill="rgb(211,36,11)" rx="2" ry="2" />
<text  x="589.33" y="1175.5" >std..</text>
</g>
<g >
<title>node (3,143,378 samples, 7.20%)</title><rect x="539.0" y="2093" width="84.9" height="15.0" fill="rgb(223,111,50)" rx="2" ry="2" />
<text  x="541.96" y="2103.5" >node</text>
</g>
<g >
<title>__update_load_avg_se (82,388 samples, 0.19%)</title><rect x="724.6" y="1821" width="2.2" height="15.0" fill="rgb(206,222,29)" rx="2" ry="2" />
<text  x="727.55" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="845" width="37.6" height="15.0" fill="rgb(237,175,24)" rx="2" ry="2" />
<text  x="589.33" y="855.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,390,340 samples, 3.18%)</title><rect x="586.3" y="93" width="37.6" height="15.0" fill="rgb(250,1,12)" rx="2" ry="2" />
<text  x="589.33" y="103.5" >std..</text>
</g>
<g >
<title>enqueue_entity (255,069 samples, 0.58%)</title><rect x="742.7" y="1853" width="6.9" height="15.0" fill="rgb(226,47,8)" rx="2" ry="2" />
<text  x="745.71" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1101" width="37.6" height="15.0" fill="rgb(208,115,20)" rx="2" ry="2" />
<text  x="589.33" y="1111.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="2045" width="37.6" height="15.0" fill="rgb(220,187,30)" rx="2" ry="2" />
<text  x="589.33" y="2055.5" >std..</text>
</g>
<g >
<title>smp_call_function_single (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1853" width="36.5" height="15.0" fill="rgb(207,13,29)" rx="2" ry="2" />
<text  x="654.33" y="1863.5" >smp..</text>
</g>
<g >
<title>cpuidle_enter (345,689 samples, 0.79%)</title><rect x="1177.7" y="1933" width="9.3" height="15.0" fill="rgb(251,217,21)" rx="2" ry="2" />
<text  x="1180.66" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="285" width="37.6" height="15.0" fill="rgb(205,132,30)" rx="2" ry="2" />
<text  x="589.33" y="295.5" >std..</text>
</g>
<g >
<title>cpu_stopper_thread (138,280 samples, 0.32%)</title><rect x="521.1" y="2029" width="3.7" height="15.0" fill="rgb(240,118,20)" rx="2" ry="2" />
<text  x="524.10" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1021" width="37.6" height="15.0" fill="rgb(222,177,14)" rx="2" ry="2" />
<text  x="589.33" y="1031.5" >std..</text>
</g>
<g >
<title>__switch_to_asm (163,759 samples, 0.37%)</title><rect x="503.3" y="2077" width="4.4" height="15.0" fill="rgb(218,196,2)" rx="2" ry="2" />
<text  x="506.31" y="2087.5" ></text>
</g>
<g >
<title>usb_giveback_urb_bh (207,121 samples, 0.47%)</title><rect x="829.7" y="1869" width="5.6" height="15.0" fill="rgb(235,121,8)" rx="2" ry="2" />
<text  x="832.69" y="1879.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="2061" width="6.0" height="15.0" fill="rgb(245,3,7)" rx="2" ry="2" />
<text  x="500.34" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="717" width="37.6" height="15.0" fill="rgb(211,46,31)" rx="2" ry="2" />
<text  x="589.33" y="727.5" >std..</text>
</g>
<g >
<title>__libc_start_call_main (16,658,426 samples, 38.15%)</title><rect x="40.8" y="2077" width="450.1" height="15.0" fill="rgb(220,209,13)" rx="2" ry="2" />
<text  x="43.79" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1661" width="37.6" height="15.0" fill="rgb(217,194,24)" rx="2" ry="2" />
<text  x="589.33" y="1671.5" >std..</text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (3,549,727 samples, 8.13%)</title><rect x="690.6" y="1901" width="95.9" height="15.0" fill="rgb(217,126,3)" rx="2" ry="2" />
<text  x="693.61" y="1911.5" >__set_cpus_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="557" width="37.6" height="15.0" fill="rgb(209,123,8)" rx="2" ry="2" />
<text  x="589.33" y="567.5" >std..</text>
</g>
<g >
<title>exec_mmap (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1901" width="27.4" height="15.0" fill="rgb(211,167,33)" rx="2" ry="2" />
<text  x="626.90" y="1911.5" >e..</text>
</g>
<g >
<title>node::Start (362,698 samples, 0.83%)</title><rect x="576.5" y="2061" width="9.8" height="15.0" fill="rgb(227,220,34)" rx="2" ry="2" />
<text  x="579.53" y="2071.5" ></text>
</g>
<g >
<title>Timer::calibrate (15,753,472 samples, 36.07%)</title><rect x="40.8" y="2045" width="425.7" height="15.0" fill="rgb(240,109,40)" rx="2" ry="2" />
<text  x="43.79" y="2055.5" >Timer::calibrate</text>
</g>
<g >
<title>update_load_avg (138,280 samples, 0.32%)</title><rect x="521.1" y="1933" width="3.7" height="15.0" fill="rgb(218,188,29)" rx="2" ry="2" />
<text  x="524.10" y="1943.5" ></text>
</g>
<g >
<title>alloc_cpumask_var (77,489 samples, 0.18%)</title><rect x="786.5" y="1901" width="2.1" height="15.0" fill="rgb(235,9,41)" rx="2" ry="2" />
<text  x="789.53" y="1911.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,082,571 samples, 29.96%)</title><rect x="824.1" y="2045" width="353.6" height="15.0" fill="rgb(254,60,38)" rx="2" ry="2" />
<text  x="827.15" y="2055.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="525" width="37.6" height="15.0" fill="rgb(247,100,18)" rx="2" ry="2" />
<text  x="589.33" y="535.5" >std..</text>
</g>
<g >
<title>rb_erase (207,845 samples, 0.48%)</title><rect x="1172.0" y="1933" width="5.7" height="15.0" fill="rgb(253,96,48)" rx="2" ry="2" />
<text  x="1175.04" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1005" width="37.6" height="15.0" fill="rgb(228,41,35)" rx="2" ry="2" />
<text  x="589.33" y="1015.5" >std..</text>
</g>
<g >
<title>unmap_page_range (391,454 samples, 0.90%)</title><rect x="635.9" y="1821" width="10.6" height="15.0" fill="rgb(254,115,45)" rx="2" ry="2" />
<text  x="638.90" y="1831.5" ></text>
</g>
<g >
<title>[[vdso]] (421,418 samples, 0.97%)</title><rect x="126.0" y="2029" width="11.4" height="15.0" fill="rgb(224,74,20)" rx="2" ry="2" />
<text  x="128.97" y="2039.5" ></text>
</g>
<g >
<title>native_write_msr (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1725" width="33.7" height="15.0" fill="rgb(225,55,21)" rx="2" ry="2" />
<text  x="657.09" y="1735.5" >na..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="605" width="37.6" height="15.0" fill="rgb(243,186,20)" rx="2" ry="2" />
<text  x="589.33" y="615.5" >std..</text>
</g>
<g >
<title>free_pgtables (216,125 samples, 0.49%)</title><rect x="623.9" y="1853" width="5.8" height="15.0" fill="rgb(215,3,42)" rx="2" ry="2" />
<text  x="626.90" y="1863.5" ></text>
</g>
<g >
<title>ret_from_fork (138,280 samples, 0.32%)</title><rect x="521.1" y="2077" width="3.7" height="15.0" fill="rgb(227,139,18)" rx="2" ry="2" />
<text  x="524.10" y="2087.5" ></text>
</g>
<g >
<title>asm_common_interrupt (207,121 samples, 0.47%)</title><rect x="829.7" y="1965" width="5.6" height="15.0" fill="rgb(239,106,30)" rx="2" ry="2" />
<text  x="832.69" y="1975.5" ></text>
</g>
<g >
<title>put_prev_task_fair (171,647 samples, 0.39%)</title><rect x="772.6" y="1885" width="4.6" height="15.0" fill="rgb(229,96,32)" rx="2" ry="2" />
<text  x="775.59" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1469" width="37.5" height="15.0" fill="rgb(231,211,26)" rx="2" ry="2" />
<text  x="541.96" y="1479.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="941" width="37.6" height="15.0" fill="rgb(240,72,1)" rx="2" ry="2" />
<text  x="589.33" y="951.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1597" width="37.5" height="15.0" fill="rgb(223,135,4)" rx="2" ry="2" />
<text  x="541.96" y="1607.5" >std..</text>
</g>
<g >
<title>perf_mmap__consume (561,027 samples, 1.28%)</title><rect x="794.2" y="1981" width="15.2" height="15.0" fill="rgb(208,118,41)" rx="2" ry="2" />
<text  x="797.22" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1325" width="37.6" height="15.0" fill="rgb(220,197,13)" rx="2" ry="2" />
<text  x="589.33" y="1335.5" >std..</text>
</g>
<g >
<title>common_interrupt (207,121 samples, 0.47%)</title><rect x="829.7" y="1949" width="5.6" height="15.0" fill="rgb(242,153,17)" rx="2" ry="2" />
<text  x="832.69" y="1959.5" ></text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (207,121 samples, 0.47%)</title><rect x="829.7" y="1885" width="5.6" height="15.0" fill="rgb(235,218,50)" rx="2" ry="2" />
<text  x="832.69" y="1895.5" ></text>
</g>
<g >
<title>[unknown] (1,139,599 samples, 2.61%)</title><rect x="10.0" y="2077" width="30.8" height="15.0" fill="rgb(229,200,20)" rx="2" ry="2" />
<text  x="13.00" y="2087.5" >[u..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1933" width="37.5" height="15.0" fill="rgb(252,143,12)" rx="2" ry="2" />
<text  x="541.96" y="1943.5" >std..</text>
</g>
<g >
<title>wall_seconds (11,415,256 samples, 26.14%)</title><rect x="158.0" y="2029" width="308.5" height="15.0" fill="rgb(215,198,24)" rx="2" ry="2" />
<text  x="161.02" y="2039.5" >wall_seconds</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (546,426 samples, 1.25%)</title><rect x="809.4" y="1949" width="14.7" height="15.0" fill="rgb(213,214,22)" rx="2" ry="2" />
<text  x="812.38" y="1959.5" ></text>
</g>
<g >
<title>Builtins_CallApiCallback (177,397 samples, 0.41%)</title><rect x="581.5" y="1709" width="4.8" height="15.0" fill="rgb(251,201,22)" rx="2" ry="2" />
<text  x="584.54" y="1719.5" ></text>
</g>
<g >
<title>dl_main (201,953 samples, 0.46%)</title><rect x="23.6" y="2045" width="5.4" height="15.0" fill="rgb(235,96,4)" rx="2" ry="2" />
<text  x="26.59" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1981" width="37.6" height="15.0" fill="rgb(219,65,27)" rx="2" ry="2" />
<text  x="589.33" y="1991.5" >std..</text>
</g>
<g >
<title>start_kernel (456,806 samples, 1.05%)</title><rect x="1177.7" y="2029" width="12.3" height="15.0" fill="rgb(239,66,43)" rx="2" ry="2" />
<text  x="1180.66" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="445" width="37.6" height="15.0" fill="rgb(249,56,50)" rx="2" ry="2" />
<text  x="589.33" y="455.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1149" width="37.6" height="15.0" fill="rgb(227,7,45)" rx="2" ry="2" />
<text  x="589.33" y="1159.5" >std..</text>
</g>
<g >
<title>____fput (207,393 samples, 0.47%)</title><rect x="788.6" y="1885" width="5.6" height="15.0" fill="rgb(229,136,31)" rx="2" ry="2" />
<text  x="791.62" y="1895.5" ></text>
</g>
<g >
<title>hrtick_update (84,032 samples, 0.19%)</title><rect x="749.6" y="1869" width="2.3" height="15.0" fill="rgb(239,185,8)" rx="2" ry="2" />
<text  x="752.60" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="621" width="37.6" height="15.0" fill="rgb(236,210,6)" rx="2" ry="2" />
<text  x="589.33" y="631.5" >std..</text>
</g>
<g >
<title>cpu_startup_entry (456,806 samples, 1.05%)</title><rect x="1177.7" y="1981" width="12.3" height="15.0" fill="rgb(211,183,37)" rx="2" ry="2" />
<text  x="1180.66" y="1991.5" ></text>
</g>
<g >
<title>move_queued_task (494,677 samples, 1.13%)</title><rect x="507.7" y="1997" width="13.4" height="15.0" fill="rgb(219,14,17)" rx="2" ry="2" />
<text  x="510.74" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1949" width="37.6" height="15.0" fill="rgb(251,46,27)" rx="2" ry="2" />
<text  x="589.33" y="1959.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="669" width="37.6" height="15.0" fill="rgb(254,220,36)" rx="2" ry="2" />
<text  x="589.33" y="679.5" >std..</text>
</g>
<g >
<title>__irqentry_text_end (283,141 samples, 0.65%)</title><rect x="794.2" y="1965" width="7.7" height="15.0" fill="rgb(224,175,27)" rx="2" ry="2" />
<text  x="797.22" y="1975.5" ></text>
</g>
<g >
<title>migration_cpu_stop (138,280 samples, 0.32%)</title><rect x="521.1" y="2013" width="3.7" height="15.0" fill="rgb(216,124,21)" rx="2" ry="2" />
<text  x="524.10" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1581" width="37.5" height="15.0" fill="rgb(253,223,34)" rx="2" ry="2" />
<text  x="541.96" y="1591.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1917" width="37.5" height="15.0" fill="rgb(251,195,13)" rx="2" ry="2" />
<text  x="541.96" y="1927.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="173" width="37.6" height="15.0" fill="rgb(207,124,21)" rx="2" ry="2" />
<text  x="589.33" y="183.5" >std..</text>
</g>
<g >
<title>set_cpus_allowed_common (86,016 samples, 0.20%)</title><rect x="765.7" y="1869" width="2.3" height="15.0" fill="rgb(251,13,2)" rx="2" ry="2" />
<text  x="768.66" y="1879.5" ></text>
</g>
<g >
<title>mmput (835,299 samples, 1.91%)</title><rect x="623.9" y="1885" width="22.6" height="15.0" fill="rgb(214,173,43)" rx="2" ry="2" />
<text  x="626.90" y="1895.5" >m..</text>
</g>
<g >
<title>__GI___execve (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2077" width="27.4" height="15.0" fill="rgb(231,8,29)" rx="2" ry="2" />
<text  x="626.90" y="2087.5" >_..</text>
</g>
<g >
<title>InotifyBackend::start (1,390,340 samples, 3.18%)</title><rect x="539.0" y="2045" width="37.5" height="15.0" fill="rgb(248,168,20)" rx="2" ry="2" />
<text  x="541.96" y="2055.5" >Ino..</text>
</g>
<g >
<title>__vfprintf_internal (502,826 samples, 1.15%)</title><rect x="10.0" y="2061" width="13.6" height="15.0" fill="rgb(222,216,44)" rx="2" ry="2" />
<text  x="13.00" y="2071.5" ></text>
</g>
<g >
<title>__mod_timer (207,121 samples, 0.47%)</title><rect x="829.7" y="1693" width="5.6" height="15.0" fill="rgb(220,97,39)" rx="2" ry="2" />
<text  x="832.69" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1389" width="37.6" height="15.0" fill="rgb(220,100,51)" rx="2" ry="2" />
<text  x="589.33" y="1399.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1245" width="37.6" height="15.0" fill="rgb(225,6,18)" rx="2" ry="2" />
<text  x="589.33" y="1255.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1453" width="37.5" height="15.0" fill="rgb(235,114,39)" rx="2" ry="2" />
<text  x="541.96" y="1463.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1309" width="37.5" height="15.0" fill="rgb(218,100,54)" rx="2" ry="2" />
<text  x="541.96" y="1319.5" >std..</text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,390,340 samples, 3.18%)</title><rect x="539.0" y="2029" width="37.5" height="15.0" fill="rgb(229,65,35)" rx="2" ry="2" />
<text  x="541.96" y="2039.5" >Ino..</text>
</g>
<g >
<title>cpuidle_enter_state (345,689 samples, 0.79%)</title><rect x="1177.7" y="1917" width="9.3" height="15.0" fill="rgb(209,72,17)" rx="2" ry="2" />
<text  x="1180.66" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="317" width="37.6" height="15.0" fill="rgb(216,116,37)" rx="2" ry="2" />
<text  x="589.33" y="327.5" >std..</text>
</g>
<g >
<title>list_lru_add (207,393 samples, 0.47%)</title><rect x="788.6" y="1821" width="5.6" height="15.0" fill="rgb(214,21,26)" rx="2" ry="2" />
<text  x="791.62" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="189" width="37.6" height="15.0" fill="rgb(223,154,44)" rx="2" ry="2" />
<text  x="589.33" y="199.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1869" width="37.5" height="15.0" fill="rgb(251,194,8)" rx="2" ry="2" />
<text  x="541.96" y="1879.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1997" width="37.6" height="15.0" fill="rgb(208,92,0)" rx="2" ry="2" />
<text  x="589.33" y="2007.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1757" width="37.5" height="15.0" fill="rgb(214,49,12)" rx="2" ry="2" />
<text  x="541.96" y="1767.5" >std..</text>
</g>
<g >
<title>zap_pte_range (391,454 samples, 0.90%)</title><rect x="635.9" y="1789" width="10.6" height="15.0" fill="rgb(220,115,46)" rx="2" ry="2" />
<text  x="638.90" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="877" width="37.6" height="15.0" fill="rgb(249,189,46)" rx="2" ry="2" />
<text  x="589.33" y="887.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1293" width="37.6" height="15.0" fill="rgb(232,213,13)" rx="2" ry="2" />
<text  x="589.33" y="1303.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1485" width="37.5" height="15.0" fill="rgb(216,135,13)" rx="2" ry="2" />
<text  x="541.96" y="1495.5" >std..</text>
</g>
<g >
<title>hrtimer_try_to_cancel.part.0 (207,845 samples, 0.48%)</title><rect x="1172.0" y="1965" width="5.7" height="15.0" fill="rgb(249,178,53)" rx="2" ry="2" />
<text  x="1175.04" y="1975.5" ></text>
</g>
<g >
<title>_perf_ioctl (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1917" width="36.5" height="15.0" fill="rgb(237,144,29)" rx="2" ry="2" />
<text  x="654.33" y="1927.5" >_pe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="413" width="37.6" height="15.0" fill="rgb(247,155,5)" rx="2" ry="2" />
<text  x="589.33" y="423.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="989" width="37.6" height="15.0" fill="rgb(236,146,44)" rx="2" ry="2" />
<text  x="589.33" y="999.5" >std..</text>
</g>
<g >
<title>bprm_execve.part.0 (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1981" width="27.4" height="15.0" fill="rgb(236,111,13)" rx="2" ry="2" />
<text  x="626.90" y="1991.5" >b..</text>
</g>
<g >
<title>do_lookup_x (434,820 samples, 1.00%)</title><rect x="29.0" y="2061" width="11.8" height="15.0" fill="rgb(217,206,46)" rx="2" ry="2" />
<text  x="32.04" y="2071.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (207,393 samples, 0.47%)</title><rect x="788.6" y="1917" width="5.6" height="15.0" fill="rgb(243,51,25)" rx="2" ry="2" />
<text  x="791.62" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1933" width="37.6" height="15.0" fill="rgb(222,120,23)" rx="2" ry="2" />
<text  x="589.33" y="1943.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1373" width="37.6" height="15.0" fill="rgb(207,100,29)" rx="2" ry="2" />
<text  x="589.33" y="1383.5" >std..</text>
</g>
<g >
<title>xhci_unmap_urb_for_dma (207,121 samples, 0.47%)</title><rect x="829.7" y="1837" width="5.6" height="15.0" fill="rgb(218,186,9)" rx="2" ry="2" />
<text  x="832.69" y="1847.5" ></text>
</g>
<g >
<title>vfs_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1885" width="14.7" height="15.0" fill="rgb(214,62,26)" rx="2" ry="2" />
<text  x="812.38" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1645" width="37.6" height="15.0" fill="rgb(206,103,9)" rx="2" ry="2" />
<text  x="589.33" y="1655.5" >std..</text>
</g>
<g >
<title>new_sync_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1869" width="14.7" height="15.0" fill="rgb(245,40,24)" rx="2" ry="2" />
<text  x="812.38" y="1879.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (177,397 samples, 0.41%)</title><rect x="581.5" y="1933" width="4.8" height="15.0" fill="rgb(207,165,12)" rx="2" ry="2" />
<text  x="584.54" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="125" width="37.6" height="15.0" fill="rgb(249,83,34)" rx="2" ry="2" />
<text  x="589.33" y="135.5" >std..</text>
</g>
<g >
<title>main (6,395,707 samples, 14.65%)</title><rect x="651.3" y="2061" width="172.8" height="15.0" fill="rgb(243,108,4)" rx="2" ry="2" />
<text  x="654.33" y="2071.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="493" width="37.6" height="15.0" fill="rgb(234,148,29)" rx="2" ry="2" />
<text  x="589.33" y="503.5" >std..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1949" width="37.5" height="15.0" fill="rgb(233,169,43)" rx="2" ry="2" />
<text  x="541.96" y="1959.5" >std..</text>
</g>
<g >
<title>node::SpinEventLoop (362,698 samples, 0.83%)</title><rect x="576.5" y="2013" width="9.8" height="15.0" fill="rgb(248,206,0)" rx="2" ry="2" />
<text  x="579.53" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="701" width="37.6" height="15.0" fill="rgb(218,75,29)" rx="2" ry="2" />
<text  x="589.33" y="711.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1565" width="37.6" height="15.0" fill="rgb(231,127,48)" rx="2" ry="2" />
<text  x="589.33" y="1575.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="461" width="37.6" height="15.0" fill="rgb(251,86,19)" rx="2" ry="2" />
<text  x="589.33" y="471.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="77" width="37.6" height="15.0" fill="rgb(219,61,54)" rx="2" ry="2" />
<text  x="589.33" y="87.5" >std..</text>
</g>
<g >
<title>filemap_map_pages (220,941 samples, 0.51%)</title><rect x="497.3" y="1933" width="6.0" height="15.0" fill="rgb(217,99,30)" rx="2" ry="2" />
<text  x="500.34" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1917" width="37.6" height="15.0" fill="rgb(209,11,45)" rx="2" ry="2" />
<text  x="589.33" y="1927.5" >std..</text>
</g>
<g >
<title>PageHuge (202,736 samples, 0.46%)</title><rect x="641.0" y="1757" width="5.5" height="15.0" fill="rgb(245,128,24)" rx="2" ry="2" />
<text  x="644.00" y="1767.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (522,704 samples, 1.20%)</title><rect x="524.8" y="2045" width="14.2" height="15.0" fill="rgb(253,150,43)" rx="2" ry="2" />
<text  x="527.84" y="2055.5" ></text>
</g>
<g >
<title>uv__stream_io (177,397 samples, 0.41%)</title><rect x="581.5" y="1965" width="4.8" height="15.0" fill="rgb(205,229,54)" rx="2" ry="2" />
<text  x="584.54" y="1975.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (498,045 samples, 1.14%)</title><rect x="835.3" y="1917" width="13.4" height="15.0" fill="rgb(242,228,26)" rx="2" ry="2" />
<text  x="838.28" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1837" width="37.5" height="15.0" fill="rgb(211,74,51)" rx="2" ry="2" />
<text  x="541.96" y="1847.5" >std..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1741" width="33.7" height="15.0" fill="rgb(235,52,34)" rx="2" ry="2" />
<text  x="657.09" y="1751.5" >in..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="637" width="37.6" height="15.0" fill="rgb(227,11,43)" rx="2" ry="2" />
<text  x="589.33" y="647.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1357" width="37.6" height="15.0" fill="rgb(249,91,42)" rx="2" ry="2" />
<text  x="589.33" y="1367.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1085" width="37.6" height="15.0" fill="rgb(254,211,51)" rx="2" ry="2" />
<text  x="589.33" y="1095.5" >std..</text>
</g>
<g >
<title>all (43,669,218 samples, 100%)</title><rect x="10.0" y="2109" width="1180.0" height="15.0" fill="rgb(208,189,6)" rx="2" ry="2" />
<text  x="13.00" y="2119.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,014,926 samples, 2.32%)</title><rect x="623.9" y="2013" width="27.4" height="15.0" fill="rgb(228,20,12)" rx="2" ry="2" />
<text  x="626.90" y="2023.5" >d..</text>
</g>
<g >
<title>ret_from_fork (494,677 samples, 1.13%)</title><rect x="507.7" y="2077" width="13.4" height="15.0" fill="rgb(233,105,54)" rx="2" ry="2" />
<text  x="510.74" y="2087.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (265,045 samples, 0.61%)</title><rect x="809.4" y="1789" width="7.1" height="15.0" fill="rgb(212,101,6)" rx="2" ry="2" />
<text  x="812.38" y="1799.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (72,685 samples, 0.17%)</title><rect x="651.3" y="1821" width="2.0" height="15.0" fill="rgb(252,74,54)" rx="2" ry="2" />
<text  x="654.33" y="1831.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1965" width="37.5" height="15.0" fill="rgb(209,46,7)" rx="2" ry="2" />
<text  x="541.96" y="1975.5" >Glo..</text>
</g>
<g >
<title>node::(anonymous namespace)::DecodeData (177,397 samples, 0.41%)</title><rect x="581.5" y="1693" width="4.8" height="15.0" fill="rgb(246,186,26)" rx="2" ry="2" />
<text  x="584.54" y="1703.5" ></text>
</g>
<g >
<title>chase (18,256,410 samples, 41.81%)</title><rect x="10.0" y="2093" width="493.3" height="15.0" fill="rgb(216,54,43)" rx="2" ry="2" />
<text  x="13.00" y="2103.5" >chase</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="925" width="37.6" height="15.0" fill="rgb(220,205,41)" rx="2" ry="2" />
<text  x="589.33" y="935.5" >std..</text>
</g>
<g >
<title>switch_mm_irqs_off (111,117 samples, 0.25%)</title><rect x="1187.0" y="1917" width="3.0" height="15.0" fill="rgb(243,108,45)" rx="2" ry="2" />
<text  x="1190.00" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="397" width="37.6" height="15.0" fill="rgb(218,123,22)" rx="2" ry="2" />
<text  x="589.33" y="407.5" >std..</text>
</g>
<g >
<title>enqueue_task_fair (255,069 samples, 0.58%)</title><rect x="742.7" y="1869" width="6.9" height="15.0" fill="rgb(225,212,45)" rx="2" ry="2" />
<text  x="745.71" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="253" width="37.6" height="15.0" fill="rgb(221,37,13)" rx="2" ry="2" />
<text  x="589.33" y="263.5" >std..</text>
</g>
<g >
<title>uv__io_poll (177,397 samples, 0.41%)</title><rect x="581.5" y="1981" width="4.8" height="15.0" fill="rgb(213,151,8)" rx="2" ry="2" />
<text  x="584.54" y="1991.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1757" width="33.7" height="15.0" fill="rgb(211,149,28)" rx="2" ry="2" />
<text  x="657.09" y="1767.5" >x8..</text>
</g>
<g >
<title>run_builtin (6,395,707 samples, 14.65%)</title><rect x="651.3" y="2045" width="172.8" height="15.0" fill="rgb(210,62,28)" rx="2" ry="2" />
<text  x="654.33" y="2055.5" >run_builtin</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="2029" width="37.6" height="15.0" fill="rgb(216,141,54)" rx="2" ry="2" />
<text  x="589.33" y="2039.5" >std..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (162,177 samples, 0.37%)</title><rect x="1182.6" y="1901" width="4.4" height="15.0" fill="rgb(212,71,17)" rx="2" ry="2" />
<text  x="1185.62" y="1911.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (177,397 samples, 0.41%)</title><rect x="581.5" y="1805" width="4.8" height="15.0" fill="rgb(236,70,15)" rx="2" ry="2" />
<text  x="584.54" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1469" width="37.6" height="15.0" fill="rgb(216,40,2)" rx="2" ry="2" />
<text  x="589.33" y="1479.5" >std..</text>
</g>
<g >
<title>__softirqentry_text_start (207,121 samples, 0.47%)</title><rect x="829.7" y="1917" width="5.6" height="15.0" fill="rgb(217,3,2)" rx="2" ry="2" />
<text  x="832.69" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1725" width="37.5" height="15.0" fill="rgb(237,142,5)" rx="2" ry="2" />
<text  x="541.96" y="1735.5" >std..</text>
</g>
<g >
<title>exec_binprm (1,014,926 samples, 2.32%)</title><rect x="623.9" y="1965" width="27.4" height="15.0" fill="rgb(242,74,19)" rx="2" ry="2" />
<text  x="626.90" y="1975.5" >e..</text>
</g>
<g >
<title>dequeue_task_fair (138,280 samples, 0.32%)</title><rect x="521.1" y="1965" width="3.7" height="15.0" fill="rgb(215,179,49)" rx="2" ry="2" />
<text  x="524.10" y="1975.5" ></text>
</g>
<g >
<title>enqueue_entity (494,677 samples, 1.13%)</title><rect x="507.7" y="1949" width="13.4" height="15.0" fill="rgb(251,179,30)" rx="2" ry="2" />
<text  x="510.74" y="1959.5" ></text>
</g>
<g >
<title>migration/3 (138,280 samples, 0.32%)</title><rect x="521.1" y="2093" width="3.7" height="15.0" fill="rgb(214,110,45)" rx="2" ry="2" />
<text  x="524.10" y="2103.5" ></text>
</g>
<g >
<title>exc_page_fault (220,941 samples, 0.51%)</title><rect x="497.3" y="2045" width="6.0" height="15.0" fill="rgb(217,34,37)" rx="2" ry="2" />
<text  x="500.34" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1485" width="37.6" height="15.0" fill="rgb(224,129,8)" rx="2" ry="2" />
<text  x="589.33" y="1495.5" >std..</text>
</g>
<g >
<title>raw_spin_rq_lock_nested (183,512 samples, 0.42%)</title><rect x="1177.7" y="1805" width="4.9" height="15.0" fill="rgb(221,190,20)" rx="2" ry="2" />
<text  x="1180.66" y="1815.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (12,669,723 samples, 29.01%)</title><rect x="829.7" y="1981" width="342.3" height="15.0" fill="rgb(227,145,12)" rx="2" ry="2" />
<text  x="832.69" y="1991.5" >cpuidle_enter_state</text>
</g>
<g >
<title>__schedule (111,117 samples, 0.25%)</title><rect x="1187.0" y="1933" width="3.0" height="15.0" fill="rgb(236,209,9)" rx="2" ry="2" />
<text  x="1190.00" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="797" width="37.6" height="15.0" fill="rgb(251,214,45)" rx="2" ry="2" />
<text  x="589.33" y="807.5" >std..</text>
</g>
<g >
<title>ksys_write (546,426 samples, 1.25%)</title><rect x="809.4" y="1901" width="14.7" height="15.0" fill="rgb(219,0,35)" rx="2" ry="2" />
<text  x="812.38" y="1911.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (72,685 samples, 0.17%)</title><rect x="651.3" y="1805" width="2.0" height="15.0" fill="rgb(228,220,24)" rx="2" ry="2" />
<text  x="654.33" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1533" width="37.5" height="15.0" fill="rgb(220,11,31)" rx="2" ry="2" />
<text  x="541.96" y="1543.5" >std..</text>
</g>
<g >
<title>__bitmap_weight (86,016 samples, 0.20%)</title><rect x="765.7" y="1853" width="2.3" height="15.0" fill="rgb(206,47,46)" rx="2" ry="2" />
<text  x="768.66" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1293" width="37.5" height="15.0" fill="rgb(250,100,18)" rx="2" ry="2" />
<text  x="541.96" y="1303.5" >std..</text>
</g>
<g >
<title>__x64_sys_ioctl (1,349,424 samples, 3.09%)</title><rect x="651.3" y="1949" width="36.5" height="15.0" fill="rgb(216,67,48)" rx="2" ry="2" />
<text  x="654.33" y="1959.5" >__x..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1581" width="37.6" height="15.0" fill="rgb(231,98,47)" rx="2" ry="2" />
<text  x="589.33" y="1591.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1565" width="37.5" height="15.0" fill="rgb(245,143,22)" rx="2" ry="2" />
<text  x="541.96" y="1575.5" >std..</text>
</g>
<g >
<title>[perf-273006.map] (177,397 samples, 0.41%)</title><rect x="581.5" y="1741" width="4.8" height="15.0" fill="rgb(229,133,8)" rx="2" ry="2" />
<text  x="584.54" y="1751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1053" width="37.6" height="15.0" fill="rgb(209,222,0)" rx="2" ry="2" />
<text  x="589.33" y="1063.5" >std..</text>
</g>
<g >
<title>smpboot_thread_fn (494,677 samples, 1.13%)</title><rect x="507.7" y="2045" width="13.4" height="15.0" fill="rgb(227,106,46)" rx="2" ry="2" />
<text  x="510.74" y="2055.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (177,397 samples, 0.41%)</title><rect x="581.5" y="1821" width="4.8" height="15.0" fill="rgb(225,168,48)" rx="2" ry="2" />
<text  x="584.54" y="1831.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (474,577 samples, 1.09%)</title><rect x="145.2" y="2029" width="12.8" height="15.0" fill="rgb(234,153,27)" rx="2" ry="2" />
<text  x="148.19" y="2039.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (104,221 samples, 0.24%)</title><rect x="687.8" y="1981" width="2.8" height="15.0" fill="rgb(211,92,41)" rx="2" ry="2" />
<text  x="690.79" y="1991.5" ></text>
</g>
<g >
<title>__evlist__enable.constprop.0 (5,080,861 samples, 11.63%)</title><rect x="651.3" y="2013" width="137.3" height="15.0" fill="rgb(213,129,9)" rx="2" ry="2" />
<text  x="654.33" y="2023.5" >__evlist__enable...</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1325" width="37.5" height="15.0" fill="rgb(223,180,36)" rx="2" ry="2" />
<text  x="541.96" y="1335.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="653" width="37.6" height="15.0" fill="rgb(206,35,38)" rx="2" ry="2" />
<text  x="589.33" y="663.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="893" width="37.6" height="15.0" fill="rgb(220,75,13)" rx="2" ry="2" />
<text  x="589.33" y="903.5" >std..</text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (362,698 samples, 0.83%)</title><rect x="576.5" y="2045" width="9.8" height="15.0" fill="rgb(247,171,25)" rx="2" ry="2" />
<text  x="579.53" y="2055.5" ></text>
</g>
<g >
<title>__perf_event_enable (1,247,034 samples, 2.86%)</title><rect x="654.1" y="1789" width="33.7" height="15.0" fill="rgb(253,101,39)" rx="2" ry="2" />
<text  x="657.09" y="1799.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="2077" width="37.6" height="15.0" fill="rgb(253,138,32)" rx="2" ry="2" />
<text  x="589.33" y="2087.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1517" width="37.5" height="15.0" fill="rgb(210,201,2)" rx="2" ry="2" />
<text  x="541.96" y="1527.5" >std..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1069" width="37.6" height="15.0" fill="rgb(206,23,43)" rx="2" ry="2" />
<text  x="589.33" y="1079.5" >std..</text>
</g>
<g >
<title>cpuidle_idle_call (12,669,723 samples, 29.01%)</title><rect x="829.7" y="2013" width="342.3" height="15.0" fill="rgb(218,101,31)" rx="2" ry="2" />
<text  x="832.69" y="2023.5" >cpuidle_idle_call</text>
</g>
<g >
<title>next_uptodate_page (220,941 samples, 0.51%)</title><rect x="497.3" y="1917" width="6.0" height="15.0" fill="rgb(238,117,40)" rx="2" ry="2" />
<text  x="500.34" y="1927.5" ></text>
</g>
<g >
<title>perf (6,395,707 samples, 14.65%)</title><rect x="651.3" y="2093" width="172.8" height="15.0" fill="rgb(247,51,27)" rx="2" ry="2" />
<text  x="654.33" y="2103.5" >perf</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1789" width="37.6" height="15.0" fill="rgb(247,8,44)" rx="2" ry="2" />
<text  x="589.33" y="1799.5" >std..</text>
</g>
<g >
<title>schedule (522,704 samples, 1.20%)</title><rect x="524.8" y="2029" width="14.2" height="15.0" fill="rgb(218,93,13)" rx="2" ry="2" />
<text  x="527.84" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,390,340 samples, 3.18%)</title><rect x="539.0" y="1549" width="37.5" height="15.0" fill="rgb(248,200,46)" rx="2" ry="2" />
<text  x="541.96" y="1559.5" >std..</text>
</g>
<g >
<title>ext4_buffered_write_iter (546,426 samples, 1.25%)</title><rect x="809.4" y="1837" width="14.7" height="15.0" fill="rgb(239,177,51)" rx="2" ry="2" />
<text  x="812.38" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,390,340 samples, 3.18%)</title><rect x="586.3" y="1965" width="37.6" height="15.0" fill="rgb(241,163,46)" rx="2" ry="2" />
<text  x="589.33" y="1975.5" >std..</text>
</g>
<g >
<title>cpuidle_idle_call (345,689 samples, 0.79%)</title><rect x="1177.7" y="1949" width="9.3" height="15.0" fill="rgb(235,120,5)" rx="2" ry="2" />
<text  x="1180.66" y="1959.5" ></text>
</g>
<g >
<title>kworker/40:0-ev (163,759 samples, 0.37%)</title><rect x="503.3" y="2093" width="4.4" height="15.0" fill="rgb(225,102,24)" rx="2" ry="2" />
<text  x="506.31" y="2103.5" ></text>
</g>
<g >
<title>move_queued_task (138,280 samples, 0.32%)</title><rect x="521.1" y="1997" width="3.7" height="15.0" fill="rgb(231,26,47)" rx="2" ry="2" />
<text  x="524.10" y="2007.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (456,806 samples, 1.05%)</title><rect x="1177.7" y="2045" width="12.3" height="15.0" fill="rgb(238,197,12)" rx="2" ry="2" />
<text  x="1180.66" y="2055.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (391,454 samples, 0.90%)</title><rect x="635.9" y="1805" width="10.6" height="15.0" fill="rgb(239,111,8)" rx="2" ry="2" />
<text  x="638.90" y="1815.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (3,627,216 samples, 8.31%)</title><rect x="690.6" y="1997" width="98.0" height="15.0" fill="rgb(233,30,38)" rx="2" ry="2" />
<text  x="693.61" y="2007.5" >sched_setaf..</text>
</g>
<g >
<title>do_idle (13,082,571 samples, 29.96%)</title><rect x="824.1" y="2029" width="353.6" height="15.0" fill="rgb(228,204,46)" rx="2" ry="2" />
<text  x="827.15" y="2039.5" >do_idle</text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1,107,453 samples, 2.54%)</title><rect x="794.2" y="2013" width="29.9" height="15.0" fill="rgb(232,113,49)" rx="2" ry="2" />
<text  x="797.22" y="2023.5" >re..</text>
</g>
<g >
<title>__do_set_cpus_allowed (2,785,749 samples, 6.38%)</title><rect x="692.7" y="1885" width="75.3" height="15.0" fill="rgb(223,28,2)" rx="2" ry="2" />
<text  x="695.71" y="1895.5" >__do_set..</text>
</g>
</g>
</svg>
