<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2158" onload="init(evt)" viewBox="0 0 1200 2158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >FlameGraph_2_32m_1_foward 1_none</text>
<text id="subtitle" x="600.00" y="48" >Count:2_ChainSize:32m_Thread:1_Access:foward 1_Prefetch:none</text>
<text id="details" x="10.00" y="2141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2141" > </text>
<g id="frames">
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;Backend::run (1,394,123 samples, 2.99%)</title><rect x="540.4" y="2061" width="35.3" height="15.0" fill="rgb(241,88,9)" rx="2" ry="2" />
<text  x="543.41" y="2071.5" >st..</text>
</g>
<g >
<title>proc_single_show (205,434 samples, 0.44%)</title><rect x="825.1" y="1869" width="5.2" height="15.0" fill="rgb(214,9,18)" rx="2" ry="2" />
<text  x="828.12" y="1879.5" ></text>
</g>
<g >
<title>Builtins_BaselineOutOfLinePrologue (206,677 samples, 0.44%)</title><rect x="575.7" y="1709" width="5.2" height="15.0" fill="rgb(215,187,27)" rx="2" ry="2" />
<text  x="578.67" y="1719.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (246,581 samples, 0.53%)</title><rect x="651.2" y="1773" width="6.2" height="15.0" fill="rgb(229,102,15)" rx="2" ry="2" />
<text  x="654.21" y="1783.5" ></text>
</g>
<g >
<title>kmem_cache_free (230,078 samples, 0.49%)</title><rect x="657.4" y="1821" width="5.9" height="15.0" fill="rgb(231,162,26)" rx="2" ry="2" />
<text  x="660.44" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="189" width="35.3" height="15.0" fill="rgb(205,185,35)" rx="2" ry="2" />
<text  x="618.95" y="199.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1357" width="35.3" height="15.0" fill="rgb(209,126,4)" rx="2" ry="2" />
<text  x="618.95" y="1367.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1549" width="35.3" height="15.0" fill="rgb(205,82,11)" rx="2" ry="2" />
<text  x="543.41" y="1559.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1581" width="35.3" height="15.0" fill="rgb(244,225,20)" rx="2" ry="2" />
<text  x="618.95" y="1591.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1725" width="35.3" height="15.0" fill="rgb(244,21,40)" rx="2" ry="2" />
<text  x="543.41" y="1735.5" >st..</text>
</g>
<g >
<title>ext4_dirty_inode (545,942 samples, 1.17%)</title><rect x="844.6" y="1757" width="13.8" height="15.0" fill="rgb(219,95,53)" rx="2" ry="2" />
<text  x="847.58" y="1767.5" ></text>
</g>
<g >
<title>mem_cgroup_css_rstat_flush (277,627 samples, 0.60%)</title><rect x="818.1" y="1709" width="7.0" height="15.0" fill="rgb(244,143,15)" rx="2" ry="2" />
<text  x="821.10" y="1719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1517" width="35.3" height="15.0" fill="rgb(247,133,47)" rx="2" ry="2" />
<text  x="618.95" y="1527.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (216,083 samples, 0.46%)</title><rect x="580.9" y="1693" width="5.5" height="15.0" fill="rgb(231,86,6)" rx="2" ry="2" />
<text  x="583.89" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1037" width="35.3" height="15.0" fill="rgb(220,151,38)" rx="2" ry="2" />
<text  x="618.95" y="1047.5" >st..</text>
</g>
<g >
<title>ksys_read (242,364 samples, 0.52%)</title><rect x="503.5" y="1997" width="6.1" height="15.0" fill="rgb(240,211,19)" rx="2" ry="2" />
<text  x="506.49" y="2007.5" ></text>
</g>
<g >
<title>page_add_file_rmap (279,495 samples, 0.60%)</title><rect x="42.0" y="1885" width="7.0" height="15.0" fill="rgb(225,156,20)" rx="2" ry="2" />
<text  x="44.97" y="1895.5" ></text>
</g>
<g >
<title>__mem_cgroup_flush_stats (542,104 samples, 1.16%)</title><rect x="811.4" y="1757" width="13.7" height="15.0" fill="rgb(205,180,8)" rx="2" ry="2" />
<text  x="814.41" y="1767.5" ></text>
</g>
<g >
<title>schedule (174,153 samples, 0.37%)</title><rect x="536.0" y="2029" width="4.4" height="15.0" fill="rgb(247,86,38)" rx="2" ry="2" />
<text  x="539.00" y="2039.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (82,003 samples, 0.18%)</title><rect x="677.8" y="1789" width="2.1" height="15.0" fill="rgb(254,75,22)" rx="2" ry="2" />
<text  x="680.85" y="1799.5" ></text>
</g>
<g >
<title>proc_pid_status (205,434 samples, 0.44%)</title><rect x="825.1" y="1853" width="5.2" height="15.0" fill="rgb(232,109,18)" rx="2" ry="2" />
<text  x="828.12" y="1863.5" ></text>
</g>
<g >
<title>enqueue_task (184,024 samples, 0.39%)</title><rect x="1177.6" y="1517" width="4.6" height="15.0" fill="rgb(254,180,46)" rx="2" ry="2" />
<text  x="1180.56" y="1527.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (542,104 samples, 1.16%)</title><rect x="811.4" y="1949" width="13.7" height="15.0" fill="rgb(238,172,15)" rx="2" ry="2" />
<text  x="814.41" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="893" width="35.3" height="15.0" fill="rgb(206,156,37)" rx="2" ry="2" />
<text  x="618.95" y="903.5" >st..</text>
</g>
<g >
<title>start_kernel (491,780 samples, 1.05%)</title><rect x="1177.6" y="2029" width="12.4" height="15.0" fill="rgb(253,62,6)" rx="2" ry="2" />
<text  x="1180.56" y="2039.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1757" width="30.9" height="15.0" fill="rgb(254,142,32)" rx="2" ry="2" />
<text  x="682.92" y="1767.5" >x8..</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1741" width="30.9" height="15.0" fill="rgb(250,96,43)" rx="2" ry="2" />
<text  x="682.92" y="1751.5" >in..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (82,003 samples, 0.18%)</title><rect x="677.8" y="1821" width="2.1" height="15.0" fill="rgb(207,34,47)" rx="2" ry="2" />
<text  x="680.85" y="1831.5" ></text>
</g>
<g >
<title>exit_mmap (955,171 samples, 2.05%)</title><rect x="651.2" y="1869" width="24.2" height="15.0" fill="rgb(213,191,39)" rx="2" ry="2" />
<text  x="654.21" y="1879.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1373" width="35.3" height="15.0" fill="rgb(230,16,41)" rx="2" ry="2" />
<text  x="543.41" y="1383.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1229" width="35.3" height="15.0" fill="rgb(243,179,18)" rx="2" ry="2" />
<text  x="543.41" y="1239.5" >st..</text>
</g>
<g >
<title>mem_cgroup_wb_stats (542,104 samples, 1.16%)</title><rect x="811.4" y="1773" width="13.7" height="15.0" fill="rgb(220,97,7)" rx="2" ry="2" />
<text  x="814.41" y="1783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,702,922 samples, 7.94%)</title><rect x="713.8" y="1981" width="93.6" height="15.0" fill="rgb(228,134,50)" rx="2" ry="2" />
<text  x="716.76" y="1991.5" >entry_SYSCA..</text>
</g>
<g >
<title>__schedule (531,389 samples, 1.14%)</title><rect x="522.6" y="2013" width="13.4" height="15.0" fill="rgb(236,105,20)" rx="2" ry="2" />
<text  x="525.56" y="2023.5" ></text>
</g>
<g >
<title>[perf-273006.map] (422,760 samples, 0.91%)</title><rect x="575.7" y="1757" width="10.7" height="15.0" fill="rgb(225,120,53)" rx="2" ry="2" />
<text  x="578.67" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1661" width="35.3" height="15.0" fill="rgb(242,60,28)" rx="2" ry="2" />
<text  x="543.41" y="1671.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1149" width="35.3" height="15.0" fill="rgb(218,18,33)" rx="2" ry="2" />
<text  x="618.95" y="1159.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="525" width="35.3" height="15.0" fill="rgb(221,157,32)" rx="2" ry="2" />
<text  x="618.95" y="535.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1645" width="35.3" height="15.0" fill="rgb(237,23,4)" rx="2" ry="2" />
<text  x="543.41" y="1655.5" >st..</text>
</g>
<g >
<title>_dl_lookup_symbol_x (543,892 samples, 1.17%)</title><rect x="10.0" y="2045" width="13.8" height="15.0" fill="rgb(238,33,36)" rx="2" ry="2" />
<text  x="13.00" y="2055.5" ></text>
</g>
<g >
<title>update_process_times (82,003 samples, 0.18%)</title><rect x="677.8" y="1709" width="2.1" height="15.0" fill="rgb(239,12,44)" rx="2" ry="2" />
<text  x="680.85" y="1719.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (255,830 samples, 0.55%)</title><rect x="35.5" y="2061" width="6.5" height="15.0" fill="rgb(250,87,25)" rx="2" ry="2" />
<text  x="38.50" y="2071.5" ></text>
</g>
<g >
<title>do_syscall_64 (205,434 samples, 0.44%)</title><rect x="825.1" y="1965" width="5.2" height="15.0" fill="rgb(246,157,7)" rx="2" ry="2" />
<text  x="828.12" y="1975.5" ></text>
</g>
<g >
<title>_dl_start_user (234,750 samples, 0.50%)</title><rect x="509.6" y="2077" width="6.0" height="15.0" fill="rgb(209,97,47)" rx="2" ry="2" />
<text  x="512.62" y="2087.5" ></text>
</g>
<g >
<title>tasklet_action (208,702 samples, 0.45%)</title><rect x="858.4" y="1901" width="5.3" height="15.0" fill="rgb(254,33,29)" rx="2" ry="2" />
<text  x="861.39" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="365" width="35.3" height="15.0" fill="rgb(214,89,3)" rx="2" ry="2" />
<text  x="618.95" y="375.5" >st..</text>
</g>
<g >
<title>tasklet_action_common.constprop.0 (208,702 samples, 0.45%)</title><rect x="858.4" y="1885" width="5.3" height="15.0" fill="rgb(207,53,26)" rx="2" ry="2" />
<text  x="861.39" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1341" width="35.3" height="15.0" fill="rgb(249,170,19)" rx="2" ry="2" />
<text  x="543.41" y="1351.5" >st..</text>
</g>
<g >
<title>asm_common_interrupt (208,702 samples, 0.45%)</title><rect x="858.4" y="1965" width="5.3" height="15.0" fill="rgb(216,157,14)" rx="2" ry="2" />
<text  x="861.39" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1021" width="35.3" height="15.0" fill="rgb(211,186,25)" rx="2" ry="2" />
<text  x="618.95" y="1031.5" >st..</text>
</g>
<g >
<title>arch_call_rest_init (491,780 samples, 1.05%)</title><rect x="1177.6" y="2013" width="12.4" height="15.0" fill="rgb(216,38,2)" rx="2" ry="2" />
<text  x="1180.56" y="2023.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1901" width="33.0" height="15.0" fill="rgb(250,182,3)" rx="2" ry="2" />
<text  x="680.85" y="1911.5" >pe..</text>
</g>
<g >
<title>rest_init (491,780 samples, 1.05%)</title><rect x="1177.6" y="1997" width="12.4" height="15.0" fill="rgb(211,1,37)" rx="2" ry="2" />
<text  x="1180.56" y="2007.5" ></text>
</g>
<g >
<title>iommu_dma_unmap_page (208,702 samples, 0.45%)</title><rect x="858.4" y="1789" width="5.3" height="15.0" fill="rgb(213,106,29)" rx="2" ry="2" />
<text  x="861.39" y="1799.5" ></text>
</g>
<g >
<title>wake_up_process (184,024 samples, 0.39%)</title><rect x="1177.6" y="1565" width="4.6" height="15.0" fill="rgb(212,229,43)" rx="2" ry="2" />
<text  x="1180.56" y="1575.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1821" width="35.3" height="15.0" fill="rgb(251,71,42)" rx="2" ry="2" />
<text  x="618.95" y="1831.5" >st..</text>
</g>
<g >
<title>exc_page_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1949" width="7.1" height="15.0" fill="rgb(247,22,27)" rx="2" ry="2" />
<text  x="833.32" y="1959.5" ></text>
</g>
<g >
<title>exec_mmap (955,171 samples, 2.05%)</title><rect x="651.2" y="1901" width="24.2" height="15.0" fill="rgb(222,153,17)" rx="2" ry="2" />
<text  x="654.21" y="1911.5" >e..</text>
</g>
<g >
<title>perf_ioctl (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1933" width="33.0" height="15.0" fill="rgb(229,107,5)" rx="2" ry="2" />
<text  x="680.85" y="1943.5" >pe..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="653" width="35.3" height="15.0" fill="rgb(228,10,52)" rx="2" ry="2" />
<text  x="618.95" y="663.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (216,083 samples, 0.46%)</title><rect x="580.9" y="1661" width="5.5" height="15.0" fill="rgb(250,192,46)" rx="2" ry="2" />
<text  x="583.89" y="1671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1597" width="35.3" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="618.95" y="1607.5" >st..</text>
</g>
<g >
<title>_raw_spin_lock (234,750 samples, 0.50%)</title><rect x="509.6" y="1933" width="6.0" height="15.0" fill="rgb(213,169,21)" rx="2" ry="2" />
<text  x="512.62" y="1943.5" ></text>
</g>
<g >
<title>irq_exit_rcu (184,024 samples, 0.39%)</title><rect x="1177.6" y="1869" width="4.6" height="15.0" fill="rgb(210,14,30)" rx="2" ry="2" />
<text  x="1180.56" y="1879.5" ></text>
</g>
<g >
<title>do_syscall_64 (955,171 samples, 2.05%)</title><rect x="651.2" y="2045" width="24.2" height="15.0" fill="rgb(253,18,19)" rx="2" ry="2" />
<text  x="654.21" y="2055.5" >d..</text>
</g>
<g >
<title>exc_page_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="2029" width="6.0" height="15.0" fill="rgb(222,69,28)" rx="2" ry="2" />
<text  x="512.62" y="2039.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (422,760 samples, 0.91%)</title><rect x="575.7" y="1821" width="10.7" height="15.0" fill="rgb(232,146,21)" rx="2" ry="2" />
<text  x="578.67" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="877" width="35.3" height="15.0" fill="rgb(230,92,40)" rx="2" ry="2" />
<text  x="543.41" y="887.5" >st..</text>
</g>
<g >
<title>do_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="1949" width="6.0" height="15.0" fill="rgb(228,141,17)" rx="2" ry="2" />
<text  x="512.62" y="1959.5" ></text>
</g>
<g >
<title>fput_many (158,467 samples, 0.34%)</title><rect x="807.4" y="1917" width="4.0" height="15.0" fill="rgb(221,160,6)" rx="2" ry="2" />
<text  x="810.41" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="621" width="35.3" height="15.0" fill="rgb(239,71,40)" rx="2" ry="2" />
<text  x="618.95" y="631.5" >st..</text>
</g>
<g >
<title>irq_work_single (184,024 samples, 0.39%)</title><rect x="1177.6" y="1645" width="4.6" height="15.0" fill="rgb(213,75,18)" rx="2" ry="2" />
<text  x="1180.56" y="1655.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1725" width="4.6" height="15.0" fill="rgb(246,22,33)" rx="2" ry="2" />
<text  x="1180.56" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1277" width="35.3" height="15.0" fill="rgb(227,200,48)" rx="2" ry="2" />
<text  x="543.41" y="1287.5" >st..</text>
</g>
<g >
<title>new_sync_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1869" width="13.7" height="15.0" fill="rgb(214,93,26)" rx="2" ry="2" />
<text  x="814.41" y="1879.5" ></text>
</g>
<g >
<title>load_balance (531,389 samples, 1.14%)</title><rect x="522.6" y="1949" width="13.4" height="15.0" fill="rgb(235,65,34)" rx="2" ry="2" />
<text  x="525.56" y="1959.5" ></text>
</g>
<g >
<title>filemap_map_pages (279,495 samples, 0.60%)</title><rect x="42.0" y="1901" width="7.0" height="15.0" fill="rgb(248,13,6)" rx="2" ry="2" />
<text  x="44.97" y="1911.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (3,702,922 samples, 7.94%)</title><rect x="713.8" y="1997" width="93.6" height="15.0" fill="rgb(226,123,29)" rx="2" ry="2" />
<text  x="716.76" y="2007.5" >sched_setaf..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="2013" width="35.3" height="15.0" fill="rgb(224,96,24)" rx="2" ry="2" />
<text  x="618.95" y="2023.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="733" width="35.3" height="15.0" fill="rgb(235,2,40)" rx="2" ry="2" />
<text  x="543.41" y="743.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="109" width="35.3" height="15.0" fill="rgb(248,108,26)" rx="2" ry="2" />
<text  x="618.95" y="119.5" >st..</text>
</g>
<g >
<title>_perf_ioctl (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1917" width="33.0" height="15.0" fill="rgb(229,192,40)" rx="2" ry="2" />
<text  x="680.85" y="1927.5" >_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1229" width="35.3" height="15.0" fill="rgb(226,215,15)" rx="2" ry="2" />
<text  x="618.95" y="1239.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1165" width="35.3" height="15.0" fill="rgb(251,10,11)" rx="2" ry="2" />
<text  x="543.41" y="1175.5" >st..</text>
</g>
<g >
<title>ksys_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1901" width="13.8" height="15.0" fill="rgb(246,103,46)" rx="2" ry="2" />
<text  x="847.58" y="1911.5" ></text>
</g>
<g >
<title>search_binary_handler (955,171 samples, 2.05%)</title><rect x="651.2" y="1949" width="24.2" height="15.0" fill="rgb(229,105,36)" rx="2" ry="2" />
<text  x="654.21" y="1959.5" >s..</text>
</g>
<g >
<title>kworker/4:0-eve (531,389 samples, 1.14%)</title><rect x="522.6" y="2093" width="13.4" height="15.0" fill="rgb(214,222,15)" rx="2" ry="2" />
<text  x="525.56" y="2103.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (1,394,123 samples, 2.99%)</title><rect x="540.4" y="2077" width="35.3" height="15.0" fill="rgb(210,198,0)" rx="2" ry="2" />
<text  x="543.41" y="2087.5" >[l..</text>
</g>
<g >
<title>__handle_mm_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="1981" width="6.0" height="15.0" fill="rgb(244,82,3)" rx="2" ry="2" />
<text  x="512.62" y="1991.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (206,677 samples, 0.44%)</title><rect x="575.7" y="1693" width="5.2" height="15.0" fill="rgb(245,114,7)" rx="2" ry="2" />
<text  x="578.67" y="1703.5" ></text>
</g>
<g >
<title>__libc_start_call_main (422,760 samples, 0.91%)</title><rect x="575.7" y="2077" width="10.7" height="15.0" fill="rgb(225,180,8)" rx="2" ry="2" />
<text  x="578.67" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="125" width="35.3" height="15.0" fill="rgb(222,18,6)" rx="2" ry="2" />
<text  x="618.95" y="135.5" >st..</text>
</g>
<g >
<title>perf_evsel__enable_cpu (118,702 samples, 0.25%)</title><rect x="710.8" y="1997" width="3.0" height="15.0" fill="rgb(244,103,25)" rx="2" ry="2" />
<text  x="713.76" y="2007.5" ></text>
</g>
<g >
<title>_int_free (1,170,096 samples, 2.51%)</title><rect x="586.4" y="2077" width="29.5" height="15.0" fill="rgb(252,134,50)" rx="2" ry="2" />
<text  x="589.36" y="2087.5" >_i..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="765" width="35.3" height="15.0" fill="rgb(241,184,19)" rx="2" ry="2" />
<text  x="618.95" y="775.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1629" width="35.3" height="15.0" fill="rgb(224,139,17)" rx="2" ry="2" />
<text  x="618.95" y="1639.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1885" width="35.3" height="15.0" fill="rgb(205,94,25)" rx="2" ry="2" />
<text  x="543.41" y="1895.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="813" width="35.3" height="15.0" fill="rgb(239,158,17)" rx="2" ry="2" />
<text  x="618.95" y="823.5" >st..</text>
</g>
<g >
<title>jbd2_journal_stop (261,764 samples, 0.56%)</title><rect x="844.6" y="1725" width="6.6" height="15.0" fill="rgb(237,214,44)" rx="2" ry="2" />
<text  x="847.58" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="221" width="35.3" height="15.0" fill="rgb(221,5,1)" rx="2" ry="2" />
<text  x="618.95" y="231.5" >st..</text>
</g>
<g >
<title>update_load_avg (87,776 samples, 0.19%)</title><rect x="794.7" y="1853" width="2.2" height="15.0" fill="rgb(241,227,15)" rx="2" ry="2" />
<text  x="797.70" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1101" width="35.3" height="15.0" fill="rgb(250,83,12)" rx="2" ry="2" />
<text  x="618.95" y="1111.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1661" width="35.3" height="15.0" fill="rgb(234,73,49)" rx="2" ry="2" />
<text  x="618.95" y="1671.5" >st..</text>
</g>
<g >
<title>__usb_hcd_giveback_urb (208,702 samples, 0.45%)</title><rect x="858.4" y="1853" width="5.3" height="15.0" fill="rgb(212,148,36)" rx="2" ry="2" />
<text  x="861.39" y="1863.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (284,178 samples, 0.61%)</title><rect x="851.2" y="1741" width="7.2" height="15.0" fill="rgb(253,180,52)" rx="2" ry="2" />
<text  x="854.20" y="1751.5" ></text>
</g>
<g >
<title>ksys_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1901" width="13.7" height="15.0" fill="rgb(212,221,42)" rx="2" ry="2" />
<text  x="814.41" y="1911.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (216,083 samples, 0.46%)</title><rect x="580.9" y="1629" width="5.5" height="15.0" fill="rgb(216,108,45)" rx="2" ry="2" />
<text  x="583.89" y="1639.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1805" width="35.3" height="15.0" fill="rgb(222,60,17)" rx="2" ry="2" />
<text  x="543.41" y="1815.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1709" width="35.3" height="15.0" fill="rgb(225,90,33)" rx="2" ry="2" />
<text  x="618.95" y="1719.5" >st..</text>
</g>
<g >
<title>__run_timers.part.0 (184,024 samples, 0.39%)</title><rect x="1177.6" y="1821" width="4.6" height="15.0" fill="rgb(229,112,46)" rx="2" ry="2" />
<text  x="1180.56" y="1831.5" ></text>
</g>
<g >
<title>Timer::calibrate (17,192,235 samples, 36.85%)</title><rect x="62.4" y="2045" width="434.8" height="15.0" fill="rgb(208,225,49)" rx="2" ry="2" />
<text  x="65.39" y="2055.5" >Timer::calibrate</text>
</g>
<g >
<title>chase (20,267,209 samples, 43.44%)</title><rect x="10.0" y="2093" width="512.6" height="15.0" fill="rgb(221,99,50)" rx="2" ry="2" />
<text  x="13.00" y="2103.5" >chase</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1421" width="35.3" height="15.0" fill="rgb(225,91,6)" rx="2" ry="2" />
<text  x="543.41" y="1431.5" >st..</text>
</g>
<g >
<title>kmem_cache_free (261,764 samples, 0.56%)</title><rect x="844.6" y="1709" width="6.6" height="15.0" fill="rgb(245,85,17)" rx="2" ry="2" />
<text  x="847.58" y="1719.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (422,760 samples, 0.91%)</title><rect x="575.7" y="2029" width="10.7" height="15.0" fill="rgb(226,169,18)" rx="2" ry="2" />
<text  x="578.67" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1213" width="35.3" height="15.0" fill="rgb(211,23,29)" rx="2" ry="2" />
<text  x="543.41" y="1223.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1869" width="35.3" height="15.0" fill="rgb(215,88,44)" rx="2" ry="2" />
<text  x="543.41" y="1879.5" >st..</text>
</g>
<g >
<title>native_write_msr (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1725" width="30.9" height="15.0" fill="rgb(220,128,47)" rx="2" ry="2" />
<text  x="682.92" y="1735.5" >na..</text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (422,760 samples, 0.91%)</title><rect x="575.7" y="1773" width="10.7" height="15.0" fill="rgb(253,205,15)" rx="2" ry="2" />
<text  x="578.67" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1069" width="35.3" height="15.0" fill="rgb(222,215,48)" rx="2" ry="2" />
<text  x="543.41" y="1079.5" >st..</text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (422,760 samples, 0.91%)</title><rect x="575.7" y="1901" width="10.7" height="15.0" fill="rgb(236,130,41)" rx="2" ry="2" />
<text  x="578.67" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="941" width="35.3" height="15.0" fill="rgb(228,224,52)" rx="2" ry="2" />
<text  x="618.95" y="951.5" >st..</text>
</g>
<g >
<title>unmap_single_vma (478,512 samples, 1.03%)</title><rect x="663.3" y="1837" width="12.1" height="15.0" fill="rgb(231,78,53)" rx="2" ry="2" />
<text  x="666.26" y="1847.5" ></text>
</g>
<g >
<title>set_next_task_fair (87,776 samples, 0.19%)</title><rect x="794.7" y="1869" width="2.2" height="15.0" fill="rgb(220,22,25)" rx="2" ry="2" />
<text  x="797.70" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1549" width="35.3" height="15.0" fill="rgb(252,212,1)" rx="2" ry="2" />
<text  x="618.95" y="1559.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1261" width="35.3" height="15.0" fill="rgb(246,9,41)" rx="2" ry="2" />
<text  x="543.41" y="1271.5" >st..</text>
</g>
<g >
<title>__lock_text_start (184,024 samples, 0.39%)</title><rect x="1177.6" y="1741" width="4.6" height="15.0" fill="rgb(217,25,20)" rx="2" ry="2" />
<text  x="1180.56" y="1751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="381" width="35.3" height="15.0" fill="rgb(218,149,51)" rx="2" ry="2" />
<text  x="618.95" y="391.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1837" width="35.3" height="15.0" fill="rgb(249,180,16)" rx="2" ry="2" />
<text  x="618.95" y="1847.5" >st..</text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (422,760 samples, 0.91%)</title><rect x="575.7" y="1933" width="10.7" height="15.0" fill="rgb(246,83,22)" rx="2" ry="2" />
<text  x="578.67" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1181" width="35.3" height="15.0" fill="rgb(224,160,12)" rx="2" ry="2" />
<text  x="543.41" y="1191.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1117" width="35.3" height="15.0" fill="rgb(207,226,40)" rx="2" ry="2" />
<text  x="543.41" y="1127.5" >st..</text>
</g>
<g >
<title>ext4_file_write_iter (542,104 samples, 1.16%)</title><rect x="811.4" y="1853" width="13.7" height="15.0" fill="rgb(216,213,34)" rx="2" ry="2" />
<text  x="814.41" y="1863.5" ></text>
</g>
<g >
<title>__evlist__enable.constprop.0 (5,221,086 samples, 11.19%)</title><rect x="675.4" y="2013" width="132.0" height="15.0" fill="rgb(219,160,32)" rx="2" ry="2" />
<text  x="678.36" y="2023.5" >__evlist__enable..</text>
</g>
<g >
<title>record__pushfn (545,942 samples, 1.17%)</title><rect x="844.6" y="1981" width="13.8" height="15.0" fill="rgb(208,57,40)" rx="2" ry="2" />
<text  x="847.58" y="1991.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1949" width="33.0" height="15.0" fill="rgb(252,175,53)" rx="2" ry="2" />
<text  x="680.85" y="1959.5" >__..</text>
</g>
<g >
<title>find_busiest_group (531,389 samples, 1.14%)</title><rect x="522.6" y="1933" width="13.4" height="15.0" fill="rgb(251,21,28)" rx="2" ry="2" />
<text  x="525.56" y="1943.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (238,385 samples, 0.51%)</title><rect x="669.3" y="1805" width="6.1" height="15.0" fill="rgb(231,157,49)" rx="2" ry="2" />
<text  x="672.33" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="861" width="35.3" height="15.0" fill="rgb(219,60,27)" rx="2" ry="2" />
<text  x="618.95" y="871.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1213" width="35.3" height="15.0" fill="rgb(243,71,29)" rx="2" ry="2" />
<text  x="618.95" y="1223.5" >st..</text>
</g>
<g >
<title>balance_dirty_pages (542,104 samples, 1.16%)</title><rect x="811.4" y="1789" width="13.7" height="15.0" fill="rgb(239,160,2)" rx="2" ry="2" />
<text  x="814.41" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1373" width="35.3" height="15.0" fill="rgb(228,37,28)" rx="2" ry="2" />
<text  x="618.95" y="1383.5" >st..</text>
</g>
<g >
<title>handle_mm_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1917" width="7.1" height="15.0" fill="rgb(225,150,4)" rx="2" ry="2" />
<text  x="833.32" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="269" width="35.3" height="15.0" fill="rgb(243,147,23)" rx="2" ry="2" />
<text  x="618.95" y="279.5" >st..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (184,024 samples, 0.39%)</title><rect x="1177.6" y="1901" width="4.6" height="15.0" fill="rgb(220,143,46)" rx="2" ry="2" />
<text  x="1180.56" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1645" width="35.3" height="15.0" fill="rgb(234,219,42)" rx="2" ry="2" />
<text  x="618.95" y="1655.5" >st..</text>
</g>
<g >
<title>__GI___ioctl (1,399,462 samples, 3.00%)</title><rect x="675.4" y="1997" width="35.4" height="15.0" fill="rgb(215,168,29)" rx="2" ry="2" />
<text  x="678.36" y="2007.5" >__..</text>
</g>
<g >
<title>vfs_read (205,434 samples, 0.44%)</title><rect x="825.1" y="1917" width="5.2" height="15.0" fill="rgb(254,137,2)" rx="2" ry="2" />
<text  x="828.12" y="1927.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (246,581 samples, 0.53%)</title><rect x="651.2" y="1837" width="6.2" height="15.0" fill="rgb(238,41,53)" rx="2" ry="2" />
<text  x="654.21" y="1847.5" ></text>
</g>
<g >
<title>ksys_read (205,434 samples, 0.44%)</title><rect x="825.1" y="1933" width="5.2" height="15.0" fill="rgb(248,49,21)" rx="2" ry="2" />
<text  x="828.12" y="1943.5" ></text>
</g>
<g >
<title>finish_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1837" width="7.2" height="15.0" fill="rgb(215,1,28)" rx="2" ry="2" />
<text  x="840.43" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="717" width="35.3" height="15.0" fill="rgb(244,175,7)" rx="2" ry="2" />
<text  x="543.41" y="727.5" >st..</text>
</g>
<g >
<title>__x64_sys_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1917" width="13.7" height="15.0" fill="rgb(224,197,45)" rx="2" ry="2" />
<text  x="814.41" y="1927.5" ></text>
</g>
<g >
<title>generic_perform_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1821" width="13.7" height="15.0" fill="rgb(214,200,2)" rx="2" ry="2" />
<text  x="814.41" y="1831.5" ></text>
</g>
<g >
<title>InotifyBackend::handleEvents (1,394,123 samples, 2.99%)</title><rect x="540.4" y="2029" width="35.3" height="15.0" fill="rgb(219,9,21)" rx="2" ry="2" />
<text  x="543.41" y="2039.5" >In..</text>
</g>
<g >
<title>generic_write_end (545,942 samples, 1.17%)</title><rect x="844.6" y="1789" width="13.8" height="15.0" fill="rgb(208,55,0)" rx="2" ry="2" />
<text  x="847.58" y="1799.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (690,096 samples, 1.48%)</title><rect x="1160.1" y="1981" width="17.5" height="15.0" fill="rgb(236,152,8)" rx="2" ry="2" />
<text  x="1163.11" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1981" width="35.3" height="15.0" fill="rgb(253,228,1)" rx="2" ry="2" />
<text  x="618.95" y="1991.5" >st..</text>
</g>
<g >
<title>__mod_lruvec_page_state (282,827 samples, 0.61%)</title><rect x="837.4" y="1789" width="7.2" height="15.0" fill="rgb(238,0,14)" rx="2" ry="2" />
<text  x="840.43" y="1799.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (491,780 samples, 1.05%)</title><rect x="1177.6" y="2061" width="12.4" height="15.0" fill="rgb(242,85,34)" rx="2" ry="2" />
<text  x="1180.56" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1389" width="35.3" height="15.0" fill="rgb(225,213,25)" rx="2" ry="2" />
<text  x="618.95" y="1399.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="77" width="35.3" height="15.0" fill="rgb(247,168,10)" rx="2" ry="2" />
<text  x="618.95" y="87.5" >st..</text>
</g>
<g >
<title>update_load_avg (184,024 samples, 0.39%)</title><rect x="1177.6" y="1469" width="4.6" height="15.0" fill="rgb(254,228,4)" rx="2" ry="2" />
<text  x="1180.56" y="1479.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1437" width="35.3" height="15.0" fill="rgb(207,165,36)" rx="2" ry="2" />
<text  x="543.41" y="1447.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1853" width="35.3" height="15.0" fill="rgb(240,25,53)" rx="2" ry="2" />
<text  x="618.95" y="1863.5" >st..</text>
</g>
<g >
<title>__GI___libc_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1965" width="13.7" height="15.0" fill="rgb(238,92,10)" rx="2" ry="2" />
<text  x="814.41" y="1975.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (249,546 samples, 0.53%)</title><rect x="497.2" y="1965" width="6.3" height="15.0" fill="rgb(216,65,21)" rx="2" ry="2" />
<text  x="500.18" y="1975.5" ></text>
</g>
<g >
<title>__schedule (690,096 samples, 1.48%)</title><rect x="1160.1" y="1997" width="17.5" height="15.0" fill="rgb(252,202,15)" rx="2" ry="2" />
<text  x="1163.11" y="2007.5" ></text>
</g>
<g >
<title>worker_thread (531,389 samples, 1.14%)</title><rect x="522.6" y="2045" width="13.4" height="15.0" fill="rgb(250,111,11)" rx="2" ry="2" />
<text  x="525.56" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="845" width="35.3" height="15.0" fill="rgb(207,200,32)" rx="2" ry="2" />
<text  x="618.95" y="855.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="349" width="35.3" height="15.0" fill="rgb(226,192,20)" rx="2" ry="2" />
<text  x="618.95" y="359.5" >st..</text>
</g>
<g >
<title>xhci_unmap_urb_for_dma (208,702 samples, 0.45%)</title><rect x="858.4" y="1837" width="5.3" height="15.0" fill="rgb(228,167,42)" rx="2" ry="2" />
<text  x="861.39" y="1847.5" ></text>
</g>
<g >
<title>start_secondary (12,620,426 samples, 27.05%)</title><rect x="858.4" y="2061" width="319.2" height="15.0" fill="rgb(236,56,54)" rx="2" ry="2" />
<text  x="861.39" y="2071.5" >start_secondary</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="813" width="35.3" height="15.0" fill="rgb(237,210,25)" rx="2" ry="2" />
<text  x="543.41" y="823.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1469" width="35.3" height="15.0" fill="rgb(230,91,41)" rx="2" ry="2" />
<text  x="618.95" y="1479.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1997" width="35.3" height="15.0" fill="rgb(251,182,14)" rx="2" ry="2" />
<text  x="618.95" y="2007.5" >st..</text>
</g>
<g >
<title>v8::Function::Call (422,760 samples, 0.91%)</title><rect x="575.7" y="1837" width="10.7" height="15.0" fill="rgb(222,5,21)" rx="2" ry="2" />
<text  x="578.67" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1501" width="35.3" height="15.0" fill="rgb(241,86,15)" rx="2" ry="2" />
<text  x="543.41" y="1511.5" >st..</text>
</g>
<g >
<title>__x64_sys_poll (158,467 samples, 0.34%)</title><rect x="807.4" y="1965" width="4.0" height="15.0" fill="rgb(205,9,3)" rx="2" ry="2" />
<text  x="810.41" y="1975.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (11,930,330 samples, 25.57%)</title><rect x="858.4" y="1981" width="301.7" height="15.0" fill="rgb(226,216,52)" rx="2" ry="2" />
<text  x="861.39" y="1991.5" >cpuidle_enter_state</text>
</g>
<g >
<title>do_syscall_64 (242,364 samples, 0.52%)</title><rect x="503.5" y="2029" width="6.1" height="15.0" fill="rgb(243,146,31)" rx="2" ry="2" />
<text  x="506.49" y="2039.5" ></text>
</g>
<g >
<title>InotifyBackend::handleSubscription (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1997" width="35.3" height="15.0" fill="rgb(218,24,19)" rx="2" ry="2" />
<text  x="543.41" y="2007.5" >In..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1805" width="35.3" height="15.0" fill="rgb(227,36,2)" rx="2" ry="2" />
<text  x="618.95" y="1815.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="2013" width="6.0" height="15.0" fill="rgb(209,89,42)" rx="2" ry="2" />
<text  x="512.62" y="2023.5" ></text>
</g>
<g >
<title>do_read_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1917" width="7.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="44.97" y="1927.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,702,922 samples, 7.94%)</title><rect x="713.8" y="1965" width="93.6" height="15.0" fill="rgb(220,2,2)" rx="2" ry="2" />
<text  x="716.76" y="1975.5" >do_syscall_64</text>
</g>
<g >
<title>__iommu_dma_unmap_swiotlb (208,702 samples, 0.45%)</title><rect x="858.4" y="1773" width="5.3" height="15.0" fill="rgb(221,222,28)" rx="2" ry="2" />
<text  x="861.39" y="1783.5" ></text>
</g>
<g >
<title>vfs_read (242,364 samples, 0.52%)</title><rect x="503.5" y="1981" width="6.1" height="15.0" fill="rgb(241,200,53)" rx="2" ry="2" />
<text  x="506.49" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1421" width="35.3" height="15.0" fill="rgb(247,50,41)" rx="2" ry="2" />
<text  x="618.95" y="1431.5" >st..</text>
</g>
<g >
<title>__poll (158,467 samples, 0.34%)</title><rect x="807.4" y="2013" width="4.0" height="15.0" fill="rgb(209,102,8)" rx="2" ry="2" />
<text  x="810.41" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="285" width="35.3" height="15.0" fill="rgb(217,67,53)" rx="2" ry="2" />
<text  x="618.95" y="295.5" >st..</text>
</g>
<g >
<title>enqueue_entity (184,024 samples, 0.39%)</title><rect x="1177.6" y="1485" width="4.6" height="15.0" fill="rgb(216,202,20)" rx="2" ry="2" />
<text  x="1180.56" y="1495.5" ></text>
</g>
<g >
<title>[unknown] (2,071,373 samples, 4.44%)</title><rect x="10.0" y="2077" width="52.4" height="15.0" fill="rgb(238,209,7)" rx="2" ry="2" />
<text  x="13.00" y="2087.5" >[unkn..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1085" width="35.3" height="15.0" fill="rgb(216,173,30)" rx="2" ry="2" />
<text  x="543.41" y="1095.5" >st..</text>
</g>
<g >
<title>__libc_start_call_main (17,192,235 samples, 36.85%)</title><rect x="62.4" y="2077" width="434.8" height="15.0" fill="rgb(241,0,4)" rx="2" ry="2" />
<text  x="65.39" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>dl_main (527,606 samples, 1.13%)</title><rect x="49.0" y="2045" width="13.4" height="15.0" fill="rgb(237,1,43)" rx="2" ry="2" />
<text  x="52.04" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1693" width="35.3" height="15.0" fill="rgb(211,97,38)" rx="2" ry="2" />
<text  x="543.41" y="1703.5" >st..</text>
</g>
<g >
<title>insert_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1581" width="4.6" height="15.0" fill="rgb(253,27,13)" rx="2" ry="2" />
<text  x="1180.56" y="1591.5" ></text>
</g>
<g >
<title>ret_from_fork (174,153 samples, 0.37%)</title><rect x="536.0" y="2077" width="4.4" height="15.0" fill="rgb(244,175,47)" rx="2" ry="2" />
<text  x="539.00" y="2087.5" ></text>
</g>
<g >
<title>_dl_relocate_object (527,606 samples, 1.13%)</title><rect x="49.0" y="2029" width="13.4" height="15.0" fill="rgb(252,198,2)" rx="2" ry="2" />
<text  x="52.04" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1597" width="35.3" height="15.0" fill="rgb(228,201,15)" rx="2" ry="2" />
<text  x="543.41" y="1607.5" >st..</text>
</g>
<g >
<title>sysvec_irq_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1709" width="4.6" height="15.0" fill="rgb(245,155,50)" rx="2" ry="2" />
<text  x="1180.56" y="1719.5" ></text>
</g>
<g >
<title>vfs_write (542,104 samples, 1.16%)</title><rect x="811.4" y="1885" width="13.7" height="15.0" fill="rgb(225,24,3)" rx="2" ry="2" />
<text  x="814.41" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1869" width="35.3" height="15.0" fill="rgb(226,197,40)" rx="2" ry="2" />
<text  x="618.95" y="1879.5" >st..</text>
</g>
<g >
<title>__GI___read_nocancel (242,364 samples, 0.52%)</title><rect x="503.5" y="2061" width="6.1" height="15.0" fill="rgb(224,144,40)" rx="2" ry="2" />
<text  x="506.49" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,394,123 samples, 2.99%)</title><rect x="615.9" y="61" width="35.3" height="15.0" fill="rgb(212,37,24)" rx="2" ry="2" />
<text  x="618.95" y="71.5" >st..</text>
</g>
<g >
<title>do_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1869" width="7.2" height="15.0" fill="rgb(221,126,3)" rx="2" ry="2" />
<text  x="840.43" y="1879.5" ></text>
</g>
<g >
<title>smp_call_function_single (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1853" width="33.0" height="15.0" fill="rgb(244,15,23)" rx="2" ry="2" />
<text  x="680.85" y="1863.5" >sm..</text>
</g>
<g >
<title>[[vdso]] (281,432 samples, 0.60%)</title><rect x="147.0" y="2029" width="7.1" height="15.0" fill="rgb(209,192,39)" rx="2" ry="2" />
<text  x="149.96" y="2039.5" ></text>
</g>
<g >
<title>do_syscall_64 (542,104 samples, 1.16%)</title><rect x="811.4" y="1933" width="13.7" height="15.0" fill="rgb(214,136,24)" rx="2" ry="2" />
<text  x="814.41" y="1943.5" ></text>
</g>
<g >
<title>exc_page_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1949" width="7.2" height="15.0" fill="rgb(252,103,16)" rx="2" ry="2" />
<text  x="840.43" y="1959.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (422,760 samples, 0.91%)</title><rect x="575.7" y="1869" width="10.7" height="15.0" fill="rgb(246,3,4)" rx="2" ry="2" />
<text  x="578.67" y="1879.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (491,780 samples, 1.05%)</title><rect x="1177.6" y="1917" width="12.4" height="15.0" fill="rgb(211,186,19)" rx="2" ry="2" />
<text  x="1180.56" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="2061" width="35.3" height="15.0" fill="rgb(215,108,5)" rx="2" ry="2" />
<text  x="618.95" y="2071.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="781" width="35.3" height="15.0" fill="rgb(207,60,12)" rx="2" ry="2" />
<text  x="543.41" y="791.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1437" width="35.3" height="15.0" fill="rgb(227,34,41)" rx="2" ry="2" />
<text  x="618.95" y="1447.5" >st..</text>
</g>
<g >
<title>dequeue_entity (1,759,875 samples, 3.77%)</title><rect x="724.3" y="1853" width="44.5" height="15.0" fill="rgb(250,186,13)" rx="2" ry="2" />
<text  x="727.25" y="1863.5" >dequ..</text>
</g>
<g >
<title>x86_64_start_reservations (491,780 samples, 1.05%)</title><rect x="1177.6" y="2045" width="12.4" height="15.0" fill="rgb(242,100,21)" rx="2" ry="2" />
<text  x="1180.56" y="2055.5" ></text>
</g>
<g >
<title>[perf-273006.map] (422,760 samples, 0.91%)</title><rect x="575.7" y="1741" width="10.7" height="15.0" fill="rgb(220,72,6)" rx="2" ry="2" />
<text  x="578.67" y="1751.5" ></text>
</g>
<g >
<title>filemap_get_pages (249,546 samples, 0.53%)</title><rect x="497.2" y="1917" width="6.3" height="15.0" fill="rgb(213,91,1)" rx="2" ry="2" />
<text  x="500.18" y="1927.5" ></text>
</g>
<g >
<title>generic_exec_single (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1837" width="33.0" height="15.0" fill="rgb(224,75,36)" rx="2" ry="2" />
<text  x="680.85" y="1847.5" >ge..</text>
</g>
<g >
<title>pick_next_task (174,153 samples, 0.37%)</title><rect x="536.0" y="1997" width="4.4" height="15.0" fill="rgb(211,11,4)" rx="2" ry="2" />
<text  x="539.00" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1197" width="35.3" height="15.0" fill="rgb(232,38,21)" rx="2" ry="2" />
<text  x="618.95" y="1207.5" >st..</text>
</g>
<g >
<title>seq_read_iter (205,434 samples, 0.44%)</title><rect x="825.1" y="1885" width="5.2" height="15.0" fill="rgb(231,58,45)" rx="2" ry="2" />
<text  x="828.12" y="1895.5" ></text>
</g>
<g >
<title>do_idle (12,620,426 samples, 27.05%)</title><rect x="858.4" y="2029" width="319.2" height="15.0" fill="rgb(251,112,26)" rx="2" ry="2" />
<text  x="861.39" y="2039.5" >do_idle</text>
</g>
<g >
<title>run_timer_softirq (184,024 samples, 0.39%)</title><rect x="1177.6" y="1837" width="4.6" height="15.0" fill="rgb(207,39,45)" rx="2" ry="2" />
<text  x="1180.56" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1261" width="35.3" height="15.0" fill="rgb(234,215,10)" rx="2" ry="2" />
<text  x="618.95" y="1271.5" >st..</text>
</g>
<g >
<title>refill_obj_stock (246,581 samples, 0.53%)</title><rect x="651.2" y="1757" width="6.2" height="15.0" fill="rgb(245,6,46)" rx="2" ry="2" />
<text  x="654.21" y="1767.5" ></text>
</g>
<g >
<title>pfn_to_dma_pte (208,702 samples, 0.45%)</title><rect x="858.4" y="1725" width="5.3" height="15.0" fill="rgb(228,53,18)" rx="2" ry="2" />
<text  x="861.39" y="1735.5" ></text>
</g>
<g >
<title>hrtick_update (170,064 samples, 0.36%)</title><rect x="786.0" y="1869" width="4.3" height="15.0" fill="rgb(254,62,46)" rx="2" ry="2" />
<text  x="789.04" y="1879.5" ></text>
</g>
<g >
<title>[[vdso]] (9,925,410 samples, 21.27%)</title><rect x="246.2" y="2013" width="251.0" height="15.0" fill="rgb(242,180,26)" rx="2" ry="2" />
<text  x="249.17" y="2023.5" >[[vdso]]</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1677" width="35.3" height="15.0" fill="rgb(226,98,53)" rx="2" ry="2" />
<text  x="543.41" y="1687.5" >st..</text>
</g>
<g >
<title>Builtins_JSEntry (422,760 samples, 0.91%)</title><rect x="575.7" y="1789" width="10.7" height="15.0" fill="rgb(237,5,0)" rx="2" ry="2" />
<text  x="578.67" y="1799.5" ></text>
</g>
<g >
<title>_dl_start (234,750 samples, 0.50%)</title><rect x="509.6" y="2061" width="6.0" height="15.0" fill="rgb(228,170,11)" rx="2" ry="2" />
<text  x="512.62" y="2071.5" ></text>
</g>
<g >
<title>perf_mmap__consume (281,107 samples, 0.60%)</title><rect x="830.3" y="1981" width="7.1" height="15.0" fill="rgb(223,96,53)" rx="2" ry="2" />
<text  x="833.32" y="1991.5" ></text>
</g>
<g >
<title>put_prev_task_fair (84,744 samples, 0.18%)</title><rect x="801.2" y="1885" width="2.2" height="15.0" fill="rgb(207,114,23)" rx="2" ry="2" />
<text  x="804.24" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1949" width="35.3" height="15.0" fill="rgb(248,29,39)" rx="2" ry="2" />
<text  x="618.95" y="1959.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="845" width="35.3" height="15.0" fill="rgb(232,225,53)" rx="2" ry="2" />
<text  x="543.41" y="855.5" >st..</text>
</g>
<g >
<title>mmput (955,171 samples, 2.05%)</title><rect x="651.2" y="1885" width="24.2" height="15.0" fill="rgb(217,83,33)" rx="2" ry="2" />
<text  x="654.21" y="1895.5" >m..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="2077" width="35.3" height="15.0" fill="rgb(251,135,8)" rx="2" ry="2" />
<text  x="618.95" y="2087.5" >st..</text>
</g>
<g >
<title>kmem_cache_free (246,581 samples, 0.53%)</title><rect x="651.2" y="1805" width="6.2" height="15.0" fill="rgb(217,123,52)" rx="2" ry="2" />
<text  x="654.21" y="1815.5" ></text>
</g>
<g >
<title>all (46,658,197 samples, 100%)</title><rect x="10.0" y="2109" width="1180.0" height="15.0" fill="rgb(213,168,14)" rx="2" ry="2" />
<text  x="13.00" y="2119.5" ></text>
</g>
<g >
<title>handle_mm_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1981" width="7.0" height="15.0" fill="rgb(231,98,0)" rx="2" ry="2" />
<text  x="44.97" y="1991.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (242,364 samples, 0.52%)</title><rect x="503.5" y="1949" width="6.1" height="15.0" fill="rgb(208,5,28)" rx="2" ry="2" />
<text  x="506.49" y="1959.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (11,930,330 samples, 25.57%)</title><rect x="858.4" y="2013" width="301.7" height="15.0" fill="rgb(207,121,46)" rx="2" ry="2" />
<text  x="861.39" y="2023.5" >cpuidle_idle_call</text>
</g>
<g >
<title>irq_exit_rcu (208,702 samples, 0.45%)</title><rect x="858.4" y="1933" width="5.3" height="15.0" fill="rgb(211,182,2)" rx="2" ry="2" />
<text  x="861.39" y="1943.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (807,101 samples, 1.73%)</title><rect x="42.0" y="2061" width="20.4" height="15.0" fill="rgb(224,225,2)" rx="2" ry="2" />
<text  x="44.97" y="2071.5" ></text>
</g>
<g >
<title>do_syscall_64 (158,467 samples, 0.34%)</title><rect x="807.4" y="1981" width="4.0" height="15.0" fill="rgb(217,210,34)" rx="2" ry="2" />
<text  x="810.41" y="1991.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (249,546 samples, 0.53%)</title><rect x="497.2" y="2045" width="6.3" height="15.0" fill="rgb(250,154,54)" rx="2" ry="2" />
<text  x="500.18" y="2055.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (84,414 samples, 0.18%)</title><rect x="730.4" y="1837" width="2.2" height="15.0" fill="rgb(213,17,33)" rx="2" ry="2" />
<text  x="733.45" y="1847.5" ></text>
</g>
<g >
<title>perf (7,236,967 samples, 15.51%)</title><rect x="675.4" y="2093" width="183.0" height="15.0" fill="rgb(234,132,43)" rx="2" ry="2" />
<text  x="678.36" y="2103.5" >perf</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="925" width="35.3" height="15.0" fill="rgb(215,144,5)" rx="2" ry="2" />
<text  x="543.41" y="935.5" >st..</text>
</g>
<g >
<title>cpuset_cpus_allowed (83,290 samples, 0.18%)</title><rect x="803.4" y="1901" width="2.1" height="15.0" fill="rgb(231,115,22)" rx="2" ry="2" />
<text  x="806.39" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1405" width="35.3" height="15.0" fill="rgb(241,48,18)" rx="2" ry="2" />
<text  x="543.41" y="1415.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1565" width="35.3" height="15.0" fill="rgb(222,57,54)" rx="2" ry="2" />
<text  x="543.41" y="1575.5" >st..</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (3,702,922 samples, 7.94%)</title><rect x="713.8" y="1949" width="93.6" height="15.0" fill="rgb(240,166,42)" rx="2" ry="2" />
<text  x="716.76" y="1959.5" >__x64_sys_s..</text>
</g>
<g >
<title>irq_work_run_list (184,024 samples, 0.39%)</title><rect x="1177.6" y="1661" width="4.6" height="15.0" fill="rgb(233,91,37)" rx="2" ry="2" />
<text  x="1180.56" y="1671.5" ></text>
</g>
<g >
<title>read (205,434 samples, 0.44%)</title><rect x="825.1" y="1997" width="5.2" height="15.0" fill="rgb(232,157,26)" rx="2" ry="2" />
<text  x="828.12" y="2007.5" ></text>
</g>
<g >
<title>pick_next_task_fair (531,389 samples, 1.14%)</title><rect x="522.6" y="1981" width="13.4" height="15.0" fill="rgb(226,13,40)" rx="2" ry="2" />
<text  x="525.56" y="1991.5" ></text>
</g>
<g >
<title>ext4_file_write_iter (545,942 samples, 1.17%)</title><rect x="844.6" y="1853" width="13.8" height="15.0" fill="rgb(209,74,15)" rx="2" ry="2" />
<text  x="847.58" y="1863.5" ></text>
</g>
<g >
<title>page_add_file_rmap (282,827 samples, 0.61%)</title><rect x="837.4" y="1805" width="7.2" height="15.0" fill="rgb(219,228,6)" rx="2" ry="2" />
<text  x="840.43" y="1815.5" ></text>
</g>
<g >
<title>cpu_startup_entry (12,620,426 samples, 27.05%)</title><rect x="858.4" y="2045" width="319.2" height="15.0" fill="rgb(234,214,44)" rx="2" ry="2" />
<text  x="861.39" y="2055.5" >cpu_startup_entry</text>
</g>
<g >
<title>do_set_pte (282,827 samples, 0.61%)</title><rect x="837.4" y="1821" width="7.2" height="15.0" fill="rgb(217,201,25)" rx="2" ry="2" />
<text  x="840.43" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="797" width="35.3" height="15.0" fill="rgb(240,191,7)" rx="2" ry="2" />
<text  x="543.41" y="807.5" >st..</text>
</g>
<g >
<title>zap_pte_range (238,385 samples, 0.51%)</title><rect x="669.3" y="1789" width="6.1" height="15.0" fill="rgb(243,171,17)" rx="2" ry="2" />
<text  x="672.33" y="1799.5" ></text>
</g>
<g >
<title>__calc_delta (82,003 samples, 0.18%)</title><rect x="677.8" y="1661" width="2.1" height="15.0" fill="rgb(245,163,9)" rx="2" ry="2" />
<text  x="680.85" y="1671.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1837" width="35.3" height="15.0" fill="rgb(217,39,38)" rx="2" ry="2" />
<text  x="543.41" y="1847.5" >st..</text>
</g>
<g >
<title>irq_work_run (184,024 samples, 0.39%)</title><rect x="1177.6" y="1677" width="4.6" height="15.0" fill="rgb(233,118,31)" rx="2" ry="2" />
<text  x="1180.56" y="1687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1453" width="35.3" height="15.0" fill="rgb(238,92,49)" rx="2" ry="2" />
<text  x="618.95" y="1463.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1789" width="35.3" height="15.0" fill="rgb(240,21,27)" rx="2" ry="2" />
<text  x="618.95" y="1799.5" >st..</text>
</g>
<g >
<title>tick_sched_timer (82,003 samples, 0.18%)</title><rect x="677.8" y="1741" width="2.1" height="15.0" fill="rgb(228,102,50)" rx="2" ry="2" />
<text  x="680.85" y="1751.5" ></text>
</g>
<g >
<title>dl_task_check_affinity (75,608 samples, 0.16%)</title><rect x="805.5" y="1901" width="1.9" height="15.0" fill="rgb(243,58,25)" rx="2" ry="2" />
<text  x="808.49" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1309" width="35.3" height="15.0" fill="rgb(242,103,47)" rx="2" ry="2" />
<text  x="543.41" y="1319.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (216,083 samples, 0.46%)</title><rect x="580.9" y="1645" width="5.5" height="15.0" fill="rgb(222,168,26)" rx="2" ry="2" />
<text  x="583.89" y="1655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="157" width="35.3" height="15.0" fill="rgb(228,226,30)" rx="2" ry="2" />
<text  x="618.95" y="167.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1773" width="35.3" height="15.0" fill="rgb(227,204,39)" rx="2" ry="2" />
<text  x="543.41" y="1783.5" >st..</text>
</g>
<g >
<title>__sysvec_irq_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1693" width="4.6" height="15.0" fill="rgb(248,9,45)" rx="2" ry="2" />
<text  x="1180.56" y="1703.5" ></text>
</g>
<g >
<title>sched_setaffinity (3,702,922 samples, 7.94%)</title><rect x="713.8" y="1933" width="93.6" height="15.0" fill="rgb(242,60,24)" rx="2" ry="2" />
<text  x="716.76" y="1943.5" >sched_setaf..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1757" width="35.3" height="15.0" fill="rgb(213,39,17)" rx="2" ry="2" />
<text  x="618.95" y="1767.5" >st..</text>
</g>
<g >
<title>main (7,236,967 samples, 15.51%)</title><rect x="675.4" y="2061" width="183.0" height="15.0" fill="rgb(232,145,1)" rx="2" ry="2" />
<text  x="678.36" y="2071.5" >main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="957" width="35.3" height="15.0" fill="rgb(242,79,39)" rx="2" ry="2" />
<text  x="618.95" y="967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1933" width="35.3" height="15.0" fill="rgb(219,85,6)" rx="2" ry="2" />
<text  x="543.41" y="1943.5" >st..</text>
</g>
<g >
<title>__GI___execve (955,171 samples, 2.05%)</title><rect x="651.2" y="2077" width="24.2" height="15.0" fill="rgb(211,83,47)" rx="2" ry="2" />
<text  x="654.21" y="2087.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="685" width="35.3" height="15.0" fill="rgb(237,15,7)" rx="2" ry="2" />
<text  x="618.95" y="695.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1997" width="7.0" height="15.0" fill="rgb(219,152,19)" rx="2" ry="2" />
<text  x="44.97" y="2007.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (545,942 samples, 1.17%)</title><rect x="844.6" y="1837" width="13.8" height="15.0" fill="rgb(247,89,4)" rx="2" ry="2" />
<text  x="847.58" y="1847.5" ></text>
</g>
<g >
<title>scheduler_tick (82,003 samples, 0.18%)</title><rect x="677.8" y="1693" width="2.1" height="15.0" fill="rgb(232,67,28)" rx="2" ry="2" />
<text  x="680.85" y="1703.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (82,003 samples, 0.18%)</title><rect x="677.8" y="1805" width="2.1" height="15.0" fill="rgb(209,118,27)" rx="2" ry="2" />
<text  x="680.85" y="1815.5" ></text>
</g>
<g >
<title>__perf_event_enable (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1789" width="30.9" height="15.0" fill="rgb(205,33,10)" rx="2" ry="2" />
<text  x="682.92" y="1799.5" >__..</text>
</g>
<g >
<title>node::SpinEventLoop (422,760 samples, 0.91%)</title><rect x="575.7" y="2013" width="10.7" height="15.0" fill="rgb(224,107,13)" rx="2" ry="2" />
<text  x="578.67" y="2023.5" ></text>
</g>
<g >
<title>vfs_read (249,546 samples, 0.53%)</title><rect x="497.2" y="1997" width="6.3" height="15.0" fill="rgb(224,56,45)" rx="2" ry="2" />
<text  x="500.18" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="317" width="35.3" height="15.0" fill="rgb(248,16,6)" rx="2" ry="2" />
<text  x="618.95" y="327.5" >st..</text>
</g>
<g >
<title>reweight_entity (169,364 samples, 0.36%)</title><rect x="739.0" y="1821" width="4.3" height="15.0" fill="rgb(231,195,42)" rx="2" ry="2" />
<text  x="741.97" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="333" width="35.3" height="15.0" fill="rgb(222,66,16)" rx="2" ry="2" />
<text  x="618.95" y="343.5" >st..</text>
</g>
<g >
<title>__libc_start_call_main (7,236,967 samples, 15.51%)</title><rect x="675.4" y="2077" width="183.0" height="15.0" fill="rgb(247,26,12)" rx="2" ry="2" />
<text  x="678.36" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1005" width="35.3" height="15.0" fill="rgb(213,149,46)" rx="2" ry="2" />
<text  x="543.41" y="1015.5" >st..</text>
</g>
<g >
<title>cgroup_rstat_flush_irqsafe (542,104 samples, 1.16%)</title><rect x="811.4" y="1741" width="13.7" height="15.0" fill="rgb(221,119,7)" rx="2" ry="2" />
<text  x="814.41" y="1751.5" ></text>
</g>
<g >
<title>generic_file_read_iter (242,364 samples, 0.52%)</title><rect x="503.5" y="1933" width="6.1" height="15.0" fill="rgb(231,98,6)" rx="2" ry="2" />
<text  x="506.49" y="1943.5" ></text>
</g>
<g >
<title>uv_run (422,760 samples, 0.91%)</title><rect x="575.7" y="1997" width="10.7" height="15.0" fill="rgb(207,187,13)" rx="2" ry="2" />
<text  x="578.67" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1485" width="35.3" height="15.0" fill="rgb(226,51,38)" rx="2" ry="2" />
<text  x="543.41" y="1495.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (955,171 samples, 2.05%)</title><rect x="651.2" y="2061" width="24.2" height="15.0" fill="rgb(215,219,14)" rx="2" ry="2" />
<text  x="654.21" y="2071.5" >e..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1069" width="35.3" height="15.0" fill="rgb(230,196,4)" rx="2" ry="2" />
<text  x="618.95" y="1079.5" >st..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (184,024 samples, 0.39%)</title><rect x="1177.6" y="1453" width="4.6" height="15.0" fill="rgb(253,137,50)" rx="2" ry="2" />
<text  x="1180.56" y="1463.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="557" width="35.3" height="15.0" fill="rgb(251,223,10)" rx="2" ry="2" />
<text  x="618.95" y="567.5" >st..</text>
</g>
<g >
<title>__do_set_cpus_allowed (3,214,074 samples, 6.89%)</title><rect x="715.6" y="1885" width="81.3" height="15.0" fill="rgb(237,142,17)" rx="2" ry="2" />
<text  x="718.64" y="1895.5" >__do_set_..</text>
</g>
<g >
<title>cpuidle_enter (11,930,330 samples, 25.57%)</title><rect x="858.4" y="1997" width="301.7" height="15.0" fill="rgb(236,30,11)" rx="2" ry="2" />
<text  x="861.39" y="2007.5" >cpuidle_enter</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="973" width="35.3" height="15.0" fill="rgb(225,200,5)" rx="2" ry="2" />
<text  x="543.41" y="983.5" >st..</text>
</g>
<g >
<title>dequeue_task_fair (2,181,041 samples, 4.67%)</title><rect x="720.0" y="1869" width="55.2" height="15.0" fill="rgb(247,181,4)" rx="2" ry="2" />
<text  x="723.00" y="1879.5" >deque..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="477" width="35.3" height="15.0" fill="rgb(209,88,24)" rx="2" ry="2" />
<text  x="618.95" y="487.5" >st..</text>
</g>
<g >
<title>smpboot_thread_fn (174,153 samples, 0.37%)</title><rect x="536.0" y="2045" width="4.4" height="15.0" fill="rgb(207,140,39)" rx="2" ry="2" />
<text  x="539.00" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1901" width="35.3" height="15.0" fill="rgb(237,144,22)" rx="2" ry="2" />
<text  x="543.41" y="1911.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1037" width="35.3" height="15.0" fill="rgb(253,151,43)" rx="2" ry="2" />
<text  x="543.41" y="1047.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1613" width="35.3" height="15.0" fill="rgb(249,210,1)" rx="2" ry="2" />
<text  x="618.95" y="1623.5" >st..</text>
</g>
<g >
<title>node (4,381,102 samples, 9.39%)</title><rect x="540.4" y="2093" width="110.8" height="15.0" fill="rgb(225,109,50)" rx="2" ry="2" />
<text  x="543.41" y="2103.5" >node</text>
</g>
<g >
<title>uv__read (422,760 samples, 0.91%)</title><rect x="575.7" y="1949" width="10.7" height="15.0" fill="rgb(206,121,14)" rx="2" ry="2" />
<text  x="578.67" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="765" width="35.3" height="15.0" fill="rgb(218,162,30)" rx="2" ry="2" />
<text  x="543.41" y="775.5" >st..</text>
</g>
<g >
<title>generic_perform_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1821" width="13.8" height="15.0" fill="rgb(220,80,1)" rx="2" ry="2" />
<text  x="847.58" y="1831.5" ></text>
</g>
<g >
<title>seq_read (205,434 samples, 0.44%)</title><rect x="825.1" y="1901" width="5.2" height="15.0" fill="rgb(206,18,18)" rx="2" ry="2" />
<text  x="828.12" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1245" width="35.3" height="15.0" fill="rgb(251,4,34)" rx="2" ry="2" />
<text  x="543.41" y="1255.5" >st..</text>
</g>
<g >
<title>handle_mm_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="1997" width="6.0" height="15.0" fill="rgb(215,196,35)" rx="2" ry="2" />
<text  x="512.62" y="2007.5" ></text>
</g>
<g >
<title>perf-exec (955,171 samples, 2.05%)</title><rect x="651.2" y="2093" width="24.2" height="15.0" fill="rgb(233,192,42)" rx="2" ry="2" />
<text  x="654.21" y="2103.5" >p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="205" width="35.3" height="15.0" fill="rgb(217,128,46)" rx="2" ry="2" />
<text  x="618.95" y="215.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="989" width="35.3" height="15.0" fill="rgb(243,160,43)" rx="2" ry="2" />
<text  x="543.41" y="999.5" >st..</text>
</g>
<g >
<title>remote_function (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1821" width="30.9" height="15.0" fill="rgb(243,46,15)" rx="2" ry="2" />
<text  x="682.92" y="1831.5" >re..</text>
</g>
<g >
<title>cgroup_rstat_flush_locked (542,104 samples, 1.16%)</title><rect x="811.4" y="1725" width="13.7" height="15.0" fill="rgb(254,144,16)" rx="2" ry="2" />
<text  x="814.41" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="861" width="35.3" height="15.0" fill="rgb(209,38,36)" rx="2" ry="2" />
<text  x="543.41" y="871.5" >st..</text>
</g>
<g >
<title>unmap_page_range (478,512 samples, 1.03%)</title><rect x="663.3" y="1821" width="12.1" height="15.0" fill="rgb(248,75,35)" rx="2" ry="2" />
<text  x="666.26" y="1831.5" ></text>
</g>
<g >
<title>cmd_record (7,236,967 samples, 15.51%)</title><rect x="675.4" y="2029" width="183.0" height="15.0" fill="rgb(221,4,47)" rx="2" ry="2" />
<text  x="678.36" y="2039.5" >cmd_record</text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (422,760 samples, 0.91%)</title><rect x="575.7" y="2045" width="10.7" height="15.0" fill="rgb(232,217,47)" rx="2" ry="2" />
<text  x="578.67" y="2055.5" ></text>
</g>
<g >
<title>ext4_da_write_end (545,942 samples, 1.17%)</title><rect x="844.6" y="1805" width="13.8" height="15.0" fill="rgb(231,98,2)" rx="2" ry="2" />
<text  x="847.58" y="1815.5" ></text>
</g>
<g >
<title>process_timeout (184,024 samples, 0.39%)</title><rect x="1177.6" y="1789" width="4.6" height="15.0" fill="rgb(232,193,28)" rx="2" ry="2" />
<text  x="1180.56" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="141" width="35.3" height="15.0" fill="rgb(250,218,30)" rx="2" ry="2" />
<text  x="618.95" y="151.5" >st..</text>
</g>
<g >
<title>handle_pte_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1885" width="7.2" height="15.0" fill="rgb(230,211,9)" rx="2" ry="2" />
<text  x="840.43" y="1895.5" ></text>
</g>
<g >
<title>page_remove_rmap (238,385 samples, 0.51%)</title><rect x="669.3" y="1773" width="6.1" height="15.0" fill="rgb(251,144,10)" rx="2" ry="2" />
<text  x="672.33" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1501" width="35.3" height="15.0" fill="rgb(220,123,54)" rx="2" ry="2" />
<text  x="618.95" y="1511.5" >st..</text>
</g>
<g >
<title>__x64_sys_read (205,434 samples, 0.44%)</title><rect x="825.1" y="1949" width="5.2" height="15.0" fill="rgb(207,184,27)" rx="2" ry="2" />
<text  x="828.12" y="1959.5" ></text>
</g>
<g >
<title>__x64_sys_pread64 (249,546 samples, 0.53%)</title><rect x="497.2" y="2013" width="6.3" height="15.0" fill="rgb(244,90,13)" rx="2" ry="2" />
<text  x="500.18" y="2023.5" ></text>
</g>
<g >
<title>do_syscall_64 (545,942 samples, 1.17%)</title><rect x="844.6" y="1933" width="13.8" height="15.0" fill="rgb(249,105,50)" rx="2" ry="2" />
<text  x="847.58" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1133" width="35.3" height="15.0" fill="rgb(205,138,28)" rx="2" ry="2" />
<text  x="543.41" y="1143.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="2029" width="35.3" height="15.0" fill="rgb(234,63,39)" rx="2" ry="2" />
<text  x="618.95" y="2039.5" >st..</text>
</g>
<g >
<title>ext4_get_inode_loc (284,178 samples, 0.61%)</title><rect x="851.2" y="1709" width="7.2" height="15.0" fill="rgb(205,212,28)" rx="2" ry="2" />
<text  x="854.20" y="1719.5" ></text>
</g>
<g >
<title>schedule_idle (690,096 samples, 1.48%)</title><rect x="1160.1" y="2013" width="17.5" height="15.0" fill="rgb(252,161,39)" rx="2" ry="2" />
<text  x="1163.11" y="2023.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (542,104 samples, 1.16%)</title><rect x="811.4" y="1805" width="13.7" height="15.0" fill="rgb(253,133,29)" rx="2" ry="2" />
<text  x="814.41" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1533" width="35.3" height="15.0" fill="rgb(233,82,14)" rx="2" ry="2" />
<text  x="543.41" y="1543.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1325" width="35.3" height="15.0" fill="rgb(213,19,17)" rx="2" ry="2" />
<text  x="543.41" y="1335.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1853" width="35.3" height="15.0" fill="rgb(209,94,39)" rx="2" ry="2" />
<text  x="543.41" y="1863.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="941" width="35.3" height="15.0" fill="rgb(223,206,7)" rx="2" ry="2" />
<text  x="543.41" y="951.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="573" width="35.3" height="15.0" fill="rgb(233,172,25)" rx="2" ry="2" />
<text  x="618.95" y="583.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1405" width="35.3" height="15.0" fill="rgb(213,217,49)" rx="2" ry="2" />
<text  x="618.95" y="1415.5" >st..</text>
</g>
<g >
<title>filemap_read (242,364 samples, 0.52%)</title><rect x="503.5" y="1917" width="6.1" height="15.0" fill="rgb(239,4,17)" rx="2" ry="2" />
<text  x="506.49" y="1927.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1981" width="33.0" height="15.0" fill="rgb(246,141,38)" rx="2" ry="2" />
<text  x="680.85" y="1991.5" >en..</text>
</g>
<g >
<title>intel_iommu_iova_to_phys (208,702 samples, 0.45%)</title><rect x="858.4" y="1741" width="5.3" height="15.0" fill="rgb(253,146,51)" rx="2" ry="2" />
<text  x="861.39" y="1751.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (216,083 samples, 0.46%)</title><rect x="580.9" y="1581" width="5.5" height="15.0" fill="rgb(234,95,38)" rx="2" ry="2" />
<text  x="583.89" y="1591.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="2045" width="35.3" height="15.0" fill="rgb(213,147,14)" rx="2" ry="2" />
<text  x="618.95" y="2055.5" >st..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (307,756 samples, 0.66%)</title><rect x="1182.2" y="1901" width="7.8" height="15.0" fill="rgb(216,34,2)" rx="2" ry="2" />
<text  x="1185.22" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1629" width="35.3" height="15.0" fill="rgb(225,208,34)" rx="2" ry="2" />
<text  x="543.41" y="1639.5" >st..</text>
</g>
<g >
<title>__queue_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1597" width="4.6" height="15.0" fill="rgb(253,177,6)" rx="2" ry="2" />
<text  x="1180.56" y="1607.5" ></text>
</g>
<g >
<title>update_cfs_group (421,996 samples, 0.90%)</title><rect x="732.6" y="1837" width="10.7" height="15.0" fill="rgb(254,28,2)" rx="2" ry="2" />
<text  x="735.58" y="1847.5" ></text>
</g>
<g >
<title>exc_page_fault (216,083 samples, 0.46%)</title><rect x="580.9" y="1613" width="5.5" height="15.0" fill="rgb(223,178,8)" rx="2" ry="2" />
<text  x="583.89" y="1623.5" ></text>
</g>
<g >
<title>cpuidle_enter (491,780 samples, 1.05%)</title><rect x="1177.6" y="1933" width="12.4" height="15.0" fill="rgb(247,225,32)" rx="2" ry="2" />
<text  x="1180.56" y="1943.5" ></text>
</g>
<g >
<title>do_syscall_64 (249,546 samples, 0.53%)</title><rect x="497.2" y="2029" width="6.3" height="15.0" fill="rgb(208,127,16)" rx="2" ry="2" />
<text  x="500.18" y="2039.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (284,178 samples, 0.61%)</title><rect x="851.2" y="1725" width="7.2" height="15.0" fill="rgb(232,38,35)" rx="2" ry="2" />
<text  x="854.20" y="1735.5" ></text>
</g>
<g >
<title>call_timer_fn (184,024 samples, 0.39%)</title><rect x="1177.6" y="1805" width="4.6" height="15.0" fill="rgb(213,53,34)" rx="2" ry="2" />
<text  x="1180.56" y="1815.5" ></text>
</g>
<g >
<title>__x64_sys_read (242,364 samples, 0.52%)</title><rect x="503.5" y="2013" width="6.1" height="15.0" fill="rgb(242,74,19)" rx="2" ry="2" />
<text  x="506.49" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1293" width="35.3" height="15.0" fill="rgb(247,146,1)" rx="2" ry="2" />
<text  x="618.95" y="1303.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="413" width="35.3" height="15.0" fill="rgb(206,30,13)" rx="2" ry="2" />
<text  x="618.95" y="423.5" >st..</text>
</g>
<g >
<title>perf_tool__process_synth_event (542,104 samples, 1.16%)</title><rect x="811.4" y="1997" width="13.7" height="15.0" fill="rgb(244,3,50)" rx="2" ry="2" />
<text  x="814.41" y="2007.5" ></text>
</g>
<g >
<title>ctx_resched (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1773" width="30.9" height="15.0" fill="rgb(244,121,47)" rx="2" ry="2" />
<text  x="682.92" y="1783.5" >ct..</text>
</g>
<g >
<title>enqueue_task_fair (430,495 samples, 0.92%)</title><rect x="775.2" y="1869" width="10.8" height="15.0" fill="rgb(212,59,27)" rx="2" ry="2" />
<text  x="778.15" y="1879.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (545,942 samples, 1.17%)</title><rect x="844.6" y="1773" width="13.8" height="15.0" fill="rgb(224,176,29)" rx="2" ry="2" />
<text  x="847.58" y="1783.5" ></text>
</g>
<g >
<title>__ctype_init (279,495 samples, 0.60%)</title><rect x="42.0" y="2045" width="7.0" height="15.0" fill="rgb(251,183,34)" rx="2" ry="2" />
<text  x="44.97" y="2055.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1277" width="35.3" height="15.0" fill="rgb(236,108,49)" rx="2" ry="2" />
<text  x="618.95" y="1287.5" >st..</text>
</g>
<g >
<title>migration/34 (174,153 samples, 0.37%)</title><rect x="536.0" y="2093" width="4.4" height="15.0" fill="rgb(223,119,24)" rx="2" ry="2" />
<text  x="539.00" y="2103.5" ></text>
</g>
<g >
<title>event_function (1,219,201 samples, 2.61%)</title><rect x="679.9" y="1805" width="30.9" height="15.0" fill="rgb(213,108,23)" rx="2" ry="2" />
<text  x="682.92" y="1815.5" >ev..</text>
</g>
<g >
<title>__handle_mm_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1965" width="7.0" height="15.0" fill="rgb(236,101,46)" rx="2" ry="2" />
<text  x="44.97" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="253" width="35.3" height="15.0" fill="rgb(219,114,0)" rx="2" ry="2" />
<text  x="618.95" y="263.5" >st..</text>
</g>
<g >
<title>filemap_get_read_batch (242,364 samples, 0.52%)</title><rect x="503.5" y="1885" width="6.1" height="15.0" fill="rgb(232,119,32)" rx="2" ry="2" />
<text  x="506.49" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1901" width="35.3" height="15.0" fill="rgb(249,168,54)" rx="2" ry="2" />
<text  x="618.95" y="1911.5" >st..</text>
</g>
<g >
<title>perf_event__synthesize_comm (747,538 samples, 1.60%)</title><rect x="811.4" y="2013" width="18.9" height="15.0" fill="rgb(246,64,8)" rx="2" ry="2" />
<text  x="814.41" y="2023.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (82,003 samples, 0.18%)</title><rect x="677.8" y="1757" width="2.1" height="15.0" fill="rgb(230,198,36)" rx="2" ry="2" />
<text  x="680.85" y="1767.5" ></text>
</g>
<g >
<title>do_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1933" width="7.0" height="15.0" fill="rgb(233,110,14)" rx="2" ry="2" />
<text  x="44.97" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="973" width="35.3" height="15.0" fill="rgb(206,4,48)" rx="2" ry="2" />
<text  x="618.95" y="983.5" >st..</text>
</g>
<g >
<title>do_poll.constprop.0 (158,467 samples, 0.34%)</title><rect x="807.4" y="1933" width="4.0" height="15.0" fill="rgb(247,81,19)" rx="2" ry="2" />
<text  x="810.41" y="1943.5" ></text>
</g>
<g >
<title>node::Start (422,760 samples, 0.91%)</title><rect x="575.7" y="2061" width="10.7" height="15.0" fill="rgb(244,55,26)" rx="2" ry="2" />
<text  x="578.67" y="2071.5" ></text>
</g>
<g >
<title>irqentry_exit (216,083 samples, 0.46%)</title><rect x="580.9" y="1597" width="5.5" height="15.0" fill="rgb(217,215,39)" rx="2" ry="2" />
<text  x="583.89" y="1607.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1293" width="35.3" height="15.0" fill="rgb(218,166,33)" rx="2" ry="2" />
<text  x="543.41" y="1303.5" >st..</text>
</g>
<g >
<title>newidle_balance (531,389 samples, 1.14%)</title><rect x="522.6" y="1965" width="13.4" height="15.0" fill="rgb(221,50,50)" rx="2" ry="2" />
<text  x="525.56" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="637" width="35.3" height="15.0" fill="rgb(220,214,36)" rx="2" ry="2" />
<text  x="618.95" y="647.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="749" width="35.3" height="15.0" fill="rgb(238,156,14)" rx="2" ry="2" />
<text  x="543.41" y="759.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1933" width="7.2" height="15.0" fill="rgb(238,134,10)" rx="2" ry="2" />
<text  x="840.43" y="1943.5" ></text>
</g>
<g >
<title>dma_unmap_page_attrs (208,702 samples, 0.45%)</title><rect x="858.4" y="1805" width="5.3" height="15.0" fill="rgb(210,200,41)" rx="2" ry="2" />
<text  x="861.39" y="1815.5" ></text>
</g>
<g >
<title>do_user_addr_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1933" width="7.1" height="15.0" fill="rgb(234,70,19)" rx="2" ry="2" />
<text  x="833.32" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1821" width="35.3" height="15.0" fill="rgb(221,116,45)" rx="2" ry="2" />
<text  x="543.41" y="1831.5" >st..</text>
</g>
<g >
<title>InotifyBackend::handleEvent (1,394,123 samples, 2.99%)</title><rect x="540.4" y="2013" width="35.3" height="15.0" fill="rgb(224,121,12)" rx="2" ry="2" />
<text  x="543.41" y="2023.5" >In..</text>
</g>
<g >
<title>new_sync_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1869" width="13.8" height="15.0" fill="rgb(214,201,32)" rx="2" ry="2" />
<text  x="847.58" y="1879.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (491,780 samples, 1.05%)</title><rect x="1177.6" y="1949" width="12.4" height="15.0" fill="rgb(208,186,6)" rx="2" ry="2" />
<text  x="1180.56" y="1959.5" ></text>
</g>
<g >
<title>ttwu_do_activate (184,024 samples, 0.39%)</title><rect x="1177.6" y="1533" width="4.6" height="15.0" fill="rgb(217,126,36)" rx="2" ry="2" />
<text  x="1180.56" y="1543.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1709" width="35.3" height="15.0" fill="rgb(210,52,3)" rx="2" ry="2" />
<text  x="543.41" y="1719.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1389" width="35.3" height="15.0" fill="rgb(238,195,23)" rx="2" ry="2" />
<text  x="543.41" y="1399.5" >st..</text>
</g>
<g >
<title>iommu_iova_to_phys (208,702 samples, 0.45%)</title><rect x="858.4" y="1757" width="5.3" height="15.0" fill="rgb(219,26,22)" rx="2" ry="2" />
<text  x="861.39" y="1767.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (249,546 samples, 0.53%)</title><rect x="497.2" y="1901" width="6.3" height="15.0" fill="rgb(206,96,13)" rx="2" ry="2" />
<text  x="500.18" y="1911.5" ></text>
</g>
<g >
<title>exec_binprm (955,171 samples, 2.05%)</title><rect x="651.2" y="1965" width="24.2" height="15.0" fill="rgb(208,183,9)" rx="2" ry="2" />
<text  x="654.21" y="1975.5" >e..</text>
</g>
<g >
<title>schedule (531,389 samples, 1.14%)</title><rect x="522.6" y="2029" width="13.4" height="15.0" fill="rgb(206,86,51)" rx="2" ry="2" />
<text  x="525.56" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1021" width="35.3" height="15.0" fill="rgb(224,206,32)" rx="2" ry="2" />
<text  x="543.41" y="1031.5" >st..</text>
</g>
<g >
<title>enqueue_task_fair (184,024 samples, 0.39%)</title><rect x="1177.6" y="1501" width="4.6" height="15.0" fill="rgb(221,215,15)" rx="2" ry="2" />
<text  x="1180.56" y="1511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="909" width="35.3" height="15.0" fill="rgb(246,160,47)" rx="2" ry="2" />
<text  x="543.41" y="919.5" >st..</text>
</g>
<g >
<title>cpu_startup_entry (491,780 samples, 1.05%)</title><rect x="1177.6" y="1981" width="12.4" height="15.0" fill="rgb(243,86,0)" rx="2" ry="2" />
<text  x="1180.56" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="957" width="35.3" height="15.0" fill="rgb(206,215,42)" rx="2" ry="2" />
<text  x="543.41" y="967.5" >st..</text>
</g>
<g >
<title>ret_from_fork (531,389 samples, 1.14%)</title><rect x="522.6" y="2077" width="13.4" height="15.0" fill="rgb(206,174,12)" rx="2" ry="2" />
<text  x="525.56" y="2087.5" ></text>
</g>
<g >
<title>handle_pte_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1885" width="7.1" height="15.0" fill="rgb(229,53,19)" rx="2" ry="2" />
<text  x="833.32" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="829" width="35.3" height="15.0" fill="rgb(231,35,51)" rx="2" ry="2" />
<text  x="618.95" y="839.5" >st..</text>
</g>
<g >
<title>[unknown] (543,892 samples, 1.17%)</title><rect x="10.0" y="2061" width="13.8" height="15.0" fill="rgb(212,83,24)" rx="2" ry="2" />
<text  x="13.00" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1133" width="35.3" height="15.0" fill="rgb(241,108,29)" rx="2" ry="2" />
<text  x="618.95" y="1143.5" >st..</text>
</g>
<g >
<title>kthread (531,389 samples, 1.14%)</title><rect x="522.6" y="2061" width="13.4" height="15.0" fill="rgb(207,18,0)" rx="2" ry="2" />
<text  x="525.56" y="2071.5" ></text>
</g>
<g >
<title>__handle_mm_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1901" width="7.1" height="15.0" fill="rgb(221,202,19)" rx="2" ry="2" />
<text  x="833.32" y="1911.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (422,760 samples, 0.91%)</title><rect x="575.7" y="1805" width="10.7" height="15.0" fill="rgb(248,7,0)" rx="2" ry="2" />
<text  x="578.67" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="989" width="35.3" height="15.0" fill="rgb(237,75,13)" rx="2" ry="2" />
<text  x="618.95" y="999.5" >st..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (82,360 samples, 0.18%)</title><rect x="751.8" y="1821" width="2.0" height="15.0" fill="rgb(213,32,22)" rx="2" ry="2" />
<text  x="754.76" y="1831.5" ></text>
</g>
<g >
<title>[perf-273006.map] (422,760 samples, 0.91%)</title><rect x="575.7" y="1725" width="10.7" height="15.0" fill="rgb(227,78,44)" rx="2" ry="2" />
<text  x="578.67" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="397" width="35.3" height="15.0" fill="rgb(216,62,46)" rx="2" ry="2" />
<text  x="618.95" y="407.5" >st..</text>
</g>
<g >
<title>remove_vma (230,078 samples, 0.49%)</title><rect x="657.4" y="1853" width="5.9" height="15.0" fill="rgb(245,0,33)" rx="2" ry="2" />
<text  x="660.44" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1053" width="35.3" height="15.0" fill="rgb(239,136,0)" rx="2" ry="2" />
<text  x="618.95" y="1063.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="717" width="35.3" height="15.0" fill="rgb(209,94,46)" rx="2" ry="2" />
<text  x="618.95" y="727.5" >st..</text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (3,469,654 samples, 7.44%)</title><rect x="715.6" y="1901" width="87.8" height="15.0" fill="rgb(225,93,39)" rx="2" ry="2" />
<text  x="718.64" y="1911.5" >__set_cpus..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1773" width="35.3" height="15.0" fill="rgb(254,142,4)" rx="2" ry="2" />
<text  x="618.95" y="1783.5" >st..</text>
</g>
<g >
<title>vfs_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1885" width="13.8" height="15.0" fill="rgb(214,6,36)" rx="2" ry="2" />
<text  x="847.58" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="493" width="35.3" height="15.0" fill="rgb(207,88,40)" rx="2" ry="2" />
<text  x="618.95" y="503.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1757" width="35.3" height="15.0" fill="rgb(216,222,52)" rx="2" ry="2" />
<text  x="543.41" y="1767.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1565" width="35.3" height="15.0" fill="rgb(244,198,3)" rx="2" ry="2" />
<text  x="618.95" y="1575.5" >st..</text>
</g>
<g >
<title>update_load_avg (257,900 samples, 0.55%)</title><rect x="779.5" y="1837" width="6.5" height="15.0" fill="rgb(253,144,6)" rx="2" ry="2" />
<text  x="782.52" y="1847.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (284,178 samples, 0.61%)</title><rect x="851.2" y="1693" width="7.2" height="15.0" fill="rgb(245,71,39)" rx="2" ry="2" />
<text  x="854.20" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1325" width="35.3" height="15.0" fill="rgb(244,133,49)" rx="2" ry="2" />
<text  x="618.95" y="1335.5" >st..</text>
</g>
<g >
<title>tick_sched_handle (82,003 samples, 0.18%)</title><rect x="677.8" y="1725" width="2.1" height="15.0" fill="rgb(209,137,16)" rx="2" ry="2" />
<text  x="680.85" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="461" width="35.3" height="15.0" fill="rgb(228,61,43)" rx="2" ry="2" />
<text  x="618.95" y="471.5" >st..</text>
</g>
<g >
<title>_perf_event_enable (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1885" width="33.0" height="15.0" fill="rgb(237,20,42)" rx="2" ry="2" />
<text  x="680.85" y="1895.5" >_p..</text>
</g>
<g >
<title>kthread (174,153 samples, 0.37%)</title><rect x="536.0" y="2061" width="4.4" height="15.0" fill="rgb(208,87,37)" rx="2" ry="2" />
<text  x="539.00" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1341" width="35.3" height="15.0" fill="rgb(230,205,30)" rx="2" ry="2" />
<text  x="618.95" y="1351.5" >st..</text>
</g>
<g >
<title>dbs_irq_work (184,024 samples, 0.39%)</title><rect x="1177.6" y="1629" width="4.6" height="15.0" fill="rgb(216,9,11)" rx="2" ry="2" />
<text  x="1180.56" y="1639.5" ></text>
</g>
<g >
<title>queue_work_on (184,024 samples, 0.39%)</title><rect x="1177.6" y="1613" width="4.6" height="15.0" fill="rgb(248,17,19)" rx="2" ry="2" />
<text  x="1180.56" y="1623.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (246,581 samples, 0.53%)</title><rect x="651.2" y="1789" width="6.2" height="15.0" fill="rgb(230,20,50)" rx="2" ry="2" />
<text  x="654.21" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1485" width="35.3" height="15.0" fill="rgb(229,60,2)" rx="2" ry="2" />
<text  x="618.95" y="1495.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1725" width="35.3" height="15.0" fill="rgb(238,18,6)" rx="2" ry="2" />
<text  x="618.95" y="1735.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1517" width="35.3" height="15.0" fill="rgb(227,131,48)" rx="2" ry="2" />
<text  x="543.41" y="1527.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1965" width="33.0" height="15.0" fill="rgb(252,200,3)" rx="2" ry="2" />
<text  x="680.85" y="1975.5" >do..</text>
</g>
<g >
<title>wall_seconds (13,566,500 samples, 29.08%)</title><rect x="154.1" y="2029" width="343.1" height="15.0" fill="rgb(241,76,39)" rx="2" ry="2" />
<text  x="157.08" y="2039.5" >wall_seconds</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="93" width="35.3" height="15.0" fill="rgb(210,22,31)" rx="2" ry="2" />
<text  x="618.95" y="103.5" >st..</text>
</g>
<g >
<title>handle_mm_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1917" width="7.2" height="15.0" fill="rgb(254,145,5)" rx="2" ry="2" />
<text  x="840.43" y="1927.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (184,024 samples, 0.39%)</title><rect x="1177.6" y="1885" width="4.6" height="15.0" fill="rgb(225,0,23)" rx="2" ry="2" />
<text  x="1180.56" y="1895.5" ></text>
</g>
<g >
<title>bprm_execve (955,171 samples, 2.05%)</title><rect x="651.2" y="1997" width="24.2" height="15.0" fill="rgb(246,30,8)" rx="2" ry="2" />
<text  x="654.21" y="2007.5" >b..</text>
</g>
<g >
<title>__GI___pread64_nocancel (249,546 samples, 0.53%)</title><rect x="497.2" y="2061" width="6.3" height="15.0" fill="rgb(239,117,34)" rx="2" ry="2" />
<text  x="500.18" y="2071.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (184,024 samples, 0.39%)</title><rect x="1177.6" y="1853" width="4.6" height="15.0" fill="rgb(212,167,25)" rx="2" ry="2" />
<text  x="1180.56" y="1863.5" ></text>
</g>
<g >
<title>update_load_avg (840,658 samples, 1.80%)</title><rect x="747.5" y="1837" width="21.3" height="15.0" fill="rgb(227,159,26)" rx="2" ry="2" />
<text  x="750.50" y="1847.5" >u..</text>
</g>
<g >
<title>__irqentry_text_end (261,497 samples, 0.56%)</title><rect x="55.8" y="2013" width="6.6" height="15.0" fill="rgb(250,76,36)" rx="2" ry="2" />
<text  x="58.77" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1613" width="35.3" height="15.0" fill="rgb(253,132,21)" rx="2" ry="2" />
<text  x="543.41" y="1623.5" >st..</text>
</g>
<g >
<title>free_pgtables (246,581 samples, 0.53%)</title><rect x="651.2" y="1853" width="6.2" height="15.0" fill="rgb(209,190,3)" rx="2" ry="2" />
<text  x="654.21" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="669" width="35.3" height="15.0" fill="rgb(212,169,1)" rx="2" ry="2" />
<text  x="618.95" y="679.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1357" width="35.3" height="15.0" fill="rgb(215,68,43)" rx="2" ry="2" />
<text  x="543.41" y="1367.5" >st..</text>
</g>
<g >
<title>common_interrupt (208,702 samples, 0.45%)</title><rect x="858.4" y="1949" width="5.3" height="15.0" fill="rgb(231,78,5)" rx="2" ry="2" />
<text  x="861.39" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1917" width="35.3" height="15.0" fill="rgb(252,220,29)" rx="2" ry="2" />
<text  x="543.41" y="1927.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1581" width="35.3" height="15.0" fill="rgb(254,203,30)" rx="2" ry="2" />
<text  x="543.41" y="1591.5" >st..</text>
</g>
<g >
<title>asm_exc_page_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="2045" width="6.0" height="15.0" fill="rgb(241,125,46)" rx="2" ry="2" />
<text  x="512.62" y="2055.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1,109,876 samples, 2.38%)</title><rect x="830.3" y="2013" width="28.1" height="15.0" fill="rgb(218,18,40)" rx="2" ry="2" />
<text  x="833.32" y="2023.5" >r..</text>
</g>
<g >
<title>__handle_mm_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1901" width="7.2" height="15.0" fill="rgb(208,104,24)" rx="2" ry="2" />
<text  x="840.43" y="1911.5" ></text>
</g>
<g >
<title>_dl_map_object (491,910 samples, 1.05%)</title><rect x="497.2" y="2077" width="12.4" height="15.0" fill="rgb(241,184,49)" rx="2" ry="2" />
<text  x="500.18" y="2087.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1053" width="35.3" height="15.0" fill="rgb(252,134,51)" rx="2" ry="2" />
<text  x="543.41" y="1063.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (216,083 samples, 0.46%)</title><rect x="580.9" y="1709" width="5.5" height="15.0" fill="rgb(237,181,25)" rx="2" ry="2" />
<text  x="583.89" y="1719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1469" width="35.3" height="15.0" fill="rgb(208,194,47)" rx="2" ry="2" />
<text  x="543.41" y="1479.5" >st..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (955,171 samples, 2.05%)</title><rect x="651.2" y="2013" width="24.2" height="15.0" fill="rgb(223,129,16)" rx="2" ry="2" />
<text  x="654.21" y="2023.5" >d..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="701" width="35.3" height="15.0" fill="rgb(231,64,8)" rx="2" ry="2" />
<text  x="543.41" y="711.5" >st..</text>
</g>
<g >
<title>handle_pte_fault (234,750 samples, 0.50%)</title><rect x="509.6" y="1965" width="6.0" height="15.0" fill="rgb(226,217,2)" rx="2" ry="2" />
<text  x="512.62" y="1975.5" ></text>
</g>
<g >
<title>update_cfs_group (252,853 samples, 0.54%)</title><rect x="768.8" y="1853" width="6.4" height="15.0" fill="rgb(208,83,53)" rx="2" ry="2" />
<text  x="771.76" y="1863.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (422,760 samples, 0.91%)</title><rect x="575.7" y="1917" width="10.7" height="15.0" fill="rgb(244,153,52)" rx="2" ry="2" />
<text  x="578.67" y="1927.5" ></text>
</g>
<g >
<title>do_lookup_x (276,941 samples, 0.59%)</title><rect x="515.6" y="2077" width="7.0" height="15.0" fill="rgb(205,18,14)" rx="2" ry="2" />
<text  x="518.56" y="2087.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (281,107 samples, 0.60%)</title><rect x="830.3" y="1965" width="7.1" height="15.0" fill="rgb(240,12,53)" rx="2" ry="2" />
<text  x="833.32" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1309" width="35.3" height="15.0" fill="rgb(226,171,17)" rx="2" ry="2" />
<text  x="618.95" y="1319.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="925" width="35.3" height="15.0" fill="rgb(219,224,6)" rx="2" ry="2" />
<text  x="618.95" y="935.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1677" width="35.3" height="15.0" fill="rgb(209,182,17)" rx="2" ry="2" />
<text  x="618.95" y="1687.5" >st..</text>
</g>
<g >
<title>std::__detail::__regex_algo_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, char, std::regex_traits&lt;char&gt;,  (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1949" width="35.3" height="15.0" fill="rgb(242,194,1)" rx="2" ry="2" />
<text  x="543.41" y="1959.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="893" width="35.3" height="15.0" fill="rgb(210,205,28)" rx="2" ry="2" />
<text  x="543.41" y="903.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (158,467 samples, 0.34%)</title><rect x="807.4" y="1997" width="4.0" height="15.0" fill="rgb(210,12,30)" rx="2" ry="2" />
<text  x="810.41" y="2007.5" ></text>
</g>
<g >
<title>try_to_wake_up (184,024 samples, 0.39%)</title><rect x="1177.6" y="1549" width="4.6" height="15.0" fill="rgb(247,165,3)" rx="2" ry="2" />
<text  x="1180.56" y="1559.5" ></text>
</g>
<g >
<title>do_sys_poll (158,467 samples, 0.34%)</title><rect x="807.4" y="1949" width="4.0" height="15.0" fill="rgb(221,229,1)" rx="2" ry="2" />
<text  x="810.41" y="1959.5" ></text>
</g>
<g >
<title>perf_mmap__read_head (282,827 samples, 0.61%)</title><rect x="837.4" y="1981" width="7.2" height="15.0" fill="rgb(238,225,30)" rx="2" ry="2" />
<text  x="840.43" y="1991.5" ></text>
</g>
<g >
<title>__update_load_avg_se (505,424 samples, 1.08%)</title><rect x="753.8" y="1821" width="12.8" height="15.0" fill="rgb(242,135,27)" rx="2" ry="2" />
<text  x="756.84" y="1831.5" ></text>
</g>
<g >
<title>__put_anon_vma (246,581 samples, 0.53%)</title><rect x="651.2" y="1821" width="6.2" height="15.0" fill="rgb(244,194,53)" rx="2" ry="2" />
<text  x="654.21" y="1831.5" ></text>
</g>
<g >
<title>vm_area_free (230,078 samples, 0.49%)</title><rect x="657.4" y="1837" width="5.9" height="15.0" fill="rgb(248,163,39)" rx="2" ry="2" />
<text  x="660.44" y="1847.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (85,181 samples, 0.18%)</title><rect x="781.7" y="1821" width="2.2" height="15.0" fill="rgb(245,225,42)" rx="2" ry="2" />
<text  x="784.73" y="1831.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="2029" width="7.0" height="15.0" fill="rgb(221,58,48)" rx="2" ry="2" />
<text  x="44.97" y="2039.5" ></text>
</g>
<g >
<title>wake_up_process (184,024 samples, 0.39%)</title><rect x="1177.6" y="1773" width="4.6" height="15.0" fill="rgb(242,183,7)" rx="2" ry="2" />
<text  x="1180.56" y="1783.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (261,764 samples, 0.56%)</title><rect x="844.6" y="1741" width="6.6" height="15.0" fill="rgb(237,126,41)" rx="2" ry="2" />
<text  x="847.58" y="1751.5" ></text>
</g>
<g >
<title>put_prev_task_fair (85,347 samples, 0.18%)</title><rect x="792.5" y="1869" width="2.2" height="15.0" fill="rgb(243,140,7)" rx="2" ry="2" />
<text  x="795.55" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1197" width="35.3" height="15.0" fill="rgb(236,91,22)" rx="2" ry="2" />
<text  x="543.41" y="1207.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="781" width="35.3" height="15.0" fill="rgb(235,24,0)" rx="2" ry="2" />
<text  x="618.95" y="791.5" >st..</text>
</g>
<g >
<title>task_tick_fair (82,003 samples, 0.18%)</title><rect x="677.8" y="1677" width="2.1" height="15.0" fill="rgb(251,105,4)" rx="2" ry="2" />
<text  x="680.85" y="1687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1005" width="35.3" height="15.0" fill="rgb(220,184,39)" rx="2" ry="2" />
<text  x="618.95" y="1015.5" >st..</text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (11,721,628 samples, 25.12%)</title><rect x="863.7" y="1965" width="296.4" height="15.0" fill="rgb(206,162,43)" rx="2" ry="2" />
<text  x="866.67" y="1975.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,394,123 samples, 2.99%)</title><rect x="540.4" y="685" width="35.3" height="15.0" fill="rgb(242,7,38)" rx="2" ry="2" />
<text  x="543.41" y="695.5" >st..</text>
</g>
<g >
<title>node::InternalMakeCallback (422,760 samples, 0.91%)</title><rect x="575.7" y="1853" width="10.7" height="15.0" fill="rgb(239,210,39)" rx="2" ry="2" />
<text  x="578.67" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="173" width="35.3" height="15.0" fill="rgb(252,95,20)" rx="2" ry="2" />
<text  x="618.95" y="183.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1885" width="35.3" height="15.0" fill="rgb(244,114,47)" rx="2" ry="2" />
<text  x="618.95" y="1895.5" >st..</text>
</g>
<g >
<title>main (17,192,235 samples, 36.85%)</title><rect x="62.4" y="2061" width="434.8" height="15.0" fill="rgb(221,16,50)" rx="2" ry="2" />
<text  x="65.39" y="2071.5" >main</text>
</g>
<g >
<title>begin_new_exec (955,171 samples, 2.05%)</title><rect x="651.2" y="1917" width="24.2" height="15.0" fill="rgb(207,192,8)" rx="2" ry="2" />
<text  x="654.21" y="1927.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1181" width="35.3" height="15.0" fill="rgb(253,1,54)" rx="2" ry="2" />
<text  x="618.95" y="1191.5" >st..</text>
</g>
<g >
<title>uv__io_poll (422,760 samples, 0.91%)</title><rect x="575.7" y="1981" width="10.7" height="15.0" fill="rgb(228,51,41)" rx="2" ry="2" />
<text  x="578.67" y="1991.5" ></text>
</g>
<g >
<title>enqueue_entity (430,495 samples, 0.92%)</title><rect x="775.2" y="1853" width="10.8" height="15.0" fill="rgb(205,136,37)" rx="2" ry="2" />
<text  x="778.15" y="1863.5" ></text>
</g>
<g >
<title>memcpy_erms (87,080 samples, 0.19%)</title><rect x="790.3" y="1869" width="2.2" height="15.0" fill="rgb(245,45,44)" rx="2" ry="2" />
<text  x="793.34" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="541" width="35.3" height="15.0" fill="rgb(230,203,50)" rx="2" ry="2" />
<text  x="618.95" y="551.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1101" width="35.3" height="15.0" fill="rgb(232,78,32)" rx="2" ry="2" />
<text  x="543.41" y="1111.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="509" width="35.3" height="15.0" fill="rgb(220,210,19)" rx="2" ry="2" />
<text  x="618.95" y="519.5" >st..</text>
</g>
<g >
<title>Watcher::isIgnored (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1981" width="35.3" height="15.0" fill="rgb(250,138,19)" rx="2" ry="2" />
<text  x="543.41" y="1991.5" >Wa..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="877" width="35.3" height="15.0" fill="rgb(209,3,35)" rx="2" ry="2" />
<text  x="618.95" y="887.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1533" width="35.3" height="15.0" fill="rgb(224,117,6)" rx="2" ry="2" />
<text  x="618.95" y="1543.5" >st..</text>
</g>
<g >
<title>__GI___libc_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1965" width="13.8" height="15.0" fill="rgb(239,122,54)" rx="2" ry="2" />
<text  x="847.58" y="1975.5" ></text>
</g>
<g >
<title>__calc_delta (83,819 samples, 0.18%)</title><rect x="745.4" y="1821" width="2.1" height="15.0" fill="rgb(214,114,18)" rx="2" ry="2" />
<text  x="748.38" y="1831.5" ></text>
</g>
<g >
<title>perf_mmap__push (1,109,876 samples, 2.38%)</title><rect x="830.3" y="1997" width="28.1" height="15.0" fill="rgb(210,169,15)" rx="2" ry="2" />
<text  x="833.32" y="2007.5" >p..</text>
</g>
<g >
<title>generic_file_read_iter (249,546 samples, 0.53%)</title><rect x="497.2" y="1949" width="6.3" height="15.0" fill="rgb(210,160,27)" rx="2" ry="2" />
<text  x="500.18" y="1959.5" ></text>
</g>
<g >
<title>unmap_vmas (478,512 samples, 1.03%)</title><rect x="663.3" y="1853" width="12.1" height="15.0" fill="rgb(244,79,8)" rx="2" ry="2" />
<text  x="666.26" y="1863.5" ></text>
</g>
<g >
<title>do_read_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1853" width="7.2" height="15.0" fill="rgb(208,75,38)" rx="2" ry="2" />
<text  x="840.43" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1117" width="35.3" height="15.0" fill="rgb(211,212,39)" rx="2" ry="2" />
<text  x="618.95" y="1127.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1165" width="35.3" height="15.0" fill="rgb(205,95,40)" rx="2" ry="2" />
<text  x="618.95" y="1175.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="429" width="35.3" height="15.0" fill="rgb(205,82,18)" rx="2" ry="2" />
<text  x="618.95" y="439.5" >st..</text>
</g>
<g >
<title>__x64_sys_execve (955,171 samples, 2.05%)</title><rect x="651.2" y="2029" width="24.2" height="15.0" fill="rgb(217,142,25)" rx="2" ry="2" />
<text  x="654.21" y="2039.5" >_..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="605" width="35.3" height="15.0" fill="rgb(210,101,18)" rx="2" ry="2" />
<text  x="618.95" y="615.5" >st..</text>
</g>
<g >
<title>pick_next_task (531,389 samples, 1.14%)</title><rect x="522.6" y="1997" width="13.4" height="15.0" fill="rgb(227,111,18)" rx="2" ry="2" />
<text  x="525.56" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="237" width="35.3" height="15.0" fill="rgb(249,157,29)" rx="2" ry="2" />
<text  x="618.95" y="247.5" >st..</text>
</g>
<g >
<title>__schedule (174,153 samples, 0.37%)</title><rect x="536.0" y="2013" width="4.4" height="15.0" fill="rgb(242,70,7)" rx="2" ry="2" />
<text  x="539.00" y="2023.5" ></text>
</g>
<g >
<title>process_synthesized_event (542,104 samples, 1.16%)</title><rect x="811.4" y="1981" width="13.7" height="15.0" fill="rgb(217,217,39)" rx="2" ry="2" />
<text  x="814.41" y="1991.5" ></text>
</g>
<g >
<title>xas_load (242,364 samples, 0.52%)</title><rect x="503.5" y="1869" width="6.1" height="15.0" fill="rgb(242,85,41)" rx="2" ry="2" />
<text  x="506.49" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1245" width="35.3" height="15.0" fill="rgb(223,222,35)" rx="2" ry="2" />
<text  x="618.95" y="1255.5" >st..</text>
</g>
<g >
<title>[perf-273006.map] (216,083 samples, 0.46%)</title><rect x="580.9" y="1677" width="5.5" height="15.0" fill="rgb(213,190,19)" rx="2" ry="2" />
<text  x="583.89" y="1687.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (955,171 samples, 2.05%)</title><rect x="651.2" y="1981" width="24.2" height="15.0" fill="rgb(206,215,22)" rx="2" ry="2" />
<text  x="654.21" y="1991.5" >b..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1085" width="35.3" height="15.0" fill="rgb(231,197,8)" rx="2" ry="2" />
<text  x="618.95" y="1095.5" >st..</text>
</g>
<g >
<title>new_sync_read (249,546 samples, 0.53%)</title><rect x="497.2" y="1981" width="6.3" height="15.0" fill="rgb(208,95,20)" rx="2" ry="2" />
<text  x="500.18" y="1991.5" ></text>
</g>
<g >
<title>InotifyBackend::start (1,394,123 samples, 2.99%)</title><rect x="540.4" y="2045" width="35.3" height="15.0" fill="rgb(236,30,8)" rx="2" ry="2" />
<text  x="543.41" y="2055.5" >In..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1917" width="35.3" height="15.0" fill="rgb(210,85,49)" rx="2" ry="2" />
<text  x="618.95" y="1927.5" >st..</text>
</g>
<g >
<title>__sched_setaffinity (3,628,552 samples, 7.78%)</title><rect x="715.6" y="1917" width="91.8" height="15.0" fill="rgb(237,223,36)" rx="2" ry="2" />
<text  x="718.64" y="1927.5" >__sched_se..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1149" width="35.3" height="15.0" fill="rgb(247,209,47)" rx="2" ry="2" />
<text  x="543.41" y="1159.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="749" width="35.3" height="15.0" fill="rgb(244,118,47)" rx="2" ry="2" />
<text  x="618.95" y="759.5" >st..</text>
</g>
<g >
<title>__update_load_avg_se (85,324 samples, 0.18%)</title><rect x="783.9" y="1821" width="2.1" height="15.0" fill="rgb(245,162,22)" rx="2" ry="2" />
<text  x="786.88" y="1831.5" ></text>
</g>
<g >
<title>__cxa_finalize (464,550 samples, 1.00%)</title><rect x="23.8" y="2061" width="11.7" height="15.0" fill="rgb(219,180,37)" rx="2" ry="2" />
<text  x="26.76" y="2071.5" ></text>
</g>
<g >
<title>run_builtin (7,236,967 samples, 15.51%)</title><rect x="675.4" y="2045" width="183.0" height="15.0" fill="rgb(234,31,46)" rx="2" ry="2" />
<text  x="678.36" y="2055.5" >run_builtin</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="733" width="35.3" height="15.0" fill="rgb(221,223,1)" rx="2" ry="2" />
<text  x="618.95" y="743.5" >st..</text>
</g>
<g >
<title>usb_hcd_unmap_urb_for_dma (208,702 samples, 0.45%)</title><rect x="858.4" y="1821" width="5.3" height="15.0" fill="rgb(234,61,24)" rx="2" ry="2" />
<text  x="861.39" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1965" width="35.3" height="15.0" fill="rgb(213,45,45)" rx="2" ry="2" />
<text  x="618.95" y="1975.5" >st..</text>
</g>
<g >
<title>uv__stream_io (422,760 samples, 0.91%)</title><rect x="575.7" y="1965" width="10.7" height="15.0" fill="rgb(233,177,32)" rx="2" ry="2" />
<text  x="578.67" y="1975.5" ></text>
</g>
<g >
<title>put_prev_entity (85,347 samples, 0.18%)</title><rect x="792.5" y="1853" width="2.2" height="15.0" fill="rgb(227,47,38)" rx="2" ry="2" />
<text  x="795.55" y="1863.5" ></text>
</g>
<g >
<title>new_sync_read (242,364 samples, 0.52%)</title><rect x="503.5" y="1965" width="6.1" height="15.0" fill="rgb(239,211,16)" rx="2" ry="2" />
<text  x="506.49" y="1975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (242,364 samples, 0.52%)</title><rect x="503.5" y="2045" width="6.1" height="15.0" fill="rgb(217,42,46)" rx="2" ry="2" />
<text  x="506.49" y="2055.5" ></text>
</g>
<g >
<title>__bitmap_intersects (83,290 samples, 0.18%)</title><rect x="803.4" y="1885" width="2.1" height="15.0" fill="rgb(216,60,45)" rx="2" ry="2" />
<text  x="806.39" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="589" width="35.3" height="15.0" fill="rgb(253,214,45)" rx="2" ry="2" />
<text  x="618.95" y="599.5" >st..</text>
</g>
<g >
<title>update_curr (167,861 samples, 0.36%)</title><rect x="743.3" y="1837" width="4.2" height="15.0" fill="rgb(240,51,18)" rx="2" ry="2" />
<text  x="746.25" y="1847.5" ></text>
</g>
<g >
<title>try_to_wake_up (184,024 samples, 0.39%)</title><rect x="1177.6" y="1757" width="4.6" height="15.0" fill="rgb(222,42,34)" rx="2" ry="2" />
<text  x="1180.56" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1741" width="35.3" height="15.0" fill="rgb(209,164,34)" rx="2" ry="2" />
<text  x="618.95" y="1751.5" >st..</text>
</g>
<g >
<title>filemap_get_pages (242,364 samples, 0.52%)</title><rect x="503.5" y="1901" width="6.1" height="15.0" fill="rgb(228,159,22)" rx="2" ry="2" />
<text  x="506.49" y="1911.5" ></text>
</g>
<g >
<title>filemap_read (249,546 samples, 0.53%)</title><rect x="497.2" y="1933" width="6.3" height="15.0" fill="rgb(236,66,14)" rx="2" ry="2" />
<text  x="500.18" y="1943.5" ></text>
</g>
<g >
<title>Glob::isIgnored (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1965" width="35.3" height="15.0" fill="rgb(208,96,46)" rx="2" ry="2" />
<text  x="543.41" y="1975.5" >Gl..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="797" width="35.3" height="15.0" fill="rgb(241,212,12)" rx="2" ry="2" />
<text  x="618.95" y="807.5" >st..</text>
</g>
<g >
<title>do_idle (491,780 samples, 1.05%)</title><rect x="1177.6" y="1965" width="12.4" height="15.0" fill="rgb(249,80,14)" rx="2" ry="2" />
<text  x="1180.56" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="301" width="35.3" height="15.0" fill="rgb(245,121,7)" rx="2" ry="2" />
<text  x="618.95" y="311.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1741" width="35.3" height="15.0" fill="rgb(208,128,38)" rx="2" ry="2" />
<text  x="543.41" y="1751.5" >st..</text>
</g>
<g >
<title>__x64_sys_write (545,942 samples, 1.17%)</title><rect x="844.6" y="1917" width="13.8" height="15.0" fill="rgb(232,130,34)" rx="2" ry="2" />
<text  x="847.58" y="1927.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (282,827 samples, 0.61%)</title><rect x="837.4" y="1965" width="7.2" height="15.0" fill="rgb(212,26,20)" rx="2" ry="2" />
<text  x="840.43" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1693" width="35.3" height="15.0" fill="rgb(244,175,47)" rx="2" ry="2" />
<text  x="618.95" y="1703.5" >st..</text>
</g>
<g >
<title>__softirqentry_text_start (208,702 samples, 0.45%)</title><rect x="858.4" y="1917" width="5.3" height="15.0" fill="rgb(235,56,7)" rx="2" ry="2" />
<text  x="861.39" y="1927.5" ></text>
</g>
<g >
<title>ext4_buffered_write_iter (542,104 samples, 1.16%)</title><rect x="811.4" y="1837" width="13.7" height="15.0" fill="rgb(206,86,5)" rx="2" ry="2" />
<text  x="814.41" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="829" width="35.3" height="15.0" fill="rgb(230,133,40)" rx="2" ry="2" />
<text  x="543.41" y="839.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="909" width="35.3" height="15.0" fill="rgb(244,63,6)" rx="2" ry="2" />
<text  x="618.95" y="919.5" >st..</text>
</g>
<g >
<title>usb_giveback_urb_bh (208,702 samples, 0.45%)</title><rect x="858.4" y="1869" width="5.3" height="15.0" fill="rgb(223,88,21)" rx="2" ry="2" />
<text  x="861.39" y="1879.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (13,112,206 samples, 28.10%)</title><rect x="858.4" y="2077" width="331.6" height="15.0" fill="rgb(215,83,30)" rx="2" ry="2" />
<text  x="861.39" y="2087.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (545,942 samples, 1.17%)</title><rect x="844.6" y="1949" width="13.8" height="15.0" fill="rgb(240,44,45)" rx="2" ry="2" />
<text  x="847.58" y="1959.5" ></text>
</g>
<g >
<title>exc_page_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="2013" width="7.0" height="15.0" fill="rgb(207,35,41)" rx="2" ry="2" />
<text  x="44.97" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1789" width="35.3" height="15.0" fill="rgb(212,191,26)" rx="2" ry="2" />
<text  x="543.41" y="1799.5" >st..</text>
</g>
<g >
<title>handle_pte_fault (279,495 samples, 0.60%)</title><rect x="42.0" y="1949" width="7.0" height="15.0" fill="rgb(229,199,19)" rx="2" ry="2" />
<text  x="44.97" y="1959.5" ></text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (422,760 samples, 0.91%)</title><rect x="575.7" y="1885" width="10.7" height="15.0" fill="rgb(234,99,9)" rx="2" ry="2" />
<text  x="578.67" y="1895.5" ></text>
</g>
<g >
<title>swapper (13,112,206 samples, 28.10%)</title><rect x="858.4" y="2093" width="331.6" height="15.0" fill="rgb(244,194,20)" rx="2" ry="2" />
<text  x="861.39" y="2103.5" >swapper</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="1933" width="35.3" height="15.0" fill="rgb(210,174,46)" rx="2" ry="2" />
<text  x="618.95" y="1943.5" >st..</text>
</g>
<g >
<title>load_new_mm_cr3 (465,147 samples, 1.00%)</title><rect x="1165.8" y="1965" width="11.8" height="15.0" fill="rgb(246,19,41)" rx="2" ry="2" />
<text  x="1168.80" y="1975.5" ></text>
</g>
<g >
<title>load_elf_binary (955,171 samples, 2.05%)</title><rect x="651.2" y="1933" width="24.2" height="15.0" fill="rgb(217,5,49)" rx="2" ry="2" />
<text  x="654.21" y="1943.5" >l..</text>
</g>
<g >
<title>__x86_indirect_thunk_rax (170,836 samples, 0.37%)</title><rect x="796.9" y="1885" width="4.3" height="15.0" fill="rgb(233,12,41)" rx="2" ry="2" />
<text  x="799.92" y="1895.5" ></text>
</g>
<g >
<title>event_function_call (1,301,204 samples, 2.79%)</title><rect x="677.8" y="1869" width="33.0" height="15.0" fill="rgb(244,122,2)" rx="2" ry="2" />
<text  x="680.85" y="1879.5" >ev..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="701" width="35.3" height="15.0" fill="rgb(228,12,46)" rx="2" ry="2" />
<text  x="618.95" y="711.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="540.4" y="1453" width="35.3" height="15.0" fill="rgb(210,51,8)" rx="2" ry="2" />
<text  x="543.41" y="1463.5" >st..</text>
</g>
<g >
<title>hrtimer_interrupt (82,003 samples, 0.18%)</title><rect x="677.8" y="1773" width="2.1" height="15.0" fill="rgb(248,72,0)" rx="2" ry="2" />
<text  x="680.85" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,394,123 samples, 2.99%)</title><rect x="615.9" y="445" width="35.3" height="15.0" fill="rgb(222,143,53)" rx="2" ry="2" />
<text  x="618.95" y="455.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (205,434 samples, 0.44%)</title><rect x="825.1" y="1981" width="5.2" height="15.0" fill="rgb(227,103,33)" rx="2" ry="2" />
<text  x="828.12" y="1991.5" ></text>
</g>
<g >
<title>dbs_update_util_handler (84,603 samples, 0.18%)</title><rect x="766.6" y="1821" width="2.2" height="15.0" fill="rgb(238,132,24)" rx="2" ry="2" />
<text  x="769.62" y="1831.5" ></text>
</g>
</g>
</svg>
