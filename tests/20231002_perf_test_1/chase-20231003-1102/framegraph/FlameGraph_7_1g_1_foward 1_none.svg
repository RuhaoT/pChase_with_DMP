<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2158" onload="init(evt)" viewBox="0 0 1200 2158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="2158.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >FlameGraph_7_1g_1_foward 1_none</text>
<text id="subtitle" x="600.00" y="48" >Count:7_ChainSize:1g_Thread:1_Access:foward 1_Prefetch:none</text>
<text id="details" x="10.00" y="2141" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="2141" > </text>
<g id="frames">
<g >
<title>v8::internal::Factory::AllocateRaw (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1357" width="28.3" height="15.0" fill="rgb(246,204,32)" rx="2" ry="2" />
<text  x="514.17" y="1367.5" >v8..</text>
</g>
<g >
<title>node::(anonymous namespace)::CompressionStream&lt;node::(anonymous namespace)::ZlibContext&gt;::AfterThreadPoolWork (188,389 samples, 0.39%)</title><rect x="483.1" y="1917" width="4.5" height="15.0" fill="rgb(254,195,44)" rx="2" ry="2" />
<text  x="486.07" y="1927.5" ></text>
</g>
<g >
<title>Builtins_BaselineOutOfLinePrologue (207,940 samples, 0.43%)</title><rect x="506.1" y="1517" width="5.1" height="15.0" fill="rgb(240,141,52)" rx="2" ry="2" />
<text  x="509.13" y="1527.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (435,851 samples, 0.90%)</title><rect x="443.0" y="2029" width="10.6" height="15.0" fill="rgb(214,131,15)" rx="2" ry="2" />
<text  x="445.98" y="2039.5" ></text>
</g>
<g >
<title>memcg_slab_free_hook (207,352 samples, 0.43%)</title><rect x="769.7" y="1821" width="5.0" height="15.0" fill="rgb(215,109,51)" rx="2" ry="2" />
<text  x="772.66" y="1831.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (435,851 samples, 0.90%)</title><rect x="443.0" y="2045" width="10.6" height="15.0" fill="rgb(245,47,4)" rx="2" ry="2" />
<text  x="445.98" y="2055.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (1,403,486 samples, 2.89%)</title><rect x="649.4" y="1949" width="34.0" height="15.0" fill="rgb(232,153,6)" rx="2" ry="2" />
<text  x="652.37" y="1959.5" >__..</text>
</g>
<g >
<title>update_load_avg (419,588 samples, 0.86%)</title><rect x="723.6" y="1837" width="10.1" height="15.0" fill="rgb(229,155,3)" rx="2" ry="2" />
<text  x="726.56" y="1847.5" ></text>
</g>
<g >
<title>hrtimer_start_range_ns (183,154 samples, 0.38%)</title><rect x="1174.6" y="1965" width="4.4" height="15.0" fill="rgb(220,140,8)" rx="2" ry="2" />
<text  x="1177.57" y="1975.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (188,389 samples, 0.39%)</title><rect x="483.1" y="1789" width="4.5" height="15.0" fill="rgb(214,23,5)" rx="2" ry="2" />
<text  x="486.07" y="1799.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1661" width="33.4" height="15.0" fill="rgb(223,165,40)" rx="2" ry="2" />
<text  x="509.13" y="1671.5" >[p..</text>
</g>
<g >
<title>remote_function (1,266,455 samples, 2.60%)</title><rect x="652.7" y="1821" width="30.7" height="15.0" fill="rgb(248,54,27)" rx="2" ry="2" />
<text  x="655.69" y="1831.5" >re..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1693" width="33.4" height="15.0" fill="rgb(253,166,38)" rx="2" ry="2" />
<text  x="509.13" y="1703.5" >[p..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (207,352 samples, 0.43%)</title><rect x="769.7" y="1949" width="5.0" height="15.0" fill="rgb(215,111,52)" rx="2" ry="2" />
<text  x="772.66" y="1959.5" ></text>
</g>
<g >
<title>v8::internal::PagedSpace::AddPage (242,503 samples, 0.50%)</title><rect x="528.4" y="1101" width="5.9" height="15.0" fill="rgb(212,122,14)" rx="2" ry="2" />
<text  x="531.39" y="1111.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1565" width="28.3" height="15.0" fill="rgb(220,213,30)" rx="2" ry="2" />
<text  x="514.17" y="1575.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1293" width="34.0" height="15.0" fill="rgb(218,104,13)" rx="2" ry="2" />
<text  x="576.59" y="1303.5" >st..</text>
</g>
<g >
<title>__x64_sys_epoll_wait (175,887 samples, 0.36%)</title><rect x="478.8" y="1933" width="4.3" height="15.0" fill="rgb(253,54,47)" rx="2" ry="2" />
<text  x="481.80" y="1943.5" ></text>
</g>
<g >
<title>v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1325" width="28.3" height="15.0" fill="rgb(221,212,27)" rx="2" ry="2" />
<text  x="514.17" y="1335.5" >v8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="221" width="34.0" height="15.0" fill="rgb(232,222,46)" rx="2" ry="2" />
<text  x="576.59" y="231.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1069" width="34.0" height="15.0" fill="rgb(208,183,21)" rx="2" ry="2" />
<text  x="576.59" y="1079.5" >st..</text>
</g>
<g >
<title>load_elf_binary (176,965 samples, 0.36%)</title><rect x="630.3" y="1853" width="4.3" height="15.0" fill="rgb(224,117,15)" rx="2" ry="2" />
<text  x="633.33" y="1863.5" ></text>
</g>
<g >
<title>kworker/20:2-ev (97,058 samples, 0.20%)</title><rect x="440.6" y="2093" width="2.4" height="15.0" fill="rgb(232,35,4)" rx="2" ry="2" />
<text  x="443.63" y="2103.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="109" width="34.0" height="15.0" fill="rgb(236,146,11)" rx="2" ry="2" />
<text  x="576.59" y="119.5" >st..</text>
</g>
<g >
<title>do_idle (14,140,122 samples, 29.08%)</title><rect x="840.3" y="2029" width="343.1" height="15.0" fill="rgb(236,189,3)" rx="2" ry="2" />
<text  x="843.30" y="2039.5" >do_idle</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1725" width="34.0" height="15.0" fill="rgb(239,133,17)" rx="2" ry="2" />
<text  x="576.59" y="1735.5" >st..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (42,868 samples, 0.09%)</title><rect x="651.7" y="1821" width="1.0" height="15.0" fill="rgb(237,82,51)" rx="2" ry="2" />
<text  x="654.65" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="461" width="34.0" height="15.0" fill="rgb(223,98,15)" rx="2" ry="2" />
<text  x="576.59" y="471.5" >st..</text>
</g>
<g >
<title>do_syscall_64 (107,666 samples, 0.22%)</title><rect x="438.0" y="2029" width="2.6" height="15.0" fill="rgb(222,14,47)" rx="2" ry="2" />
<text  x="441.02" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="477" width="34.0" height="15.0" fill="rgb(215,62,37)" rx="2" ry="2" />
<text  x="576.59" y="487.5" >st..</text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (3,320,210 samples, 6.83%)</title><rect x="685.2" y="1901" width="80.6" height="15.0" fill="rgb(235,7,13)" rx="2" ry="2" />
<text  x="688.22" y="1911.5" >__set_cpu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1245" width="34.0" height="15.0" fill="rgb(232,19,11)" rx="2" ry="2" />
<text  x="576.59" y="1255.5" >st..</text>
</g>
<g >
<title>__close (207,352 samples, 0.43%)</title><rect x="769.7" y="1997" width="5.0" height="15.0" fill="rgb(219,197,49)" rx="2" ry="2" />
<text  x="772.66" y="2007.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (188,389 samples, 0.39%)</title><rect x="483.1" y="1885" width="4.5" height="15.0" fill="rgb(238,62,42)" rx="2" ry="2" />
<text  x="486.07" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1085" width="34.0" height="15.0" fill="rgb(254,20,23)" rx="2" ry="2" />
<text  x="576.59" y="1095.5" >st..</text>
</g>
<g >
<title>update_process_times (42,868 samples, 0.09%)</title><rect x="651.7" y="1709" width="1.0" height="15.0" fill="rgb(232,72,53)" rx="2" ry="2" />
<text  x="654.65" y="1719.5" ></text>
</g>
<g >
<title>v8::internal::Runtime_CompileTurbofan_Concurrent (183,123 samples, 0.38%)</title><rect x="501.7" y="1677" width="4.4" height="15.0" fill="rgb(246,174,10)" rx="2" ry="2" />
<text  x="504.68" y="1687.5" ></text>
</g>
<g >
<title>begin_new_exec (826,107 samples, 1.70%)</title><rect x="610.3" y="1917" width="20.0" height="15.0" fill="rgb(254,153,31)" rx="2" ry="2" />
<text  x="613.28" y="1927.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1757" width="33.4" height="15.0" fill="rgb(251,75,11)" rx="2" ry="2" />
<text  x="509.13" y="1767.5" >[p..</text>
</g>
<g >
<title>node::StreamBase::CallJSOnreadMethod (522,029 samples, 1.07%)</title><rect x="493.5" y="1885" width="12.6" height="15.0" fill="rgb(207,181,37)" rx="2" ry="2" />
<text  x="496.46" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="269" width="34.0" height="15.0" fill="rgb(252,219,16)" rx="2" ry="2" />
<text  x="576.59" y="279.5" >st..</text>
</g>
<g >
<title>x86_64_start_reservations (270,598 samples, 0.56%)</title><rect x="1183.4" y="2045" width="6.6" height="15.0" fill="rgb(209,8,8)" rx="2" ry="2" />
<text  x="1186.43" y="2055.5" ></text>
</g>
<g >
<title>cmd_record (176,965 samples, 0.36%)</title><rect x="630.3" y="2029" width="4.3" height="15.0" fill="rgb(208,27,24)" rx="2" ry="2" />
<text  x="633.33" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="509" width="34.0" height="15.0" fill="rgb(222,186,1)" rx="2" ry="2" />
<text  x="576.59" y="519.5" >st..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (338,906 samples, 0.70%)</title><rect x="493.5" y="1789" width="8.2" height="15.0" fill="rgb(221,136,14)" rx="2" ry="2" />
<text  x="496.46" y="1799.5" ></text>
</g>
<g >
<title>do_anonymous_page (217,015 samples, 0.45%)</title><rect x="534.3" y="1101" width="5.2" height="15.0" fill="rgb(213,222,52)" rx="2" ry="2" />
<text  x="537.28" y="1111.5" ></text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::RunMicrotasks (188,389 samples, 0.39%)</title><rect x="483.1" y="1693" width="4.5" height="15.0" fill="rgb(206,6,43)" rx="2" ry="2" />
<text  x="486.07" y="1703.5" ></text>
</g>
<g >
<title>start_secondary (14,140,122 samples, 29.08%)</title><rect x="840.3" y="2061" width="343.1" height="15.0" fill="rgb(213,70,36)" rx="2" ry="2" />
<text  x="843.30" y="2071.5" >start_secondary</text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1645" width="4.4" height="15.0" fill="rgb(231,216,37)" rx="2" ry="2" />
<text  x="496.46" y="1655.5" ></text>
</g>
<g >
<title>ret_from_fork (517,110 samples, 1.06%)</title><rect x="466.3" y="2077" width="12.5" height="15.0" fill="rgb(213,111,35)" rx="2" ry="2" />
<text  x="469.26" y="2087.5" ></text>
</g>
<g >
<title>__sched_setaffinity (3,479,599 samples, 7.16%)</title><rect x="685.2" y="1917" width="84.5" height="15.0" fill="rgb(236,40,22)" rx="2" ry="2" />
<text  x="688.22" y="1927.5" >__sched_s..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (826,107 samples, 1.70%)</title><rect x="610.3" y="2013" width="20.0" height="15.0" fill="rgb(234,41,23)" rx="2" ry="2" />
<text  x="613.28" y="2023.5" ></text>
</g>
<g >
<title>reweight_entity (82,652 samples, 0.17%)</title><rect x="719.6" y="1821" width="2.0" height="15.0" fill="rgb(243,149,5)" rx="2" ry="2" />
<text  x="722.57" y="1831.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1485" width="28.3" height="15.0" fill="rgb(235,184,37)" rx="2" ry="2" />
<text  x="514.17" y="1495.5" >Bu..</text>
</g>
<g >
<title>uv__run_timers (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1981" width="33.4" height="15.0" fill="rgb(206,168,19)" rx="2" ry="2" />
<text  x="509.13" y="1991.5" >uv..</text>
</g>
<g >
<title>tick_sched_handle (42,868 samples, 0.09%)</title><rect x="651.7" y="1725" width="1.0" height="15.0" fill="rgb(209,205,15)" rx="2" ry="2" />
<text  x="654.65" y="1735.5" ></text>
</g>
<g >
<title>__schedule (523,165 samples, 1.08%)</title><rect x="453.6" y="2013" width="12.7" height="15.0" fill="rgb(242,134,1)" rx="2" ry="2" />
<text  x="456.56" y="2023.5" ></text>
</g>
<g >
<title>menu_reflect (202,673 samples, 0.42%)</title><rect x="1169.7" y="1997" width="4.9" height="15.0" fill="rgb(238,159,15)" rx="2" ry="2" />
<text  x="1172.65" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1597" width="34.0" height="15.0" fill="rgb(247,103,36)" rx="2" ry="2" />
<text  x="576.59" y="1607.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1181" width="34.0" height="15.0" fill="rgb(232,195,9)" rx="2" ry="2" />
<text  x="576.59" y="1191.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1357" width="34.0" height="15.0" fill="rgb(228,24,34)" rx="2" ry="2" />
<text  x="576.59" y="1367.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="685" width="34.0" height="15.0" fill="rgb(227,90,19)" rx="2" ry="2" />
<text  x="576.59" y="695.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="365" width="34.0" height="15.0" fill="rgb(244,179,31)" rx="2" ry="2" />
<text  x="576.59" y="375.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1757" width="34.0" height="15.0" fill="rgb(208,8,44)" rx="2" ry="2" />
<text  x="576.59" y="1767.5" >st..</text>
</g>
<g >
<title>[[vdso]] (7,664,518 samples, 15.76%)</title><rect x="220.2" y="2013" width="186.0" height="15.0" fill="rgb(222,197,8)" rx="2" ry="2" />
<text  x="223.24" y="2023.5" >[[vdso]]</text>
</g>
<g >
<title>v8::internal::MicrotaskQueue::PerformCheckpoint (188,389 samples, 0.39%)</title><rect x="483.1" y="1709" width="4.5" height="15.0" fill="rgb(215,195,6)" rx="2" ry="2" />
<text  x="486.07" y="1719.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (522,029 samples, 1.07%)</title><rect x="493.5" y="1869" width="12.6" height="15.0" fill="rgb(206,217,3)" rx="2" ry="2" />
<text  x="496.46" y="1879.5" ></text>
</g>
<g >
<title>sched_setaffinity (175,914 samples, 0.36%)</title><rect x="634.6" y="1933" width="4.3" height="15.0" fill="rgb(220,160,12)" rx="2" ry="2" />
<text  x="637.62" y="1943.5" ></text>
</g>
<g >
<title>__fput (436,883 samples, 0.90%)</title><rect x="427.4" y="1965" width="10.6" height="15.0" fill="rgb(226,153,39)" rx="2" ry="2" />
<text  x="430.41" y="1975.5" ></text>
</g>
<g >
<title>__GI___execve (826,107 samples, 1.70%)</title><rect x="610.3" y="2077" width="20.0" height="15.0" fill="rgb(214,84,12)" rx="2" ry="2" />
<text  x="613.28" y="2087.5" ></text>
</g>
<g >
<title>do_syscall_64 (176,965 samples, 0.36%)</title><rect x="630.3" y="1965" width="4.3" height="15.0" fill="rgb(237,84,27)" rx="2" ry="2" />
<text  x="633.33" y="1975.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::HandleApiCallHelper&lt;false&gt; (188,389 samples, 0.39%)</title><rect x="483.1" y="1725" width="4.5" height="15.0" fill="rgb(239,80,0)" rx="2" ry="2" />
<text  x="486.07" y="1735.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1981" width="34.0" height="15.0" fill="rgb(209,94,39)" rx="2" ry="2" />
<text  x="576.59" y="1991.5" >st..</text>
</g>
<g >
<title>scheduler_tick (42,868 samples, 0.09%)</title><rect x="651.7" y="1693" width="1.0" height="15.0" fill="rgb(240,118,24)" rx="2" ry="2" />
<text  x="654.65" y="1703.5" ></text>
</g>
<g >
<title>do_user_addr_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1165" width="5.2" height="15.0" fill="rgb(215,196,37)" rx="2" ry="2" />
<text  x="537.28" y="1175.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1453" width="34.0" height="15.0" fill="rgb(248,40,5)" rx="2" ry="2" />
<text  x="576.59" y="1463.5" >st..</text>
</g>
<g >
<title>psi_group_change (133,601 samples, 0.27%)</title><rect x="754.3" y="1789" width="3.3" height="15.0" fill="rgb(224,139,44)" rx="2" ry="2" />
<text  x="757.34" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="2029" width="34.0" height="15.0" fill="rgb(209,118,30)" rx="2" ry="2" />
<text  x="576.59" y="2039.5" >st..</text>
</g>
<g >
<title>__x64_sys_write (548,372 samples, 1.13%)</title><rect x="788.3" y="1917" width="13.3" height="15.0" fill="rgb(210,70,13)" rx="2" ry="2" />
<text  x="791.26" y="1927.5" ></text>
</g>
<g >
<title>do_epoll_wait (175,887 samples, 0.36%)</title><rect x="478.8" y="1917" width="4.3" height="15.0" fill="rgb(221,23,50)" rx="2" ry="2" />
<text  x="481.80" y="1927.5" ></text>
</g>
<g >
<title>update_cfs_group (503,232 samples, 1.03%)</title><rect x="709.4" y="1837" width="12.2" height="15.0" fill="rgb(225,216,51)" rx="2" ry="2" />
<text  x="712.37" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="413" width="34.0" height="15.0" fill="rgb(219,76,29)" rx="2" ry="2" />
<text  x="576.59" y="423.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (175,887 samples, 0.36%)</title><rect x="478.8" y="1965" width="4.3" height="15.0" fill="rgb(226,200,31)" rx="2" ry="2" />
<text  x="481.80" y="1975.5" ></text>
</g>
<g >
<title>__schedule (175,887 samples, 0.36%)</title><rect x="478.8" y="1837" width="4.3" height="15.0" fill="rgb(246,189,46)" rx="2" ry="2" />
<text  x="481.80" y="1847.5" ></text>
</g>
<g >
<title>migration_cpu_stop (517,110 samples, 1.06%)</title><rect x="466.3" y="2013" width="12.5" height="15.0" fill="rgb(242,211,19)" rx="2" ry="2" />
<text  x="469.26" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1565" width="34.0" height="15.0" fill="rgb(229,175,28)" rx="2" ry="2" />
<text  x="576.59" y="1575.5" >st..</text>
</g>
<g >
<title>newidle_balance (97,058 samples, 0.20%)</title><rect x="440.6" y="1965" width="2.4" height="15.0" fill="rgb(251,0,23)" rx="2" ry="2" />
<text  x="443.63" y="1975.5" ></text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1773" width="4.5" height="15.0" fill="rgb(217,205,27)" rx="2" ry="2" />
<text  x="486.07" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="541" width="34.0" height="15.0" fill="rgb(240,155,50)" rx="2" ry="2" />
<text  x="576.59" y="551.5" >st..</text>
</g>
<g >
<title>cpuidle_idle_call (270,598 samples, 0.56%)</title><rect x="1183.4" y="1949" width="6.6" height="15.0" fill="rgb(222,225,34)" rx="2" ry="2" />
<text  x="1186.43" y="1959.5" ></text>
</g>
<g >
<title>detach_entity_cfs_rq (435,851 samples, 0.90%)</title><rect x="443.0" y="1949" width="10.6" height="15.0" fill="rgb(245,204,17)" rx="2" ry="2" />
<text  x="445.98" y="1959.5" ></text>
</g>
<g >
<title>__x64_sys_pselect6 (107,666 samples, 0.22%)</title><rect x="438.0" y="2013" width="2.6" height="15.0" fill="rgb(237,73,2)" rx="2" ry="2" />
<text  x="441.02" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="637" width="34.0" height="15.0" fill="rgb(218,165,25)" rx="2" ry="2" />
<text  x="576.59" y="647.5" >st..</text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (97,058 samples, 0.20%)</title><rect x="440.6" y="1917" width="2.4" height="15.0" fill="rgb(210,158,42)" rx="2" ry="2" />
<text  x="443.63" y="1927.5" ></text>
</g>
<g >
<title>sched_clock (175,887 samples, 0.36%)</title><rect x="478.8" y="1725" width="4.3" height="15.0" fill="rgb(211,27,24)" rx="2" ry="2" />
<text  x="481.80" y="1735.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (14,140,122 samples, 29.08%)</title><rect x="840.3" y="2013" width="343.1" height="15.0" fill="rgb(219,86,15)" rx="2" ry="2" />
<text  x="843.30" y="2023.5" >cpuidle_idle_call</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="173" width="34.0" height="15.0" fill="rgb(233,158,38)" rx="2" ry="2" />
<text  x="576.59" y="183.5" >st..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1581" width="33.4" height="15.0" fill="rgb(219,122,33)" rx="2" ry="2" />
<text  x="509.13" y="1591.5" >[p..</text>
</g>
<g >
<title>bprm_execve.part.0 (826,107 samples, 1.70%)</title><rect x="610.3" y="1981" width="20.0" height="15.0" fill="rgb(220,19,25)" rx="2" ry="2" />
<text  x="613.28" y="1991.5" ></text>
</g>
<g >
<title>kthread (517,110 samples, 1.06%)</title><rect x="466.3" y="2061" width="12.5" height="15.0" fill="rgb(253,224,2)" rx="2" ry="2" />
<text  x="469.26" y="2071.5" ></text>
</g>
<g >
<title>load_balance (523,165 samples, 1.08%)</title><rect x="453.6" y="1933" width="12.7" height="15.0" fill="rgb(232,222,53)" rx="2" ry="2" />
<text  x="456.56" y="1943.5" ></text>
</g>
<g >
<title>[unknown] (107,666 samples, 0.22%)</title><rect x="438.0" y="2077" width="2.6" height="15.0" fill="rgb(236,32,10)" rx="2" ry="2" />
<text  x="441.02" y="2087.5" ></text>
</g>
<g >
<title>exit_mmap (826,107 samples, 1.70%)</title><rect x="610.3" y="1869" width="20.0" height="15.0" fill="rgb(235,71,24)" rx="2" ry="2" />
<text  x="613.28" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="669" width="34.0" height="15.0" fill="rgb(241,196,35)" rx="2" ry="2" />
<text  x="576.59" y="679.5" >st..</text>
</g>
<g >
<title>v8::internal::Execution::Call (188,389 samples, 0.39%)</title><rect x="483.1" y="1837" width="4.5" height="15.0" fill="rgb(252,212,40)" rx="2" ry="2" />
<text  x="486.07" y="1847.5" ></text>
</g>
<g >
<title>v8::internal::Heap::CollectGarbage (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1309" width="28.3" height="15.0" fill="rgb(206,140,13)" rx="2" ry="2" />
<text  x="514.17" y="1319.5" >v8..</text>
</g>
<g >
<title>[perf-273018.map] (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1501" width="28.3" height="15.0" fill="rgb(234,196,40)" rx="2" ry="2" />
<text  x="514.17" y="1511.5" >[p..</text>
</g>
<g >
<title>psi_group_change (175,914 samples, 0.36%)</title><rect x="634.6" y="1789" width="4.3" height="15.0" fill="rgb(244,160,25)" rx="2" ry="2" />
<text  x="637.62" y="1799.5" ></text>
</g>
<g >
<title>kthread (523,165 samples, 1.08%)</title><rect x="453.6" y="2061" width="12.7" height="15.0" fill="rgb(224,158,30)" rx="2" ry="2" />
<text  x="456.56" y="2071.5" ></text>
</g>
<g >
<title>find_busiest_group (97,058 samples, 0.20%)</title><rect x="440.6" y="1933" width="2.4" height="15.0" fill="rgb(216,160,11)" rx="2" ry="2" />
<text  x="443.63" y="1943.5" ></text>
</g>
<g >
<title>_dl_start (236,159 samples, 0.49%)</title><rect x="421.7" y="2061" width="5.7" height="15.0" fill="rgb(249,35,16)" rx="2" ry="2" />
<text  x="424.68" y="2071.5" ></text>
</g>
<g >
<title>ret_from_fork (523,165 samples, 1.08%)</title><rect x="453.6" y="2077" width="12.7" height="15.0" fill="rgb(253,171,46)" rx="2" ry="2" />
<text  x="456.56" y="2087.5" ></text>
</g>
<g >
<title>rcu_idle_exit (206,712 samples, 0.43%)</title><rect x="1164.6" y="1965" width="5.1" height="15.0" fill="rgb(232,141,18)" rx="2" ry="2" />
<text  x="1167.63" y="1975.5" ></text>
</g>
<g >
<title>node::NodeMainInstance::Run (2,502,988 samples, 5.15%)</title><rect x="478.8" y="2029" width="60.7" height="15.0" fill="rgb(241,69,2)" rx="2" ry="2" />
<text  x="481.80" y="2039.5" >node::..</text>
</g>
<g >
<title>asm_exc_page_fault (265,123 samples, 0.55%)</title><rect x="788.3" y="1805" width="6.4" height="15.0" fill="rgb(238,111,52)" rx="2" ry="2" />
<text  x="791.26" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="573" width="34.0" height="15.0" fill="rgb(228,208,23)" rx="2" ry="2" />
<text  x="576.59" y="583.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (548,372 samples, 1.13%)</title><rect x="788.3" y="1949" width="13.3" height="15.0" fill="rgb(245,69,18)" rx="2" ry="2" />
<text  x="791.26" y="1959.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (130,589 samples, 0.27%)</title><rect x="487.6" y="1933" width="3.2" height="15.0" fill="rgb(237,33,5)" rx="2" ry="2" />
<text  x="490.64" y="1943.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (195,165 samples, 0.40%)</title><rect x="842.1" y="1917" width="4.7" height="15.0" fill="rgb(252,83,27)" rx="2" ry="2" />
<text  x="845.11" y="1927.5" ></text>
</g>
<g >
<title>gvfs-afc-volume (107,666 samples, 0.22%)</title><rect x="438.0" y="2093" width="2.6" height="15.0" fill="rgb(217,95,47)" rx="2" ry="2" />
<text  x="441.02" y="2103.5" ></text>
</g>
<g >
<title>node::AsyncWrap::MakeCallback (188,389 samples, 0.39%)</title><rect x="483.1" y="1901" width="4.5" height="15.0" fill="rgb(232,97,36)" rx="2" ry="2" />
<text  x="486.07" y="1911.5" ></text>
</g>
<g >
<title>ret_from_fork (435,851 samples, 0.90%)</title><rect x="443.0" y="2077" width="10.6" height="15.0" fill="rgb(226,29,40)" rx="2" ry="2" />
<text  x="445.98" y="2087.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1661" width="4.4" height="15.0" fill="rgb(249,219,4)" rx="2" ry="2" />
<text  x="496.46" y="1671.5" ></text>
</g>
<g >
<title>__libc_start_call_main (6,879,904 samples, 14.15%)</title><rect x="634.6" y="2077" width="167.0" height="15.0" fill="rgb(242,203,41)" rx="2" ry="2" />
<text  x="637.62" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>__handle_mm_fault (248,357 samples, 0.51%)</title><rect x="511.2" y="1197" width="6.0" height="15.0" fill="rgb(230,9,25)" rx="2" ry="2" />
<text  x="514.17" y="1207.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="493" width="34.0" height="15.0" fill="rgb(213,109,20)" rx="2" ry="2" />
<text  x="576.59" y="503.5" >st..</text>
</g>
<g >
<title>[perf-273018.map] (207,940 samples, 0.43%)</title><rect x="506.1" y="1533" width="5.1" height="15.0" fill="rgb(215,0,31)" rx="2" ry="2" />
<text  x="509.13" y="1543.5" ></text>
</g>
<g >
<title>vma_interval_tree_remove (214,104 samples, 0.44%)</title><rect x="610.3" y="1821" width="5.2" height="15.0" fill="rgb(241,189,27)" rx="2" ry="2" />
<text  x="613.28" y="1831.5" ></text>
</g>
<g >
<title>lapic_next_deadline (183,154 samples, 0.38%)</title><rect x="1174.6" y="1901" width="4.4" height="15.0" fill="rgb(235,205,41)" rx="2" ry="2" />
<text  x="1177.57" y="1911.5" ></text>
</g>
<g >
<title>fput_many (94,163 samples, 0.19%)</title><rect x="649.4" y="1933" width="2.3" height="15.0" fill="rgb(213,52,3)" rx="2" ry="2" />
<text  x="652.37" y="1943.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1629" width="4.4" height="15.0" fill="rgb(253,113,17)" rx="2" ry="2" />
<text  x="496.46" y="1639.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1885" width="33.4" height="15.0" fill="rgb(238,210,7)" rx="2" ry="2" />
<text  x="509.13" y="1895.5" >Bu..</text>
</g>
<g >
<title>__x64_sys_execve (826,107 samples, 1.70%)</title><rect x="610.3" y="2029" width="20.0" height="15.0" fill="rgb(247,124,37)" rx="2" ry="2" />
<text  x="613.28" y="2039.5" ></text>
</g>
<g >
<title>v8::internal::Page::Page (217,015 samples, 0.45%)</title><rect x="534.3" y="1245" width="5.2" height="15.0" fill="rgb(239,145,14)" rx="2" ry="2" />
<text  x="537.28" y="1255.5" ></text>
</g>
<g >
<title>v8::internal::Heap::Scavenge (703,680 samples, 1.45%)</title><rect x="517.2" y="1277" width="17.1" height="15.0" fill="rgb(208,54,3)" rx="2" ry="2" />
<text  x="520.20" y="1287.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (338,906 samples, 0.70%)</title><rect x="493.5" y="1773" width="8.2" height="15.0" fill="rgb(230,126,42)" rx="2" ry="2" />
<text  x="496.46" y="1783.5" ></text>
</g>
<g >
<title>__update_load_avg_se (85,034 samples, 0.17%)</title><rect x="731.7" y="1821" width="2.0" height="15.0" fill="rgb(220,190,44)" rx="2" ry="2" />
<text  x="734.68" y="1831.5" ></text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1453" width="4.5" height="15.0" fill="rgb(237,76,44)" rx="2" ry="2" />
<text  x="486.07" y="1463.5" ></text>
</g>
<g >
<title>__GI___ioctl (1,643,581 samples, 3.38%)</title><rect x="643.5" y="1997" width="39.9" height="15.0" fill="rgb(231,16,46)" rx="2" ry="2" />
<text  x="646.54" y="2007.5" >__G..</text>
</g>
<g >
<title>set_cpus_allowed_common (169,716 samples, 0.35%)</title><rect x="761.7" y="1885" width="4.1" height="15.0" fill="rgb(210,98,14)" rx="2" ry="2" />
<text  x="764.67" y="1895.5" ></text>
</g>
<g >
<title>pick_next_task (97,058 samples, 0.20%)</title><rect x="440.6" y="1997" width="2.4" height="15.0" fill="rgb(218,69,32)" rx="2" ry="2" />
<text  x="443.63" y="2007.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (338,906 samples, 0.70%)</title><rect x="493.5" y="1805" width="8.2" height="15.0" fill="rgb(232,148,34)" rx="2" ry="2" />
<text  x="496.46" y="1815.5" ></text>
</g>
<g >
<title>unlink_chunk.constprop.0 (109,102 samples, 0.22%)</title><rect x="607.6" y="2077" width="2.7" height="15.0" fill="rgb(233,208,51)" rx="2" ry="2" />
<text  x="610.63" y="2087.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (28,406 samples, 0.06%)</title><rect x="652.7" y="1757" width="0.7" height="15.0" fill="rgb(248,90,37)" rx="2" ry="2" />
<text  x="655.69" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1277" width="34.0" height="15.0" fill="rgb(232,224,33)" rx="2" ry="2" />
<text  x="576.59" y="1287.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1821" width="34.0" height="15.0" fill="rgb(229,53,0)" rx="2" ry="2" />
<text  x="576.59" y="1831.5" >st..</text>
</g>
<g >
<title>rest_init (270,598 samples, 0.56%)</title><rect x="1183.4" y="1997" width="6.6" height="15.0" fill="rgb(223,33,19)" rx="2" ry="2" />
<text  x="1186.43" y="2007.5" ></text>
</g>
<g >
<title>__calc_delta (165,195 samples, 0.34%)</title><rect x="705.4" y="1837" width="4.0" height="15.0" fill="rgb(222,204,17)" rx="2" ry="2" />
<text  x="708.36" y="1847.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1645" width="33.4" height="15.0" fill="rgb(208,78,23)" rx="2" ry="2" />
<text  x="509.13" y="1655.5" >[p..</text>
</g>
<g >
<title>v8::internal::BasicMemoryChunk::BasicMemoryChunk (217,015 samples, 0.45%)</title><rect x="534.3" y="1213" width="5.2" height="15.0" fill="rgb(222,160,19)" rx="2" ry="2" />
<text  x="537.28" y="1223.5" ></text>
</g>
<g >
<title>task_work_run (436,883 samples, 0.90%)</title><rect x="427.4" y="1997" width="10.6" height="15.0" fill="rgb(227,179,20)" rx="2" ry="2" />
<text  x="430.41" y="2007.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1677" width="4.4" height="15.0" fill="rgb(247,152,10)" rx="2" ry="2" />
<text  x="496.46" y="1687.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="397" width="34.0" height="15.0" fill="rgb(210,193,15)" rx="2" ry="2" />
<text  x="576.59" y="407.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="733" width="34.0" height="15.0" fill="rgb(218,11,21)" rx="2" ry="2" />
<text  x="576.59" y="743.5" >st..</text>
</g>
<g >
<title>__perf_event_enable (1,266,455 samples, 2.60%)</title><rect x="652.7" y="1789" width="30.7" height="15.0" fill="rgb(210,95,18)" rx="2" ry="2" />
<text  x="655.69" y="1799.5" >__..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="589" width="34.0" height="15.0" fill="rgb(218,163,38)" rx="2" ry="2" />
<text  x="576.59" y="599.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1789" width="34.0" height="15.0" fill="rgb(232,96,37)" rx="2" ry="2" />
<text  x="576.59" y="1799.5" >st..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (365,318 samples, 0.75%)</title><rect x="1174.6" y="1997" width="8.8" height="15.0" fill="rgb(247,91,30)" rx="2" ry="2" />
<text  x="1177.57" y="2007.5" ></text>
</g>
<g >
<title>Builtins_LoadIC (155,783 samples, 0.32%)</title><rect x="497.9" y="1725" width="3.8" height="15.0" fill="rgb(246,31,34)" rx="2" ry="2" />
<text  x="500.90" y="1735.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (270,598 samples, 0.56%)</title><rect x="1183.4" y="1901" width="6.6" height="15.0" fill="rgb(208,110,36)" rx="2" ry="2" />
<text  x="1186.43" y="1911.5" ></text>
</g>
<g >
<title>single_release (207,352 samples, 0.43%)</title><rect x="769.7" y="1853" width="5.0" height="15.0" fill="rgb(216,135,51)" rx="2" ry="2" />
<text  x="772.66" y="1863.5" ></text>
</g>
<g >
<title>unmap_single_vma (185,818 samples, 0.38%)</title><rect x="625.8" y="1837" width="4.5" height="15.0" fill="rgb(248,186,11)" rx="2" ry="2" />
<text  x="628.82" y="1847.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (84,990 samples, 0.17%)</title><rect x="767.6" y="1885" width="2.1" height="15.0" fill="rgb(247,112,11)" rx="2" ry="2" />
<text  x="770.60" y="1895.5" ></text>
</g>
<g >
<title>smp_call_function_single (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1853" width="31.7" height="15.0" fill="rgb(221,156,14)" rx="2" ry="2" />
<text  x="654.65" y="1863.5" >sm..</text>
</g>
<g >
<title>v8::internal::EvacuationAllocator::Allocate (242,503 samples, 0.50%)</title><rect x="528.4" y="1133" width="5.9" height="15.0" fill="rgb(211,60,46)" rx="2" ry="2" />
<text  x="531.39" y="1143.5" ></text>
</g>
<g >
<title>load_balance (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1869" width="33.7" height="15.0" fill="rgb(230,113,37)" rx="2" ry="2" />
<text  x="804.57" y="1879.5" >lo..</text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1533" width="4.5" height="15.0" fill="rgb(244,191,38)" rx="2" ry="2" />
<text  x="486.07" y="1543.5" ></text>
</g>
<g >
<title>mmput (826,107 samples, 1.70%)</title><rect x="610.3" y="1885" width="20.0" height="15.0" fill="rgb(239,3,37)" rx="2" ry="2" />
<text  x="613.28" y="1895.5" ></text>
</g>
<g >
<title>perf (6,879,904 samples, 14.15%)</title><rect x="634.6" y="2093" width="167.0" height="15.0" fill="rgb(251,226,31)" rx="2" ry="2" />
<text  x="637.62" y="2103.5" >perf</text>
</g>
<g >
<title>update_sg_lb_stats (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1821" width="33.7" height="15.0" fill="rgb(248,187,54)" rx="2" ry="2" />
<text  x="804.57" y="1831.5" >up..</text>
</g>
<g >
<title>__fput (207,352 samples, 0.43%)</title><rect x="769.7" y="1869" width="5.0" height="15.0" fill="rgb(215,165,1)" rx="2" ry="2" />
<text  x="772.66" y="1879.5" ></text>
</g>
<g >
<title>cpuidle_enter (13,497,555 samples, 27.76%)</title><rect x="842.1" y="1997" width="327.6" height="15.0" fill="rgb(221,138,3)" rx="2" ry="2" />
<text  x="845.11" y="2007.5" >cpuidle_enter</text>
</g>
<g >
<title>hrtimer_update_next_event (195,165 samples, 0.40%)</title><rect x="842.1" y="1901" width="4.7" height="15.0" fill="rgb(225,160,18)" rx="2" ry="2" />
<text  x="845.11" y="1911.5" ></text>
</g>
<g >
<title>run_builtin (176,965 samples, 0.36%)</title><rect x="630.3" y="2045" width="4.3" height="15.0" fill="rgb(253,53,52)" rx="2" ry="2" />
<text  x="633.33" y="2055.5" ></text>
</g>
<g >
<title>node::InternalMakeCallback (522,029 samples, 1.07%)</title><rect x="493.5" y="1853" width="12.6" height="15.0" fill="rgb(210,153,48)" rx="2" ry="2" />
<text  x="496.46" y="1863.5" ></text>
</g>
<g >
<title>do_pselect.constprop.0 (107,666 samples, 0.22%)</title><rect x="438.0" y="1997" width="2.6" height="15.0" fill="rgb(227,124,35)" rx="2" ry="2" />
<text  x="441.02" y="2007.5" ></text>
</g>
<g >
<title>psi_task_switch (175,914 samples, 0.36%)</title><rect x="634.6" y="1805" width="4.3" height="15.0" fill="rgb(249,191,24)" rx="2" ry="2" />
<text  x="637.62" y="1815.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1549" width="28.3" height="15.0" fill="rgb(245,126,51)" rx="2" ry="2" />
<text  x="514.17" y="1559.5" >[p..</text>
</g>
<g >
<title>do_user_addr_fault (248,357 samples, 0.51%)</title><rect x="511.2" y="1229" width="6.0" height="15.0" fill="rgb(247,117,39)" rx="2" ry="2" />
<text  x="514.17" y="1239.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1005" width="34.0" height="15.0" fill="rgb(214,185,28)" rx="2" ry="2" />
<text  x="576.59" y="1015.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1405" width="34.0" height="15.0" fill="rgb(229,19,36)" rx="2" ry="2" />
<text  x="576.59" y="1415.5" >st..</text>
</g>
<g >
<title>__schedule (175,914 samples, 0.36%)</title><rect x="634.6" y="1821" width="4.3" height="15.0" fill="rgb(231,160,9)" rx="2" ry="2" />
<text  x="637.62" y="1831.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (523,165 samples, 1.08%)</title><rect x="453.6" y="2045" width="12.7" height="15.0" fill="rgb(234,91,24)" rx="2" ry="2" />
<text  x="456.56" y="2055.5" ></text>
</g>
<g >
<title>sched_clock_cpu (175,887 samples, 0.36%)</title><rect x="478.8" y="1741" width="4.3" height="15.0" fill="rgb(238,111,4)" rx="2" ry="2" />
<text  x="481.80" y="1751.5" ></text>
</g>
<g >
<title>[perf-273006.map] (155,783 samples, 0.32%)</title><rect x="497.9" y="1741" width="3.8" height="15.0" fill="rgb(242,176,11)" rx="2" ry="2" />
<text  x="500.90" y="1751.5" ></text>
</g>
<g >
<title>do_poll.constprop.0 (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1997" width="33.7" height="15.0" fill="rgb(228,6,46)" rx="2" ry="2" />
<text  x="804.57" y="2007.5" >do..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1597" width="33.4" height="15.0" fill="rgb(238,178,53)" rx="2" ry="2" />
<text  x="509.13" y="1607.5" >[p..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1677" width="33.4" height="15.0" fill="rgb(224,226,52)" rx="2" ry="2" />
<text  x="509.13" y="1687.5" >[p..</text>
</g>
<g >
<title>ext4_buffered_write_iter (548,372 samples, 1.13%)</title><rect x="788.3" y="1837" width="13.3" height="15.0" fill="rgb(214,96,16)" rx="2" ry="2" />
<text  x="791.26" y="1847.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (436,883 samples, 0.90%)</title><rect x="427.4" y="2045" width="10.6" height="15.0" fill="rgb(226,146,27)" rx="2" ry="2" />
<text  x="430.41" y="2055.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1693" width="4.4" height="15.0" fill="rgb(214,63,38)" rx="2" ry="2" />
<text  x="496.46" y="1703.5" ></text>
</g>
<g >
<title>v8::Function::Call (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1949" width="33.4" height="15.0" fill="rgb(244,47,14)" rx="2" ry="2" />
<text  x="509.13" y="1959.5" >v8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1805" width="34.0" height="15.0" fill="rgb(251,70,10)" rx="2" ry="2" />
<text  x="576.59" y="1815.5" >st..</text>
</g>
<g >
<title>schedule (175,887 samples, 0.36%)</title><rect x="478.8" y="1853" width="4.3" height="15.0" fill="rgb(233,2,14)" rx="2" ry="2" />
<text  x="481.80" y="1863.5" ></text>
</g>
<g >
<title>cpu_startup_entry (14,140,122 samples, 29.08%)</title><rect x="840.3" y="2045" width="343.1" height="15.0" fill="rgb(247,15,11)" rx="2" ry="2" />
<text  x="843.30" y="2055.5" >cpu_startup_entry</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_lookahead (1,402,957 samples, 2.89%)</title><rect x="573.6" y="61" width="34.0" height="15.0" fill="rgb(213,131,53)" rx="2" ry="2" />
<text  x="576.59" y="71.5" >st..</text>
</g>
<g >
<title>newidle_balance (523,165 samples, 1.08%)</title><rect x="453.6" y="1949" width="12.7" height="15.0" fill="rgb(253,72,4)" rx="2" ry="2" />
<text  x="456.56" y="1959.5" ></text>
</g>
<g >
<title>update_load_avg (435,851 samples, 0.90%)</title><rect x="443.0" y="1917" width="10.6" height="15.0" fill="rgb(243,143,53)" rx="2" ry="2" />
<text  x="445.98" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1693" width="34.0" height="15.0" fill="rgb(211,119,45)" rx="2" ry="2" />
<text  x="576.59" y="1703.5" >st..</text>
</g>
<g >
<title>wall_seconds (10,930,347 samples, 22.48%)</title><rect x="141.0" y="2029" width="265.2" height="15.0" fill="rgb(241,72,43)" rx="2" ry="2" />
<text  x="143.99" y="2039.5" >wall_seconds</text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (1,238,049 samples, 2.55%)</title><rect x="653.4" y="1741" width="30.0" height="15.0" fill="rgb(229,180,43)" rx="2" ry="2" />
<text  x="656.38" y="1751.5" >in..</text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (3,553,638 samples, 7.31%)</title><rect x="683.4" y="1997" width="86.3" height="15.0" fill="rgb(228,187,26)" rx="2" ry="2" />
<text  x="686.43" y="2007.5" >sched_seta..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1709" width="33.4" height="15.0" fill="rgb(230,93,19)" rx="2" ry="2" />
<text  x="509.13" y="1719.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1165" width="34.0" height="15.0" fill="rgb(238,69,14)" rx="2" ry="2" />
<text  x="576.59" y="1175.5" >st..</text>
</g>
<g >
<title>node::InternalCallbackScope::Close (338,906 samples, 0.70%)</title><rect x="493.5" y="1837" width="8.2" height="15.0" fill="rgb(254,117,39)" rx="2" ry="2" />
<text  x="496.46" y="1847.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1773" width="33.4" height="15.0" fill="rgb(210,165,16)" rx="2" ry="2" />
<text  x="509.13" y="1783.5" >[p..</text>
</g>
<g >
<title>cmd_record (6,879,904 samples, 14.15%)</title><rect x="634.6" y="2029" width="167.0" height="15.0" fill="rgb(227,114,36)" rx="2" ry="2" />
<text  x="637.62" y="2039.5" >cmd_record</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="797" width="34.0" height="15.0" fill="rgb(222,119,29)" rx="2" ry="2" />
<text  x="576.59" y="807.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1325" width="34.0" height="15.0" fill="rgb(224,93,26)" rx="2" ry="2" />
<text  x="576.59" y="1335.5" >st..</text>
</g>
<g >
<title>[perf-273018.map] (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1533" width="28.3" height="15.0" fill="rgb(243,31,44)" rx="2" ry="2" />
<text  x="514.17" y="1543.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1037" width="34.0" height="15.0" fill="rgb(225,108,23)" rx="2" ry="2" />
<text  x="576.59" y="1047.5" >st..</text>
</g>
<g >
<title>kthread (97,058 samples, 0.20%)</title><rect x="440.6" y="2061" width="2.4" height="15.0" fill="rgb(223,226,7)" rx="2" ry="2" />
<text  x="443.63" y="2071.5" ></text>
</g>
<g >
<title>v8::internal::MemoryAllocator::AllocatePage (217,015 samples, 0.45%)</title><rect x="534.3" y="1261" width="5.2" height="15.0" fill="rgb(231,207,24)" rx="2" ry="2" />
<text  x="537.28" y="1271.5" ></text>
</g>
<g >
<title>pick_next_task (523,165 samples, 1.08%)</title><rect x="453.6" y="1997" width="12.7" height="15.0" fill="rgb(237,68,40)" rx="2" ry="2" />
<text  x="456.56" y="2007.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (176,965 samples, 0.36%)</title><rect x="630.3" y="1933" width="4.3" height="15.0" fill="rgb(228,227,40)" rx="2" ry="2" />
<text  x="633.33" y="1943.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (281,374 samples, 0.58%)</title><rect x="774.7" y="1965" width="6.8" height="15.0" fill="rgb(213,186,39)" rx="2" ry="2" />
<text  x="777.69" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1341" width="34.0" height="15.0" fill="rgb(228,141,24)" rx="2" ry="2" />
<text  x="576.59" y="1351.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="93" width="34.0" height="15.0" fill="rgb(207,199,8)" rx="2" ry="2" />
<text  x="576.59" y="103.5" >st..</text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (183,123 samples, 0.38%)</title><rect x="501.7" y="1773" width="4.4" height="15.0" fill="rgb(251,52,50)" rx="2" ry="2" />
<text  x="504.68" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="381" width="34.0" height="15.0" fill="rgb(224,175,35)" rx="2" ry="2" />
<text  x="576.59" y="391.5" >st..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1965" width="33.7" height="15.0" fill="rgb(226,195,12)" rx="2" ry="2" />
<text  x="804.57" y="1975.5" >sc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1773" width="34.0" height="15.0" fill="rgb(215,77,1)" rx="2" ry="2" />
<text  x="576.59" y="1783.5" >st..</text>
</g>
<g >
<title>pick_next_task_fair (175,887 samples, 0.36%)</title><rect x="478.8" y="1805" width="4.3" height="15.0" fill="rgb(247,23,11)" rx="2" ry="2" />
<text  x="481.80" y="1815.5" ></text>
</g>
<g >
<title>ret_from_fork (97,058 samples, 0.20%)</title><rect x="440.6" y="2077" width="2.4" height="15.0" fill="rgb(207,147,2)" rx="2" ry="2" />
<text  x="443.63" y="2087.5" ></text>
</g>
<g >
<title>perf_ioctl (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1933" width="31.7" height="15.0" fill="rgb(209,69,18)" rx="2" ry="2" />
<text  x="654.65" y="1943.5" >pe..</text>
</g>
<g >
<title>v8::internal::Heap::IterateRoots (234,937 samples, 0.48%)</title><rect x="522.7" y="1245" width="5.7" height="15.0" fill="rgb(252,155,54)" rx="2" ry="2" />
<text  x="525.69" y="1255.5" ></text>
</g>
<g >
<title>__cond_resched (133,601 samples, 0.27%)</title><rect x="754.3" y="1837" width="3.3" height="15.0" fill="rgb(235,188,0)" rx="2" ry="2" />
<text  x="757.34" y="1847.5" ></text>
</g>
<g >
<title>uv__async_io.part.1 (188,389 samples, 0.39%)</title><rect x="483.1" y="1965" width="4.5" height="15.0" fill="rgb(224,29,2)" rx="2" ry="2" />
<text  x="486.07" y="1975.5" ></text>
</g>
<g >
<title>__wait_for_common (175,914 samples, 0.36%)</title><rect x="634.6" y="1853" width="4.3" height="15.0" fill="rgb(229,88,49)" rx="2" ry="2" />
<text  x="637.62" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1389" width="34.0" height="15.0" fill="rgb(248,3,31)" rx="2" ry="2" />
<text  x="576.59" y="1399.5" >st..</text>
</g>
<g >
<title>uv__read (631,131 samples, 1.30%)</title><rect x="490.8" y="1949" width="15.3" height="15.0" fill="rgb(251,8,32)" rx="2" ry="2" />
<text  x="493.81" y="1959.5" ></text>
</g>
<g >
<title>record__mmap_read_evlist.constprop.0 (1,107,692 samples, 2.28%)</title><rect x="774.7" y="2013" width="26.9" height="15.0" fill="rgb(254,40,14)" rx="2" ry="2" />
<text  x="777.69" y="2023.5" >r..</text>
</g>
<g >
<title>dequeue_entity (1,334,582 samples, 2.74%)</title><rect x="701.4" y="1853" width="32.3" height="15.0" fill="rgb(243,118,3)" rx="2" ry="2" />
<text  x="704.36" y="1863.5" >de..</text>
</g>
<g >
<title>tick_program_event (183,154 samples, 0.38%)</title><rect x="1174.6" y="1933" width="4.4" height="15.0" fill="rgb(236,207,17)" rx="2" ry="2" />
<text  x="1177.57" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="717" width="34.0" height="15.0" fill="rgb(243,175,1)" rx="2" ry="2" />
<text  x="576.59" y="727.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1133" width="34.0" height="15.0" fill="rgb(208,199,5)" rx="2" ry="2" />
<text  x="576.59" y="1143.5" >st..</text>
</g>
<g >
<title>ext4_block_write_begin (283,249 samples, 0.58%)</title><rect x="794.7" y="1789" width="6.9" height="15.0" fill="rgb(226,29,38)" rx="2" ry="2" />
<text  x="797.70" y="1799.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="2013" width="34.0" height="15.0" fill="rgb(245,73,28)" rx="2" ry="2" />
<text  x="576.59" y="2023.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="349" width="34.0" height="15.0" fill="rgb(253,213,26)" rx="2" ry="2" />
<text  x="576.59" y="359.5" >st..</text>
</g>
<g >
<title>v8::internal::Builtin_HandleApiCall (188,389 samples, 0.39%)</title><rect x="483.1" y="1741" width="4.5" height="15.0" fill="rgb(213,96,53)" rx="2" ry="2" />
<text  x="486.07" y="1751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="813" width="34.0" height="15.0" fill="rgb(234,48,18)" rx="2" ry="2" />
<text  x="576.59" y="823.5" >st..</text>
</g>
<g >
<title>v8::internal::Builtin_JsonStringify (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1469" width="28.3" height="15.0" fill="rgb(232,86,3)" rx="2" ry="2" />
<text  x="514.17" y="1479.5" >v8..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (195,165 samples, 0.40%)</title><rect x="842.1" y="1933" width="4.7" height="15.0" fill="rgb(241,34,36)" rx="2" ry="2" />
<text  x="845.11" y="1943.5" ></text>
</g>
<g >
<title>tick_nohz_stop_tick (365,318 samples, 0.75%)</title><rect x="1174.6" y="1981" width="8.8" height="15.0" fill="rgb(212,201,8)" rx="2" ry="2" />
<text  x="1177.57" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="333" width="34.0" height="15.0" fill="rgb(253,224,37)" rx="2" ry="2" />
<text  x="576.59" y="343.5" >st..</text>
</g>
<g >
<title>v8::internal::IncrementalStringBuilder::Extend (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1405" width="28.3" height="15.0" fill="rgb(233,47,19)" rx="2" ry="2" />
<text  x="514.17" y="1415.5" >v8..</text>
</g>
<g >
<title>do_syscall_64 (367,641 samples, 0.76%)</title><rect x="634.6" y="1965" width="8.9" height="15.0" fill="rgb(219,144,9)" rx="2" ry="2" />
<text  x="637.62" y="1975.5" ></text>
</g>
<g >
<title>search_binary_handler (826,107 samples, 1.70%)</title><rect x="610.3" y="1949" width="20.0" height="15.0" fill="rgb(223,215,22)" rx="2" ry="2" />
<text  x="613.28" y="1959.5" ></text>
</g>
<g >
<title>__schedule (133,601 samples, 0.27%)</title><rect x="754.3" y="1821" width="3.3" height="15.0" fill="rgb(249,55,1)" rx="2" ry="2" />
<text  x="757.34" y="1831.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1469" width="34.0" height="15.0" fill="rgb(231,131,30)" rx="2" ry="2" />
<text  x="576.59" y="1479.5" >st..</text>
</g>
<g >
<title>v8::internal::Execution::Call (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1933" width="33.4" height="15.0" fill="rgb(205,184,9)" rx="2" ry="2" />
<text  x="509.13" y="1943.5" >v8..</text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1565" width="4.5" height="15.0" fill="rgb(242,72,37)" rx="2" ry="2" />
<text  x="486.07" y="1575.5" ></text>
</g>
<g >
<title>exc_page_fault (281,374 samples, 0.58%)</title><rect x="774.7" y="1949" width="6.8" height="15.0" fill="rgb(228,80,48)" rx="2" ry="2" />
<text  x="777.69" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1213" width="34.0" height="15.0" fill="rgb(207,163,31)" rx="2" ry="2" />
<text  x="576.59" y="1223.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1373" width="34.0" height="15.0" fill="rgb(238,69,21)" rx="2" ry="2" />
<text  x="576.59" y="1383.5" >st..</text>
</g>
<g >
<title>v8::internal::JsonStringifier::Serialize_&lt;false&gt; (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1437" width="28.3" height="15.0" fill="rgb(234,87,23)" rx="2" ry="2" />
<text  x="514.17" y="1447.5" >v8..</text>
</g>
<g >
<title>v8::internal::JsonStringify (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1453" width="28.3" height="15.0" fill="rgb(237,207,52)" rx="2" ry="2" />
<text  x="514.17" y="1463.5" >v8..</text>
</g>
<g >
<title>[chase] (436,167 samples, 0.90%)</title><rect x="119.9" y="2029" width="10.6" height="15.0" fill="rgb(231,209,18)" rx="2" ry="2" />
<text  x="122.93" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="285" width="34.0" height="15.0" fill="rgb(242,219,52)" rx="2" ry="2" />
<text  x="576.59" y="295.5" >st..</text>
</g>
<g >
<title>exit_to_user_mode_loop (207,352 samples, 0.43%)</title><rect x="769.7" y="1917" width="5.0" height="15.0" fill="rgb(205,11,32)" rx="2" ry="2" />
<text  x="772.66" y="1927.5" ></text>
</g>
<g >
<title>v8::internal::Execution::TryRunMicrotasks (188,389 samples, 0.39%)</title><rect x="483.1" y="1677" width="4.5" height="15.0" fill="rgb(206,77,25)" rx="2" ry="2" />
<text  x="486.07" y="1687.5" ></text>
</g>
<g >
<title>v8::internal::SharedFunctionInfo::DebugNameCStr (183,123 samples, 0.38%)</title><rect x="501.7" y="1613" width="4.4" height="15.0" fill="rgb(209,142,40)" rx="2" ry="2" />
<text  x="504.68" y="1623.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1581" width="34.0" height="15.0" fill="rgb(211,23,19)" rx="2" ry="2" />
<text  x="576.59" y="1591.5" >st..</text>
</g>
<g >
<title>__handle_mm_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1133" width="5.2" height="15.0" fill="rgb(209,158,11)" rx="2" ry="2" />
<text  x="537.28" y="1143.5" ></text>
</g>
<g >
<title>irq_enter_rcu (205,906 samples, 0.42%)</title><rect x="835.3" y="2077" width="5.0" height="15.0" fill="rgb(219,135,22)" rx="2" ry="2" />
<text  x="838.31" y="2087.5" ></text>
</g>
<g >
<title>tick_sched_timer (42,868 samples, 0.09%)</title><rect x="651.7" y="1741" width="1.0" height="15.0" fill="rgb(227,219,51)" rx="2" ry="2" />
<text  x="654.65" y="1751.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,502,988 samples, 5.15%)</title><rect x="478.8" y="2077" width="60.7" height="15.0" fill="rgb(216,4,41)" rx="2" ry="2" />
<text  x="481.80" y="2087.5" >__libc..</text>
</g>
<g >
<title>bprm_execve.part.0 (176,965 samples, 0.36%)</title><rect x="630.3" y="1901" width="4.3" height="15.0" fill="rgb(234,124,4)" rx="2" ry="2" />
<text  x="633.33" y="1911.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::InvokeWithTryCatch (188,389 samples, 0.39%)</title><rect x="483.1" y="1661" width="4.5" height="15.0" fill="rgb(230,84,27)" rx="2" ry="2" />
<text  x="486.07" y="1671.5" ></text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamAlloc (109,102 samples, 0.22%)</title><rect x="490.8" y="1933" width="2.7" height="15.0" fill="rgb(206,52,28)" rx="2" ry="2" />
<text  x="493.81" y="1943.5" ></text>
</g>
<g >
<title>remove_vma (226,115 samples, 0.47%)</title><rect x="615.5" y="1853" width="5.5" height="15.0" fill="rgb(254,93,45)" rx="2" ry="2" />
<text  x="618.48" y="1863.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (74,399 samples, 0.15%)</title><rect x="765.8" y="1885" width="1.8" height="15.0" fill="rgb(237,210,48)" rx="2" ry="2" />
<text  x="768.79" y="1895.5" ></text>
</g>
<g >
<title>handle_mm_fault (248,357 samples, 0.51%)</title><rect x="511.2" y="1213" width="6.0" height="15.0" fill="rgb(245,158,7)" rx="2" ry="2" />
<text  x="514.17" y="1223.5" ></text>
</g>
<g >
<title>ctx_resched (1,266,455 samples, 2.60%)</title><rect x="652.7" y="1773" width="30.7" height="15.0" fill="rgb(232,176,54)" rx="2" ry="2" />
<text  x="655.69" y="1783.5" >ct..</text>
</g>
<g >
<title>asm_exc_page_fault (277,946 samples, 0.57%)</title><rect x="781.5" y="1949" width="6.8" height="15.0" fill="rgb(246,180,24)" rx="2" ry="2" />
<text  x="784.52" y="1959.5" ></text>
</g>
<g >
<title>perf_mmap__consume (281,374 samples, 0.58%)</title><rect x="774.7" y="1981" width="6.8" height="15.0" fill="rgb(230,108,24)" rx="2" ry="2" />
<text  x="777.69" y="1991.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,868 samples, 0.09%)</title><rect x="651.7" y="1805" width="1.0" height="15.0" fill="rgb(213,0,24)" rx="2" ry="2" />
<text  x="654.65" y="1815.5" ></text>
</g>
<g >
<title>pick_next_task_fair (97,058 samples, 0.20%)</title><rect x="440.6" y="1981" width="2.4" height="15.0" fill="rgb(219,35,13)" rx="2" ry="2" />
<text  x="443.63" y="1991.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (217,015 samples, 0.45%)</title><rect x="534.3" y="1069" width="5.2" height="15.0" fill="rgb(232,38,48)" rx="2" ry="2" />
<text  x="537.28" y="1079.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (97,058 samples, 0.20%)</title><rect x="440.6" y="1901" width="2.4" height="15.0" fill="rgb(212,9,4)" rx="2" ry="2" />
<text  x="443.63" y="1911.5" ></text>
</g>
<g >
<title>_perf_ioctl (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1917" width="31.7" height="15.0" fill="rgb(239,92,20)" rx="2" ry="2" />
<text  x="654.65" y="1927.5" >_p..</text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1469" width="4.5" height="15.0" fill="rgb(225,224,13)" rx="2" ry="2" />
<text  x="486.07" y="1479.5" ></text>
</g>
<g >
<title>dequeue_entity (79,241 samples, 0.16%)</title><rect x="689.3" y="1869" width="2.0" height="15.0" fill="rgb(235,56,49)" rx="2" ry="2" />
<text  x="692.33" y="1879.5" ></text>
</g>
<g >
<title>wait_for_completion (175,914 samples, 0.36%)</title><rect x="634.6" y="1869" width="4.3" height="15.0" fill="rgb(220,93,35)" rx="2" ry="2" />
<text  x="637.62" y="1879.5" ></text>
</g>
<g >
<title>cpuidle_enter (270,598 samples, 0.56%)</title><rect x="1183.4" y="1933" width="6.6" height="15.0" fill="rgb(239,10,16)" rx="2" ry="2" />
<text  x="1186.43" y="1943.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (191,727 samples, 0.39%)</title><rect x="638.9" y="1949" width="4.6" height="15.0" fill="rgb(250,76,12)" rx="2" ry="2" />
<text  x="641.89" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1677" width="34.0" height="15.0" fill="rgb(235,56,6)" rx="2" ry="2" />
<text  x="576.59" y="1687.5" >st..</text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1549" width="4.5" height="15.0" fill="rgb(239,192,51)" rx="2" ry="2" />
<text  x="486.07" y="1559.5" ></text>
</g>
<g >
<title>__libc_start_call_main (16,965,058 samples, 34.89%)</title><rect x="10.0" y="2077" width="411.7" height="15.0" fill="rgb(216,60,41)" rx="2" ry="2" />
<text  x="13.00" y="2087.5" >__libc_start_call_main</text>
</g>
<g >
<title>schedule (97,058 samples, 0.20%)</title><rect x="440.6" y="2029" width="2.4" height="15.0" fill="rgb(214,138,30)" rx="2" ry="2" />
<text  x="443.63" y="2039.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::JobTask::Run (242,503 samples, 0.50%)</title><rect x="528.4" y="1213" width="5.9" height="15.0" fill="rgb(215,197,26)" rx="2" ry="2" />
<text  x="531.39" y="1223.5" ></text>
</g>
<g >
<title>__schedule (97,058 samples, 0.20%)</title><rect x="440.6" y="2013" width="2.4" height="15.0" fill="rgb(218,109,47)" rx="2" ry="2" />
<text  x="443.63" y="2023.5" ></text>
</g>
<g >
<title>__evlist__disable.constprop.0 (367,641 samples, 0.76%)</title><rect x="634.6" y="2013" width="8.9" height="15.0" fill="rgb(246,177,2)" rx="2" ry="2" />
<text  x="637.62" y="2023.5" ></text>
</g>
<g >
<title>psi_task_switch (133,601 samples, 0.27%)</title><rect x="754.3" y="1805" width="3.3" height="15.0" fill="rgb(212,189,5)" rx="2" ry="2" />
<text  x="757.34" y="1815.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (283,249 samples, 0.58%)</title><rect x="794.7" y="1805" width="6.9" height="15.0" fill="rgb(211,130,52)" rx="2" ry="2" />
<text  x="797.70" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1021" width="34.0" height="15.0" fill="rgb(250,11,29)" rx="2" ry="2" />
<text  x="576.59" y="1031.5" >st..</text>
</g>
<g >
<title>dequeue_task_fair (1,999,769 samples, 4.11%)</title><rect x="691.3" y="1869" width="48.5" height="15.0" fill="rgb(223,34,40)" rx="2" ry="2" />
<text  x="694.25" y="1879.5" >dequ..</text>
</g>
<g >
<title>perf_mmap__push (1,107,692 samples, 2.28%)</title><rect x="774.7" y="1997" width="26.9" height="15.0" fill="rgb(239,81,25)" rx="2" ry="2" />
<text  x="777.69" y="2007.5" >p..</text>
</g>
<g >
<title>find_busiest_group (523,165 samples, 1.08%)</title><rect x="453.6" y="1917" width="12.7" height="15.0" fill="rgb(213,2,52)" rx="2" ry="2" />
<text  x="456.56" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1709" width="34.0" height="15.0" fill="rgb(247,183,4)" rx="2" ry="2" />
<text  x="576.59" y="1719.5" >st..</text>
</g>
<g >
<title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::NewRawOneByteString (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1389" width="28.3" height="15.0" fill="rgb(220,221,11)" rx="2" ry="2" />
<text  x="514.17" y="1399.5" >v8..</text>
</g>
<g >
<title>move_queued_task (517,110 samples, 1.06%)</title><rect x="466.3" y="1997" width="12.5" height="15.0" fill="rgb(232,130,46)" rx="2" ry="2" />
<text  x="469.26" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1149" width="34.0" height="15.0" fill="rgb(236,31,50)" rx="2" ry="2" />
<text  x="576.59" y="1159.5" >st..</text>
</g>
<g >
<title>node::Environment::RunTimers (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1965" width="33.4" height="15.0" fill="rgb(206,115,33)" rx="2" ry="2" />
<text  x="509.13" y="1975.5" >no..</text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1725" width="4.4" height="15.0" fill="rgb(209,13,49)" rx="2" ry="2" />
<text  x="496.46" y="1735.5" ></text>
</g>
<g >
<title>propagate_entity_cfs_rq (435,851 samples, 0.90%)</title><rect x="443.0" y="1933" width="10.6" height="15.0" fill="rgb(217,166,11)" rx="2" ry="2" />
<text  x="445.98" y="1943.5" ></text>
</g>
<g >
<title>exc_page_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1181" width="5.2" height="15.0" fill="rgb(240,210,50)" rx="2" ry="2" />
<text  x="537.28" y="1191.5" ></text>
</g>
<g >
<title>v8::internal::JsonStringifier::SerializeString (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1421" width="28.3" height="15.0" fill="rgb(219,190,22)" rx="2" ry="2" />
<text  x="514.17" y="1431.5" >v8..</text>
</g>
<g >
<title>v8::internal::ScavengerCollector::JobTask::ProcessItems (242,503 samples, 0.50%)</title><rect x="528.4" y="1197" width="5.9" height="15.0" fill="rgb(215,115,51)" rx="2" ry="2" />
<text  x="531.39" y="1207.5" ></text>
</g>
<g >
<title>unmap_page_range (185,818 samples, 0.38%)</title><rect x="625.8" y="1821" width="4.5" height="15.0" fill="rgb(253,166,45)" rx="2" ry="2" />
<text  x="628.82" y="1831.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1917" width="33.4" height="15.0" fill="rgb(228,215,42)" rx="2" ry="2" />
<text  x="509.13" y="1927.5" >v8..</text>
</g>
<g >
<title>node::ThreadPoolWork::ScheduleWork (188,389 samples, 0.39%)</title><rect x="483.1" y="1933" width="4.5" height="15.0" fill="rgb(224,117,26)" rx="2" ry="2" />
<text  x="486.07" y="1943.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::JobTask::ConcurrentScavengePages (242,503 samples, 0.50%)</title><rect x="528.4" y="1181" width="5.9" height="15.0" fill="rgb(247,83,49)" rx="2" ry="2" />
<text  x="531.39" y="1191.5" ></text>
</g>
<g >
<title>swapper (14,616,626 samples, 30.06%)</title><rect x="835.3" y="2093" width="354.7" height="15.0" fill="rgb(228,214,5)" rx="2" ry="2" />
<text  x="838.31" y="2103.5" >swapper</text>
</g>
<g >
<title>sudo (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2093" width="33.7" height="15.0" fill="rgb(240,17,1)" rx="2" ry="2" />
<text  x="804.57" y="2103.5" >sudo</text>
</g>
<g >
<title>node::SpinEventLoop (2,502,988 samples, 5.15%)</title><rect x="478.8" y="2013" width="60.7" height="15.0" fill="rgb(210,26,1)" rx="2" ry="2" />
<text  x="481.80" y="2023.5" >node::..</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (188,389 samples, 0.39%)</title><rect x="483.1" y="1821" width="4.5" height="15.0" fill="rgb(240,167,30)" rx="2" ry="2" />
<text  x="486.07" y="1831.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (183,154 samples, 0.38%)</title><rect x="1174.6" y="1949" width="4.4" height="15.0" fill="rgb(211,29,4)" rx="2" ry="2" />
<text  x="1177.57" y="1959.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1501" width="34.0" height="15.0" fill="rgb(239,194,24)" rx="2" ry="2" />
<text  x="576.59" y="1511.5" >st..</text>
</g>
<g >
<title>newidle_balance (175,887 samples, 0.36%)</title><rect x="478.8" y="1789" width="4.3" height="15.0" fill="rgb(212,52,51)" rx="2" ry="2" />
<text  x="481.80" y="1799.5" ></text>
</g>
<g >
<title>switch_fpu_return (191,727 samples, 0.39%)</title><rect x="638.9" y="1917" width="4.6" height="15.0" fill="rgb(248,41,28)" rx="2" ry="2" />
<text  x="641.89" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1885" width="34.0" height="15.0" fill="rgb(233,187,54)" rx="2" ry="2" />
<text  x="576.59" y="1895.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="205" width="34.0" height="15.0" fill="rgb(214,182,32)" rx="2" ry="2" />
<text  x="576.59" y="215.5" >st..</text>
</g>
<g >
<title>do_user_addr_fault (281,374 samples, 0.58%)</title><rect x="774.7" y="1933" width="6.8" height="15.0" fill="rgb(249,31,30)" rx="2" ry="2" />
<text  x="777.69" y="1943.5" ></text>
</g>
<g >
<title>do_select (107,666 samples, 0.22%)</title><rect x="438.0" y="1965" width="2.6" height="15.0" fill="rgb(231,11,10)" rx="2" ry="2" />
<text  x="441.02" y="1975.5" ></text>
</g>
<g >
<title>perf-exec (1,003,072 samples, 2.06%)</title><rect x="610.3" y="2093" width="24.3" height="15.0" fill="rgb(251,221,31)" rx="2" ry="2" />
<text  x="613.28" y="2103.5" >p..</text>
</g>
<g >
<title>node::EmitToJSStreamListener::OnStreamRead (522,029 samples, 1.07%)</title><rect x="493.5" y="1901" width="12.6" height="15.0" fill="rgb(216,133,2)" rx="2" ry="2" />
<text  x="496.46" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="957" width="34.0" height="15.0" fill="rgb(248,196,9)" rx="2" ry="2" />
<text  x="576.59" y="967.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1901" width="34.0" height="15.0" fill="rgb(233,116,8)" rx="2" ry="2" />
<text  x="576.59" y="1911.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="829" width="34.0" height="15.0" fill="rgb(217,115,41)" rx="2" ry="2" />
<text  x="576.59" y="839.5" >st..</text>
</g>
<g >
<title>bprm_execve (176,965 samples, 0.36%)</title><rect x="630.3" y="1917" width="4.3" height="15.0" fill="rgb(244,45,13)" rx="2" ry="2" />
<text  x="633.33" y="1927.5" ></text>
</g>
<g >
<title>affine_move_task (306,861 samples, 0.63%)</title><rect x="750.1" y="1885" width="7.5" height="15.0" fill="rgb(233,220,45)" rx="2" ry="2" />
<text  x="753.14" y="1895.5" ></text>
</g>
<g >
<title>exec_binprm (826,107 samples, 1.70%)</title><rect x="610.3" y="1965" width="20.0" height="15.0" fill="rgb(211,77,7)" rx="2" ry="2" />
<text  x="613.28" y="1975.5" ></text>
</g>
<g >
<title>free_pgtables (214,104 samples, 0.44%)</title><rect x="610.3" y="1853" width="5.2" height="15.0" fill="rgb(211,179,31)" rx="2" ry="2" />
<text  x="613.28" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="941" width="34.0" height="15.0" fill="rgb(237,184,36)" rx="2" ry="2" />
<text  x="576.59" y="951.5" >st..</text>
</g>
<g >
<title>task_work_run (207,352 samples, 0.43%)</title><rect x="769.7" y="1901" width="5.0" height="15.0" fill="rgb(251,148,19)" rx="2" ry="2" />
<text  x="772.66" y="1911.5" ></text>
</g>
<g >
<title>idle_cpu (97,058 samples, 0.20%)</title><rect x="440.6" y="1885" width="2.4" height="15.0" fill="rgb(240,207,27)" rx="2" ry="2" />
<text  x="443.63" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1421" width="34.0" height="15.0" fill="rgb(252,220,47)" rx="2" ry="2" />
<text  x="576.59" y="1431.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="237" width="34.0" height="15.0" fill="rgb(227,92,16)" rx="2" ry="2" />
<text  x="576.59" y="247.5" >st..</text>
</g>
<g >
<title>unlink_file_vma (214,104 samples, 0.44%)</title><rect x="610.3" y="1837" width="5.2" height="15.0" fill="rgb(211,43,39)" rx="2" ry="2" />
<text  x="613.28" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="989" width="34.0" height="15.0" fill="rgb(232,90,45)" rx="2" ry="2" />
<text  x="576.59" y="999.5" >st..</text>
</g>
<g >
<title>balance_fair (523,165 samples, 1.08%)</title><rect x="453.6" y="1965" width="12.7" height="15.0" fill="rgb(226,215,0)" rx="2" ry="2" />
<text  x="456.56" y="1975.5" ></text>
</g>
<g >
<title>v8::internal::Compiler::CompileOptimized (183,123 samples, 0.38%)</title><rect x="501.7" y="1661" width="4.4" height="15.0" fill="rgb(213,62,2)" rx="2" ry="2" />
<text  x="504.68" y="1671.5" ></text>
</g>
<g >
<title>__libc_start_call_main (176,965 samples, 0.36%)</title><rect x="630.3" y="2077" width="4.3" height="15.0" fill="rgb(238,132,20)" rx="2" ry="2" />
<text  x="633.33" y="2087.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1869" width="33.4" height="15.0" fill="rgb(227,18,35)" rx="2" ry="2" />
<text  x="509.13" y="1879.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="429" width="34.0" height="15.0" fill="rgb(236,110,38)" rx="2" ry="2" />
<text  x="576.59" y="439.5" >st..</text>
</g>
<g >
<title>wall_seconds (636,675 samples, 1.31%)</title><rect x="406.2" y="2045" width="15.5" height="15.0" fill="rgb(222,82,5)" rx="2" ry="2" />
<text  x="409.23" y="2055.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1901" width="33.7" height="15.0" fill="rgb(219,123,38)" rx="2" ry="2" />
<text  x="804.57" y="1911.5" >pi..</text>
</g>
<g >
<title>[perf-273018.map] (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1517" width="28.3" height="15.0" fill="rgb(239,25,24)" rx="2" ry="2" />
<text  x="514.17" y="1527.5" >[p..</text>
</g>
<g >
<title>main (16,965,058 samples, 34.89%)</title><rect x="10.0" y="2061" width="411.7" height="15.0" fill="rgb(244,130,24)" rx="2" ry="2" />
<text  x="13.00" y="2071.5" >main</text>
</g>
<g >
<title>ksys_write (548,372 samples, 1.13%)</title><rect x="788.3" y="1901" width="13.3" height="15.0" fill="rgb(227,6,28)" rx="2" ry="2" />
<text  x="791.26" y="1911.5" ></text>
</g>
<g >
<title>evlist__prepare_workload (176,965 samples, 0.36%)</title><rect x="630.3" y="2013" width="4.3" height="15.0" fill="rgb(231,58,28)" rx="2" ry="2" />
<text  x="633.33" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1965" width="34.0" height="15.0" fill="rgb(215,84,22)" rx="2" ry="2" />
<text  x="576.59" y="1975.5" >st..</text>
</g>
<g >
<title>quiet_vmstat (182,164 samples, 0.37%)</title><rect x="1179.0" y="1965" width="4.4" height="15.0" fill="rgb(229,136,15)" rx="2" ry="2" />
<text  x="1182.01" y="1975.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1741" width="4.4" height="15.0" fill="rgb(219,28,35)" rx="2" ry="2" />
<text  x="496.46" y="1751.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (523,165 samples, 1.08%)</title><rect x="453.6" y="1885" width="12.7" height="15.0" fill="rgb(205,186,49)" rx="2" ry="2" />
<text  x="456.56" y="1895.5" ></text>
</g>
<g >
<title>[perf-273018.map] (207,940 samples, 0.43%)</title><rect x="506.1" y="1549" width="5.1" height="15.0" fill="rgb(248,43,31)" rx="2" ry="2" />
<text  x="509.13" y="1559.5" ></text>
</g>
<g >
<title>_dl_start_user (236,159 samples, 0.49%)</title><rect x="421.7" y="2077" width="5.7" height="15.0" fill="rgb(227,92,49)" rx="2" ry="2" />
<text  x="424.68" y="2087.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1,238,049 samples, 2.55%)</title><rect x="653.4" y="1757" width="30.0" height="15.0" fill="rgb(230,66,3)" rx="2" ry="2" />
<text  x="656.38" y="1767.5" >x8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1533" width="34.0" height="15.0" fill="rgb(244,92,13)" rx="2" ry="2" />
<text  x="576.59" y="1543.5" >st..</text>
</g>
<g >
<title>perf_event__synthesize_comm (207,352 samples, 0.43%)</title><rect x="769.7" y="2013" width="5.0" height="15.0" fill="rgb(231,226,4)" rx="2" ry="2" />
<text  x="772.66" y="2023.5" ></text>
</g>
<g >
<title>arch_call_rest_init (270,598 samples, 0.56%)</title><rect x="1183.4" y="2013" width="6.6" height="15.0" fill="rgb(235,7,23)" rx="2" ry="2" />
<text  x="1186.43" y="2023.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1853" width="34.0" height="15.0" fill="rgb(254,19,43)" rx="2" ry="2" />
<text  x="576.59" y="1863.5" >st..</text>
</g>
<g >
<title>exec_mmap (826,107 samples, 1.70%)</title><rect x="610.3" y="1901" width="20.0" height="15.0" fill="rgb(220,104,51)" rx="2" ry="2" />
<text  x="613.28" y="1911.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (523,165 samples, 1.08%)</title><rect x="453.6" y="1901" width="12.7" height="15.0" fill="rgb(207,43,21)" rx="2" ry="2" />
<text  x="456.56" y="1911.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1709" width="4.4" height="15.0" fill="rgb(218,227,37)" rx="2" ry="2" />
<text  x="496.46" y="1719.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2061" width="33.7" height="15.0" fill="rgb(236,157,42)" rx="2" ry="2" />
<text  x="804.57" y="2071.5" >en..</text>
</g>
<g >
<title>migration_cpu_stop (435,851 samples, 0.90%)</title><rect x="443.0" y="2013" width="10.6" height="15.0" fill="rgb(216,78,12)" rx="2" ry="2" />
<text  x="445.98" y="2023.5" ></text>
</g>
<g >
<title>v8::Function::Call (338,906 samples, 0.70%)</title><rect x="493.5" y="1821" width="8.2" height="15.0" fill="rgb(243,1,30)" rx="2" ry="2" />
<text  x="496.46" y="1831.5" ></text>
</g>
<g >
<title>epoll_wait (175,887 samples, 0.36%)</title><rect x="478.8" y="1981" width="4.3" height="15.0" fill="rgb(208,6,31)" rx="2" ry="2" />
<text  x="481.80" y="1991.5" ></text>
</g>
<g >
<title>__irqentry_text_end (226,240 samples, 0.47%)</title><rect x="517.2" y="1245" width="5.5" height="15.0" fill="rgb(212,178,53)" rx="2" ry="2" />
<text  x="520.20" y="1255.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (517,110 samples, 1.06%)</title><rect x="466.3" y="2045" width="12.5" height="15.0" fill="rgb(233,40,42)" rx="2" ry="2" />
<text  x="469.26" y="2055.5" ></text>
</g>
<g >
<title>cpuset_cpus_allowed (74,399 samples, 0.15%)</title><rect x="765.8" y="1901" width="1.8" height="15.0" fill="rgb(235,38,10)" rx="2" ry="2" />
<text  x="768.79" y="1911.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (183,123 samples, 0.38%)</title><rect x="501.7" y="1789" width="4.4" height="15.0" fill="rgb(210,49,53)" rx="2" ry="2" />
<text  x="504.68" y="1799.5" ></text>
</g>
<g >
<title>cpu_startup_entry (270,598 samples, 0.56%)</title><rect x="1183.4" y="1981" width="6.6" height="15.0" fill="rgb(211,59,54)" rx="2" ry="2" />
<text  x="1186.43" y="1991.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (195,165 samples, 0.40%)</title><rect x="842.1" y="1965" width="4.7" height="15.0" fill="rgb(242,153,18)" rx="2" ry="2" />
<text  x="845.11" y="1975.5" ></text>
</g>
<g >
<title>__evlist__enable.constprop.0 (5,197,219 samples, 10.69%)</title><rect x="643.5" y="2013" width="126.2" height="15.0" fill="rgb(211,121,6)" rx="2" ry="2" />
<text  x="646.54" y="2023.5" >__evlist__enabl..</text>
</g>
<g >
<title>cpuidle_enter_state (13,497,555 samples, 27.76%)</title><rect x="842.1" y="1981" width="327.6" height="15.0" fill="rgb(235,116,24)" rx="2" ry="2" />
<text  x="845.11" y="1991.5" >cpuidle_enter_state</text>
</g>
<g >
<title>pick_next_task (175,887 samples, 0.36%)</title><rect x="478.8" y="1821" width="4.3" height="15.0" fill="rgb(213,162,26)" rx="2" ry="2" />
<text  x="481.80" y="1831.5" ></text>
</g>
<g >
<title>v8::internal::MemoryChunk::MemoryChunk (217,015 samples, 0.45%)</title><rect x="534.3" y="1229" width="5.2" height="15.0" fill="rgb(243,10,37)" rx="2" ry="2" />
<text  x="537.28" y="1239.5" ></text>
</g>
<g >
<title>v8::internal::Execution::Call (183,123 samples, 0.38%)</title><rect x="501.7" y="1821" width="4.4" height="15.0" fill="rgb(223,138,19)" rx="2" ry="2" />
<text  x="504.68" y="1831.5" ></text>
</g>
<g >
<title>move_queued_task (435,851 samples, 0.90%)</title><rect x="443.0" y="1997" width="10.6" height="15.0" fill="rgb(229,122,17)" rx="2" ry="2" />
<text  x="445.98" y="2007.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="189" width="34.0" height="15.0" fill="rgb(245,88,53)" rx="2" ry="2" />
<text  x="576.59" y="199.5" >st..</text>
</g>
<g >
<title>zap_pte_range (185,818 samples, 0.38%)</title><rect x="625.8" y="1789" width="4.5" height="15.0" fill="rgb(211,213,37)" rx="2" ry="2" />
<text  x="628.82" y="1799.5" ></text>
</g>
<g >
<title>generic_perform_write (548,372 samples, 1.13%)</title><rect x="788.3" y="1821" width="13.3" height="15.0" fill="rgb(217,165,46)" rx="2" ry="2" />
<text  x="791.26" y="1831.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2045" width="33.7" height="15.0" fill="rgb(241,133,14)" rx="2" ry="2" />
<text  x="804.57" y="2055.5" >do..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="893" width="34.0" height="15.0" fill="rgb(208,153,11)" rx="2" ry="2" />
<text  x="576.59" y="903.5" >st..</text>
</g>
<g >
<title>new_sync_write (548,372 samples, 1.13%)</title><rect x="788.3" y="1869" width="13.3" height="15.0" fill="rgb(248,150,13)" rx="2" ry="2" />
<text  x="791.26" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="2077" width="34.0" height="15.0" fill="rgb(208,56,15)" rx="2" ry="2" />
<text  x="576.59" y="2087.5" >st..</text>
</g>
<g >
<title>v8::internal::Heap::PerformGarbageCollection (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1293" width="28.3" height="15.0" fill="rgb(252,164,27)" rx="2" ry="2" />
<text  x="514.17" y="1303.5" >v8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1117" width="34.0" height="15.0" fill="rgb(244,128,24)" rx="2" ry="2" />
<text  x="576.59" y="1127.5" >st..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1837" width="33.4" height="15.0" fill="rgb(206,124,20)" rx="2" ry="2" />
<text  x="509.13" y="1847.5" >[p..</text>
</g>
<g >
<title>update_cfs_group (248,660 samples, 0.51%)</title><rect x="733.7" y="1853" width="6.1" height="15.0" fill="rgb(210,132,12)" rx="2" ry="2" />
<text  x="736.75" y="1863.5" ></text>
</g>
<g >
<title>____fput (207,352 samples, 0.43%)</title><rect x="769.7" y="1885" width="5.0" height="15.0" fill="rgb(208,67,43)" rx="2" ry="2" />
<text  x="772.66" y="1895.5" ></text>
</g>
<g >
<title>newidle_balance (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1885" width="33.7" height="15.0" fill="rgb(231,145,52)" rx="2" ry="2" />
<text  x="804.57" y="1895.5" >ne..</text>
</g>
<g >
<title>kthread (435,851 samples, 0.90%)</title><rect x="443.0" y="2061" width="10.6" height="15.0" fill="rgb(217,84,29)" rx="2" ry="2" />
<text  x="445.98" y="2071.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,521,093 samples, 3.13%)</title><rect x="646.5" y="1981" width="36.9" height="15.0" fill="rgb(228,84,19)" rx="2" ry="2" />
<text  x="649.51" y="1991.5" >ent..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (207,352 samples, 0.43%)</title><rect x="769.7" y="1933" width="5.0" height="15.0" fill="rgb(240,175,40)" rx="2" ry="2" />
<text  x="772.66" y="1943.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="317" width="34.0" height="15.0" fill="rgb(214,159,10)" rx="2" ry="2" />
<text  x="576.59" y="327.5" >st..</text>
</g>
<g >
<title>cpu_stopper_thread (517,110 samples, 1.06%)</title><rect x="466.3" y="2029" width="12.5" height="15.0" fill="rgb(238,132,26)" rx="2" ry="2" />
<text  x="469.26" y="2039.5" ></text>
</g>
<g >
<title>vma_do_fput (226,115 samples, 0.47%)</title><rect x="615.5" y="1837" width="5.5" height="15.0" fill="rgb(215,215,45)" rx="2" ry="2" />
<text  x="618.48" y="1847.5" ></text>
</g>
<g >
<title>main (6,879,904 samples, 14.15%)</title><rect x="634.6" y="2061" width="167.0" height="15.0" fill="rgb(233,111,12)" rx="2" ry="2" />
<text  x="637.62" y="2071.5" >main</text>
</g>
<g >
<title>main (176,965 samples, 0.36%)</title><rect x="630.3" y="2061" width="4.3" height="15.0" fill="rgb(215,99,23)" rx="2" ry="2" />
<text  x="633.33" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="301" width="34.0" height="15.0" fill="rgb(254,144,12)" rx="2" ry="2" />
<text  x="576.59" y="311.5" >st..</text>
</g>
<g >
<title>do_group_exit (436,883 samples, 0.90%)</title><rect x="427.4" y="2029" width="10.6" height="15.0" fill="rgb(246,60,32)" rx="2" ry="2" />
<text  x="430.41" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1309" width="34.0" height="15.0" fill="rgb(239,27,48)" rx="2" ry="2" />
<text  x="576.59" y="1319.5" >st..</text>
</g>
<g >
<title>run_builtin (6,879,904 samples, 14.15%)</title><rect x="634.6" y="2045" width="167.0" height="15.0" fill="rgb(238,67,46)" rx="2" ry="2" />
<text  x="637.62" y="2055.5" >run_builtin</text>
</g>
<g >
<title>pick_next_task (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1917" width="33.7" height="15.0" fill="rgb(240,28,37)" rx="2" ry="2" />
<text  x="804.57" y="1927.5" >pi..</text>
</g>
<g >
<title>Builtins_JSRunMicrotasksEntry (188,389 samples, 0.39%)</title><rect x="483.1" y="1629" width="4.5" height="15.0" fill="rgb(212,145,54)" rx="2" ry="2" />
<text  x="486.07" y="1639.5" ></text>
</g>
<g >
<title>__x64_sys_ppoll (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2029" width="33.7" height="15.0" fill="rgb(206,99,2)" rx="2" ry="2" />
<text  x="804.57" y="2039.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (207,352 samples, 0.43%)</title><rect x="769.7" y="1981" width="5.0" height="15.0" fill="rgb(220,222,44)" rx="2" ry="2" />
<text  x="772.66" y="1991.5" ></text>
</g>
<g >
<title>do_syscall_64 (826,107 samples, 1.70%)</title><rect x="610.3" y="2045" width="20.0" height="15.0" fill="rgb(246,109,5)" rx="2" ry="2" />
<text  x="613.28" y="2055.5" ></text>
</g>
<g >
<title>Builtins_JSEntry (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1901" width="33.4" height="15.0" fill="rgb(238,39,37)" rx="2" ry="2" />
<text  x="509.13" y="1911.5" >Bu..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="781" width="34.0" height="15.0" fill="rgb(229,85,49)" rx="2" ry="2" />
<text  x="576.59" y="791.5" >st..</text>
</g>
<g >
<title>node::Start (2,502,988 samples, 5.15%)</title><rect x="478.8" y="2061" width="60.7" height="15.0" fill="rgb(230,99,51)" rx="2" ry="2" />
<text  x="481.80" y="2071.5" >node::..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1805" width="33.4" height="15.0" fill="rgb(224,9,32)" rx="2" ry="2" />
<text  x="509.13" y="1815.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1949" width="34.0" height="15.0" fill="rgb(232,11,39)" rx="2" ry="2" />
<text  x="576.59" y="1959.5" >st..</text>
</g>
<g >
<title>migration/4 (523,165 samples, 1.08%)</title><rect x="453.6" y="2093" width="12.7" height="15.0" fill="rgb(217,22,14)" rx="2" ry="2" />
<text  x="456.56" y="2103.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (14,410,720 samples, 29.64%)</title><rect x="840.3" y="2077" width="349.7" height="15.0" fill="rgb(253,139,18)" rx="2" ry="2" />
<text  x="843.30" y="2087.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>record__pushfn (826,318 samples, 1.70%)</title><rect x="781.5" y="1981" width="20.1" height="15.0" fill="rgb(220,204,29)" rx="2" ry="2" />
<text  x="784.52" y="1991.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1821" width="33.4" height="15.0" fill="rgb(222,134,8)" rx="2" ry="2" />
<text  x="509.13" y="1831.5" >[p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1101" width="34.0" height="15.0" fill="rgb(227,87,1)" rx="2" ry="2" />
<text  x="576.59" y="1111.5" >st..</text>
</g>
<g >
<title>update_rq_clock (175,887 samples, 0.36%)</title><rect x="478.8" y="1757" width="4.3" height="15.0" fill="rgb(214,44,13)" rx="2" ry="2" />
<text  x="481.80" y="1767.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1581" width="4.4" height="15.0" fill="rgb(217,129,51)" rx="2" ry="2" />
<text  x="496.46" y="1591.5" ></text>
</g>
<g >
<title>__memset_evex_unaligned_erms (248,357 samples, 0.51%)</title><rect x="511.2" y="1277" width="6.0" height="15.0" fill="rgb(211,3,25)" rx="2" ry="2" />
<text  x="514.17" y="1287.5" ></text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (3,553,638 samples, 7.31%)</title><rect x="683.4" y="1949" width="86.3" height="15.0" fill="rgb(214,140,43)" rx="2" ry="2" />
<text  x="686.43" y="1959.5" >__x64_sys_..</text>
</g>
<g >
<title>load_balance (97,058 samples, 0.20%)</title><rect x="440.6" y="1949" width="2.4" height="15.0" fill="rgb(226,25,39)" rx="2" ry="2" />
<text  x="443.63" y="1959.5" ></text>
</g>
<g >
<title>put_prev_task_balance (523,165 samples, 1.08%)</title><rect x="453.6" y="1981" width="12.7" height="15.0" fill="rgb(212,154,16)" rx="2" ry="2" />
<text  x="456.56" y="1991.5" ></text>
</g>
<g >
<title>resched_curr (517,110 samples, 1.06%)</title><rect x="466.3" y="1981" width="12.5" height="15.0" fill="rgb(226,129,19)" rx="2" ry="2" />
<text  x="469.26" y="1991.5" ></text>
</g>
<g >
<title>v8::platform::DefaultJobState::Join (242,503 samples, 0.50%)</title><rect x="528.4" y="1229" width="5.9" height="15.0" fill="rgb(222,193,50)" rx="2" ry="2" />
<text  x="531.39" y="1239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,403,486 samples, 2.89%)</title><rect x="649.4" y="1965" width="34.0" height="15.0" fill="rgb(231,173,31)" rx="2" ry="2" />
<text  x="652.37" y="1975.5" >do..</text>
</g>
<g >
<title>schedule_hrtimeout_range (175,887 samples, 0.36%)</title><rect x="478.8" y="1885" width="4.3" height="15.0" fill="rgb(221,49,36)" rx="2" ry="2" />
<text  x="481.80" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="973" width="34.0" height="15.0" fill="rgb(250,191,27)" rx="2" ry="2" />
<text  x="576.59" y="983.5" >st..</text>
</g>
<g >
<title>all (48,626,691 samples, 100%)</title><rect x="10.0" y="2109" width="1180.0" height="15.0" fill="rgb(247,37,32)" rx="2" ry="2" />
<text  x="13.00" y="2119.5" ></text>
</g>
<g >
<title>__set_cpus_allowed_ptr_locked (175,914 samples, 0.36%)</title><rect x="634.6" y="1901" width="4.3" height="15.0" fill="rgb(233,36,9)" rx="2" ry="2" />
<text  x="637.62" y="1911.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_BuiltinExit (188,389 samples, 0.39%)</title><rect x="483.1" y="1757" width="4.5" height="15.0" fill="rgb(243,116,10)" rx="2" ry="2" />
<text  x="486.07" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="909" width="34.0" height="15.0" fill="rgb(239,31,47)" rx="2" ry="2" />
<text  x="576.59" y="919.5" >st..</text>
</g>
<g >
<title>Builtins_LoadIC (183,123 samples, 0.38%)</title><rect x="493.5" y="1549" width="4.4" height="15.0" fill="rgb(246,94,12)" rx="2" ry="2" />
<text  x="496.46" y="1559.5" ></text>
</g>
<g >
<title>v8::internal::Scavenger::ScavengePage (242,503 samples, 0.50%)</title><rect x="528.4" y="1165" width="5.9" height="15.0" fill="rgb(224,198,43)" rx="2" ry="2" />
<text  x="531.39" y="1175.5" ></text>
</g>
<g >
<title>affine_move_task (175,914 samples, 0.36%)</title><rect x="634.6" y="1885" width="4.3" height="15.0" fill="rgb(238,150,49)" rx="2" ry="2" />
<text  x="637.62" y="1895.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1661" width="34.0" height="15.0" fill="rgb(217,67,8)" rx="2" ry="2" />
<text  x="576.59" y="1671.5" >st..</text>
</g>
<g >
<title>_find_next_bit (182,164 samples, 0.37%)</title><rect x="1179.0" y="1933" width="4.4" height="15.0" fill="rgb(226,90,46)" rx="2" ry="2" />
<text  x="1182.01" y="1943.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (367,641 samples, 0.76%)</title><rect x="634.6" y="1997" width="8.9" height="15.0" fill="rgb(250,25,45)" rx="2" ry="2" />
<text  x="637.62" y="2007.5" ></text>
</g>
<g >
<title>Timer::calibrate (16,328,383 samples, 33.58%)</title><rect x="10.0" y="2045" width="396.2" height="15.0" fill="rgb(230,179,33)" rx="2" ry="2" />
<text  x="13.00" y="2055.5" >Timer::calibrate</text>
</g>
<g >
<title>node::InternalCallbackScope::Close (188,389 samples, 0.39%)</title><rect x="483.1" y="1869" width="4.5" height="15.0" fill="rgb(248,168,10)" rx="2" ry="2" />
<text  x="486.07" y="1879.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1869" width="34.0" height="15.0" fill="rgb(217,154,20)" rx="2" ry="2" />
<text  x="576.59" y="1879.5" >st..</text>
</g>
<g >
<title>migrate_task_rq_fair (435,851 samples, 0.90%)</title><rect x="443.0" y="1965" width="10.6" height="15.0" fill="rgb(237,8,27)" rx="2" ry="2" />
<text  x="445.98" y="1975.5" ></text>
</g>
<g >
<title>v8::internal::SemiSpace::Commit (217,015 samples, 0.45%)</title><rect x="534.3" y="1277" width="5.2" height="15.0" fill="rgb(207,189,12)" rx="2" ry="2" />
<text  x="537.28" y="1287.5" ></text>
</g>
<g >
<title>hrtick_update (86,129 samples, 0.18%)</title><rect x="739.8" y="1869" width="2.1" height="15.0" fill="rgb(211,195,12)" rx="2" ry="2" />
<text  x="742.78" y="1879.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="501.7" y="1757" width="4.4" height="15.0" fill="rgb(212,7,4)" rx="2" ry="2" />
<text  x="504.68" y="1767.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1837" width="33.7" height="15.0" fill="rgb(238,109,34)" rx="2" ry="2" />
<text  x="804.57" y="1847.5" >up..</text>
</g>
<g >
<title>do_syscall_64 (436,883 samples, 0.90%)</title><rect x="427.4" y="2061" width="10.6" height="15.0" fill="rgb(205,71,8)" rx="2" ry="2" />
<text  x="430.41" y="2071.5" ></text>
</g>
<g >
<title>core_sys_select (107,666 samples, 0.22%)</title><rect x="438.0" y="1981" width="2.6" height="15.0" fill="rgb(223,130,19)" rx="2" ry="2" />
<text  x="441.02" y="1991.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (183,123 samples, 0.38%)</title><rect x="501.7" y="1805" width="4.4" height="15.0" fill="rgb(212,134,9)" rx="2" ry="2" />
<text  x="504.68" y="1815.5" ></text>
</g>
<g >
<title>uv_run (2,502,988 samples, 5.15%)</title><rect x="478.8" y="1997" width="60.7" height="15.0" fill="rgb(239,49,5)" rx="2" ry="2" />
<text  x="481.80" y="2007.5" >uv_run</text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::GetOrCompileOptimized (183,123 samples, 0.38%)</title><rect x="501.7" y="1645" width="4.4" height="15.0" fill="rgb(225,144,41)" rx="2" ry="2" />
<text  x="504.68" y="1655.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (13,095,678 samples, 26.93%)</title><rect x="846.8" y="1965" width="317.8" height="15.0" fill="rgb(219,154,26)" rx="2" ry="2" />
<text  x="849.85" y="1975.5" >mwait_idle_with_hints.constprop.0</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="2061" width="34.0" height="15.0" fill="rgb(241,177,36)" rx="2" ry="2" />
<text  x="576.59" y="2071.5" >st..</text>
</g>
<g >
<title>kmem_cache_free (207,352 samples, 0.43%)</title><rect x="769.7" y="1837" width="5.0" height="15.0" fill="rgb(232,210,28)" rx="2" ry="2" />
<text  x="772.66" y="1847.5" ></text>
</g>
<g >
<title>read (130,589 samples, 0.27%)</title><rect x="487.6" y="1949" width="3.2" height="15.0" fill="rgb(230,160,6)" rx="2" ry="2" />
<text  x="490.64" y="1959.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (270,598 samples, 0.56%)</title><rect x="1183.4" y="2061" width="6.6" height="15.0" fill="rgb(240,65,10)" rx="2" ry="2" />
<text  x="1186.43" y="2071.5" ></text>
</g>
<g >
<title>Builtins_AsyncFunctionAwaitResolveClosure (188,389 samples, 0.39%)</title><rect x="483.1" y="1581" width="4.5" height="15.0" fill="rgb(247,70,22)" rx="2" ry="2" />
<text  x="486.07" y="1591.5" ></text>
</g>
<g >
<title>need_update (182,164 samples, 0.37%)</title><rect x="1179.0" y="1949" width="4.4" height="15.0" fill="rgb(206,30,24)" rx="2" ry="2" />
<text  x="1182.01" y="1959.5" ></text>
</g>
<g >
<title>uv__io_poll (950,109 samples, 1.95%)</title><rect x="483.1" y="1981" width="23.0" height="15.0" fill="rgb(250,180,35)" rx="2" ry="2" />
<text  x="486.07" y="1991.5" >u..</text>
</g>
<g >
<title>__GI___libc_write (826,318 samples, 1.70%)</title><rect x="781.5" y="1965" width="20.1" height="15.0" fill="rgb(214,224,4)" rx="2" ry="2" />
<text  x="784.52" y="1975.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="861" width="34.0" height="15.0" fill="rgb(233,28,33)" rx="2" ry="2" />
<text  x="576.59" y="871.5" >st..</text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1597" width="4.4" height="15.0" fill="rgb(213,105,30)" rx="2" ry="2" />
<text  x="496.46" y="1607.5" ></text>
</g>
<g >
<title>ep_poll (175,887 samples, 0.36%)</title><rect x="478.8" y="1901" width="4.3" height="15.0" fill="rgb(215,88,35)" rx="2" ry="2" />
<text  x="481.80" y="1911.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (195,165 samples, 0.40%)</title><rect x="842.1" y="1949" width="4.7" height="15.0" fill="rgb(214,113,1)" rx="2" ry="2" />
<text  x="845.11" y="1959.5" ></text>
</g>
<g >
<title>bprm_execve (826,107 samples, 1.70%)</title><rect x="610.3" y="1997" width="20.0" height="15.0" fill="rgb(244,217,50)" rx="2" ry="2" />
<text  x="613.28" y="2007.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="501.7" y="1741" width="4.4" height="15.0" fill="rgb(238,31,2)" rx="2" ry="2" />
<text  x="504.68" y="1751.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1197" width="34.0" height="15.0" fill="rgb(231,17,12)" rx="2" ry="2" />
<text  x="576.59" y="1207.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="621" width="34.0" height="15.0" fill="rgb(251,11,40)" rx="2" ry="2" />
<text  x="576.59" y="631.5" >st..</text>
</g>
<g >
<title>schedule (523,165 samples, 1.08%)</title><rect x="453.6" y="2029" width="12.7" height="15.0" fill="rgb(241,97,39)" rx="2" ry="2" />
<text  x="456.56" y="2039.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="653" width="34.0" height="15.0" fill="rgb(252,194,23)" rx="2" ry="2" />
<text  x="576.59" y="663.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1549" width="34.0" height="15.0" fill="rgb(207,160,42)" rx="2" ry="2" />
<text  x="576.59" y="1559.5" >st..</text>
</g>
<g >
<title>cpuidle_enter_state (270,598 samples, 0.56%)</title><rect x="1183.4" y="1917" width="6.6" height="15.0" fill="rgb(220,136,52)" rx="2" ry="2" />
<text  x="1186.43" y="1927.5" ></text>
</g>
<g >
<title>generic_exec_single (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1837" width="31.7" height="15.0" fill="rgb(213,45,27)" rx="2" ry="2" />
<text  x="654.65" y="1847.5" >ge..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1229" width="34.0" height="15.0" fill="rgb(206,111,31)" rx="2" ry="2" />
<text  x="576.59" y="1239.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1997" width="34.0" height="15.0" fill="rgb(235,57,51)" rx="2" ry="2" />
<text  x="576.59" y="2007.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,553,638 samples, 7.31%)</title><rect x="683.4" y="1981" width="86.3" height="15.0" fill="rgb(233,119,3)" rx="2" ry="2" />
<text  x="686.43" y="1991.5" >entry_SYSC..</text>
</g>
<g >
<title>sched_setaffinity (3,553,638 samples, 7.31%)</title><rect x="683.4" y="1933" width="86.3" height="15.0" fill="rgb(253,32,23)" rx="2" ry="2" />
<text  x="686.43" y="1943.5" >sched_seta..</text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1565" width="4.4" height="15.0" fill="rgb(235,173,53)" rx="2" ry="2" />
<text  x="496.46" y="1575.5" ></text>
</g>
<g >
<title>v8::internal::SharedFunctionInfo::PassesFilter (183,123 samples, 0.38%)</title><rect x="501.7" y="1629" width="4.4" height="15.0" fill="rgb(227,37,30)" rx="2" ry="2" />
<text  x="504.68" y="1639.5" ></text>
</g>
<g >
<title>put_prev_task_fair (168,477 samples, 0.35%)</title><rect x="757.6" y="1885" width="4.1" height="15.0" fill="rgb(236,47,54)" rx="2" ry="2" />
<text  x="760.59" y="1895.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1613" width="33.4" height="15.0" fill="rgb(229,130,9)" rx="2" ry="2" />
<text  x="509.13" y="1623.5" >[p..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1789" width="33.4" height="15.0" fill="rgb(218,139,38)" rx="2" ry="2" />
<text  x="509.13" y="1799.5" >[p..</text>
</g>
<g >
<title>put_prev_entity (85,005 samples, 0.17%)</title><rect x="746.0" y="1853" width="2.1" height="15.0" fill="rgb(227,46,18)" rx="2" ry="2" />
<text  x="749.01" y="1863.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1725" width="33.4" height="15.0" fill="rgb(232,192,16)" rx="2" ry="2" />
<text  x="509.13" y="1735.5" >[p..</text>
</g>
<g >
<title>vfs_write (548,372 samples, 1.13%)</title><rect x="788.3" y="1885" width="13.3" height="15.0" fill="rgb(249,61,45)" rx="2" ry="2" />
<text  x="791.26" y="1895.5" ></text>
</g>
<g >
<title>__x64_sys_execve (176,965 samples, 0.36%)</title><rect x="630.3" y="1949" width="4.3" height="15.0" fill="rgb(228,195,45)" rx="2" ry="2" />
<text  x="633.33" y="1959.5" ></text>
</g>
<g >
<title>__GI___execve (176,965 samples, 0.36%)</title><rect x="630.3" y="1997" width="4.3" height="15.0" fill="rgb(236,76,9)" rx="2" ry="2" />
<text  x="633.33" y="2007.5" ></text>
</g>
<g >
<title>uv__work_done (188,389 samples, 0.39%)</title><rect x="483.1" y="1949" width="4.5" height="15.0" fill="rgb(248,148,46)" rx="2" ry="2" />
<text  x="486.07" y="1959.5" ></text>
</g>
<g >
<title>sync_regs (236,159 samples, 0.49%)</title><rect x="421.7" y="2045" width="5.7" height="15.0" fill="rgb(250,155,12)" rx="2" ry="2" />
<text  x="424.68" y="2055.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (436,883 samples, 0.90%)</title><rect x="427.4" y="2077" width="10.6" height="15.0" fill="rgb(208,31,3)" rx="2" ry="2" />
<text  x="430.41" y="2087.5" ></text>
</g>
<g >
<title>Builtins_RunMicrotasks (188,389 samples, 0.39%)</title><rect x="483.1" y="1613" width="4.5" height="15.0" fill="rgb(242,155,35)" rx="2" ry="2" />
<text  x="486.07" y="1623.5" ></text>
</g>
<g >
<title>__pselect (107,666 samples, 0.22%)</title><rect x="438.0" y="2061" width="2.6" height="15.0" fill="rgb(233,131,7)" rx="2" ry="2" />
<text  x="441.02" y="2071.5" ></text>
</g>
<g >
<title>ppoll (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2077" width="33.7" height="15.0" fill="rgb(217,153,41)" rx="2" ry="2" />
<text  x="804.57" y="2087.5" >pp..</text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (175,887 samples, 0.36%)</title><rect x="478.8" y="1869" width="4.3" height="15.0" fill="rgb(224,62,29)" rx="2" ry="2" />
<text  x="481.80" y="1879.5" ></text>
</g>
<g >
<title>do_exit (436,883 samples, 0.90%)</title><rect x="427.4" y="2013" width="10.6" height="15.0" fill="rgb(238,17,18)" rx="2" ry="2" />
<text  x="430.41" y="2023.5" ></text>
</g>
<g >
<title>mod_objcg_state (207,352 samples, 0.43%)</title><rect x="769.7" y="1805" width="5.0" height="15.0" fill="rgb(215,40,46)" rx="2" ry="2" />
<text  x="772.66" y="1815.5" ></text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1485" width="4.5" height="15.0" fill="rgb(211,202,5)" rx="2" ry="2" />
<text  x="486.07" y="1495.5" ></text>
</g>
<g >
<title>__wait_for_common (133,601 samples, 0.27%)</title><rect x="754.3" y="1853" width="3.3" height="15.0" fill="rgb(226,188,12)" rx="2" ry="2" />
<text  x="757.34" y="1863.5" ></text>
</g>
<g >
<title>put_prev_task_fair (255,595 samples, 0.53%)</title><rect x="741.9" y="1869" width="6.2" height="15.0" fill="rgb(252,197,40)" rx="2" ry="2" />
<text  x="744.87" y="1879.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1901" width="31.7" height="15.0" fill="rgb(232,196,15)" rx="2" ry="2" />
<text  x="654.65" y="1911.5" >pe..</text>
</g>
<g >
<title>node::LibuvStreamWrap::OnUvRead (522,029 samples, 1.07%)</title><rect x="493.5" y="1917" width="12.6" height="15.0" fill="rgb(231,33,40)" rx="2" ry="2" />
<text  x="496.46" y="1927.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1261" width="34.0" height="15.0" fill="rgb(240,100,15)" rx="2" ry="2" />
<text  x="576.59" y="1271.5" >st..</text>
</g>
<g >
<title>migration/9 (517,110 samples, 1.06%)</title><rect x="466.3" y="2093" width="12.5" height="15.0" fill="rgb(207,193,1)" rx="2" ry="2" />
<text  x="469.26" y="2103.5" ></text>
</g>
<g >
<title>do_sys_poll (1,390,135 samples, 2.86%)</title><rect x="801.6" y="2013" width="33.7" height="15.0" fill="rgb(245,103,20)" rx="2" ry="2" />
<text  x="804.57" y="2023.5" >do..</text>
</g>
<g >
<title>update_curr (81,781 samples, 0.17%)</title><rect x="721.6" y="1837" width="2.0" height="15.0" fill="rgb(248,121,37)" rx="2" ry="2" />
<text  x="724.58" y="1847.5" ></text>
</g>
<g >
<title>find_busiest_group (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1853" width="33.7" height="15.0" fill="rgb(235,158,25)" rx="2" ry="2" />
<text  x="804.57" y="1863.5" >fi..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="77" width="34.0" height="15.0" fill="rgb(242,115,33)" rx="2" ry="2" />
<text  x="576.59" y="87.5" >st..</text>
</g>
<g >
<title>set_task_cpu (435,851 samples, 0.90%)</title><rect x="443.0" y="1981" width="10.6" height="15.0" fill="rgb(254,131,12)" rx="2" ry="2" />
<text  x="445.98" y="1991.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1933" width="34.0" height="15.0" fill="rgb(237,54,54)" rx="2" ry="2" />
<text  x="576.59" y="1943.5" >st..</text>
</g>
<g >
<title>Builtins_BaselineOutOfLinePrologue (183,123 samples, 0.38%)</title><rect x="501.7" y="1709" width="4.4" height="15.0" fill="rgb(211,121,4)" rx="2" ry="2" />
<text  x="504.68" y="1719.5" ></text>
</g>
<g >
<title>event_function (1,266,455 samples, 2.60%)</title><rect x="652.7" y="1805" width="30.7" height="15.0" fill="rgb(236,194,29)" rx="2" ry="2" />
<text  x="655.69" y="1815.5" >ev..</text>
</g>
<g >
<title>do_syscall_64 (207,352 samples, 0.43%)</title><rect x="769.7" y="1965" width="5.0" height="15.0" fill="rgb(240,49,0)" rx="2" ry="2" />
<text  x="772.66" y="1975.5" ></text>
</g>
<g >
<title>update_blocked_averages (175,887 samples, 0.36%)</title><rect x="478.8" y="1773" width="4.3" height="15.0" fill="rgb(207,13,35)" rx="2" ry="2" />
<text  x="481.80" y="1783.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (367,641 samples, 0.76%)</title><rect x="634.6" y="1981" width="8.9" height="15.0" fill="rgb(210,29,22)" rx="2" ry="2" />
<text  x="637.62" y="1991.5" ></text>
</g>
<g >
<title>native_sched_clock (175,887 samples, 0.36%)</title><rect x="478.8" y="1709" width="4.3" height="15.0" fill="rgb(214,13,39)" rx="2" ry="2" />
<text  x="481.80" y="1719.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1741" width="34.0" height="15.0" fill="rgb(209,195,42)" rx="2" ry="2" />
<text  x="576.59" y="1751.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1517" width="34.0" height="15.0" fill="rgb(215,185,19)" rx="2" ry="2" />
<text  x="576.59" y="1527.5" >st..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (83,312 samples, 0.17%)</title><rect x="729.7" y="1821" width="2.0" height="15.0" fill="rgb(232,75,1)" rx="2" ry="2" />
<text  x="732.66" y="1831.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (435,851 samples, 0.90%)</title><rect x="443.0" y="1901" width="10.6" height="15.0" fill="rgb(213,96,35)" rx="2" ry="2" />
<text  x="445.98" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="845" width="34.0" height="15.0" fill="rgb(205,101,4)" rx="2" ry="2" />
<text  x="576.59" y="855.5" >st..</text>
</g>
<g >
<title>worker_thread (97,058 samples, 0.20%)</title><rect x="440.6" y="2045" width="2.4" height="15.0" fill="rgb(250,106,15)" rx="2" ry="2" />
<text  x="443.63" y="2055.5" ></text>
</g>
<g >
<title>schedule (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1949" width="33.7" height="15.0" fill="rgb(252,159,1)" rx="2" ry="2" />
<text  x="804.57" y="1959.5" >sc..</text>
</g>
<g >
<title>do_syscall_64 (175,887 samples, 0.36%)</title><rect x="478.8" y="1949" width="4.3" height="15.0" fill="rgb(245,56,15)" rx="2" ry="2" />
<text  x="481.80" y="1959.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1853" width="33.4" height="15.0" fill="rgb(245,57,29)" rx="2" ry="2" />
<text  x="509.13" y="1863.5" >[p..</text>
</g>
<g >
<title>start_kernel (270,598 samples, 0.56%)</title><rect x="1183.4" y="2029" width="6.6" height="15.0" fill="rgb(242,6,47)" rx="2" ry="2" />
<text  x="1186.43" y="2039.5" ></text>
</g>
<g >
<title>Builtins_CEntry_Return1_DontSaveFPRegs_ArgvOnStack_NoBuiltinExit (183,123 samples, 0.38%)</title><rect x="501.7" y="1693" width="4.4" height="15.0" fill="rgb(241,105,25)" rx="2" ry="2" />
<text  x="504.68" y="1703.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="701" width="34.0" height="15.0" fill="rgb(228,187,54)" rx="2" ry="2" />
<text  x="576.59" y="711.5" >st..</text>
</g>
<g >
<title>ext4_file_write_iter (548,372 samples, 1.13%)</title><rect x="788.3" y="1853" width="13.3" height="15.0" fill="rgb(227,58,32)" rx="2" ry="2" />
<text  x="791.26" y="1863.5" ></text>
</g>
<g >
<title>event_function_call (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1869" width="31.7" height="15.0" fill="rgb(217,154,48)" rx="2" ry="2" />
<text  x="654.65" y="1879.5" >ev..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="445" width="34.0" height="15.0" fill="rgb(230,172,32)" rx="2" ry="2" />
<text  x="576.59" y="455.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1613" width="34.0" height="15.0" fill="rgb(224,216,33)" rx="2" ry="2" />
<text  x="576.59" y="1623.5" >st..</text>
</g>
<g >
<title>v8::internal::PagedSpace::RawRefillLabMain (242,503 samples, 0.50%)</title><rect x="528.4" y="1117" width="5.9" height="15.0" fill="rgb(205,102,47)" rx="2" ry="2" />
<text  x="531.39" y="1127.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="877" width="34.0" height="15.0" fill="rgb(245,105,23)" rx="2" ry="2" />
<text  x="576.59" y="887.5" >st..</text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1501" width="4.5" height="15.0" fill="rgb(237,47,20)" rx="2" ry="2" />
<text  x="486.07" y="1511.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="525" width="34.0" height="15.0" fill="rgb(231,182,39)" rx="2" ry="2" />
<text  x="576.59" y="535.5" >st..</text>
</g>
<g >
<title>clockevents_program_event (183,154 samples, 0.38%)</title><rect x="1174.6" y="1917" width="4.4" height="15.0" fill="rgb(228,100,36)" rx="2" ry="2" />
<text  x="1177.57" y="1927.5" ></text>
</g>
<g >
<title>v8::internal::FactoryBase&lt;v8::internal::Factory&gt;::AllocateRawWithImmortalMap (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1373" width="28.3" height="15.0" fill="rgb(235,204,48)" rx="2" ry="2" />
<text  x="514.17" y="1383.5" >v8..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="141" width="34.0" height="15.0" fill="rgb(237,10,41)" rx="2" ry="2" />
<text  x="576.59" y="151.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1629" width="34.0" height="15.0" fill="rgb(242,21,37)" rx="2" ry="2" />
<text  x="576.59" y="1639.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="557" width="34.0" height="15.0" fill="rgb(218,79,1)" rx="2" ry="2" />
<text  x="576.59" y="567.5" >st..</text>
</g>
<g >
<title>v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath (1,169,052 samples, 2.40%)</title><rect x="511.2" y="1341" width="28.3" height="15.0" fill="rgb(206,165,52)" rx="2" ry="2" />
<text  x="514.17" y="1351.5" >v8..</text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (206,712 samples, 0.43%)</title><rect x="1164.6" y="1949" width="5.1" height="15.0" fill="rgb(242,164,26)" rx="2" ry="2" />
<text  x="1167.63" y="1959.5" ></text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1741" width="33.4" height="15.0" fill="rgb(233,227,8)" rx="2" ry="2" />
<text  x="509.13" y="1751.5" >[p..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (42,868 samples, 0.09%)</title><rect x="651.7" y="1789" width="1.0" height="15.0" fill="rgb(241,224,10)" rx="2" ry="2" />
<text  x="654.65" y="1799.5" ></text>
</g>
<g >
<title>task_rq_lock (84,990 samples, 0.17%)</title><rect x="767.6" y="1901" width="2.1" height="15.0" fill="rgb(251,55,4)" rx="2" ry="2" />
<text  x="770.60" y="1911.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (826,107 samples, 1.70%)</title><rect x="610.3" y="2061" width="20.0" height="15.0" fill="rgb(218,141,31)" rx="2" ry="2" />
<text  x="613.28" y="2071.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1837" width="34.0" height="15.0" fill="rgb(247,72,0)" rx="2" ry="2" />
<text  x="576.59" y="1847.5" >st..</text>
</g>
<g >
<title>__restore_fpregs_from_fpstate (191,727 samples, 0.39%)</title><rect x="638.9" y="1901" width="4.6" height="15.0" fill="rgb(218,137,31)" rx="2" ry="2" />
<text  x="641.89" y="1911.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1645" width="34.0" height="15.0" fill="rgb(227,132,40)" rx="2" ry="2" />
<text  x="576.59" y="1655.5" >st..</text>
</g>
<g >
<title>[perf-273018.map] (1,376,992 samples, 2.83%)</title><rect x="506.1" y="1629" width="33.4" height="15.0" fill="rgb(218,21,9)" rx="2" ry="2" />
<text  x="509.13" y="1639.5" >[p..</text>
</g>
<g >
<title>vm_normal_page (185,818 samples, 0.38%)</title><rect x="625.8" y="1773" width="4.5" height="15.0" fill="rgb(223,207,45)" rx="2" ry="2" />
<text  x="628.82" y="1783.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1485" width="34.0" height="15.0" fill="rgb(230,12,17)" rx="2" ry="2" />
<text  x="576.59" y="1495.5" >st..</text>
</g>
<g >
<title>node (5,418,004 samples, 11.14%)</title><rect x="478.8" y="2093" width="131.5" height="15.0" fill="rgb(227,150,52)" rx="2" ry="2" />
<text  x="481.80" y="2103.5" >node</text>
</g>
<g >
<title>__x64_sys_sched_setaffinity (175,914 samples, 0.36%)</title><rect x="634.6" y="1949" width="4.3" height="15.0" fill="rgb(215,82,45)" rx="2" ry="2" />
<text  x="637.62" y="1959.5" ></text>
</g>
<g >
<title>Builtins_JSEntryTrampoline (338,906 samples, 0.70%)</title><rect x="493.5" y="1757" width="8.2" height="15.0" fill="rgb(223,77,25)" rx="2" ry="2" />
<text  x="496.46" y="1767.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="765" width="34.0" height="15.0" fill="rgb(208,198,43)" rx="2" ry="2" />
<text  x="576.59" y="775.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="925" width="34.0" height="15.0" fill="rgb(216,41,0)" rx="2" ry="2" />
<text  x="576.59" y="935.5" >st..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (107,666 samples, 0.22%)</title><rect x="438.0" y="2045" width="2.6" height="15.0" fill="rgb(233,150,38)" rx="2" ry="2" />
<text  x="441.02" y="2055.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (248,357 samples, 0.51%)</title><rect x="511.2" y="1261" width="6.0" height="15.0" fill="rgb(212,135,5)" rx="2" ry="2" />
<text  x="514.17" y="1271.5" ></text>
</g>
<g >
<title>chase (17,638,100 samples, 36.27%)</title><rect x="10.0" y="2093" width="428.0" height="15.0" fill="rgb(218,183,21)" rx="2" ry="2" />
<text  x="13.00" y="2103.5" >chase</text>
</g>
<g >
<title>wait_for_completion (133,601 samples, 0.27%)</title><rect x="754.3" y="1869" width="3.3" height="15.0" fill="rgb(207,95,24)" rx="2" ry="2" />
<text  x="757.34" y="1879.5" ></text>
</g>
<g >
<title>handle_pte_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1117" width="5.2" height="15.0" fill="rgb(236,181,37)" rx="2" ry="2" />
<text  x="537.28" y="1127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (176,965 samples, 0.36%)</title><rect x="630.3" y="1981" width="4.3" height="15.0" fill="rgb(238,78,52)" rx="2" ry="2" />
<text  x="633.33" y="1991.5" ></text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="493.5" y="1613" width="4.4" height="15.0" fill="rgb(209,191,32)" rx="2" ry="2" />
<text  x="496.46" y="1623.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (42,868 samples, 0.09%)</title><rect x="651.7" y="1757" width="1.0" height="15.0" fill="rgb(239,171,46)" rx="2" ry="2" />
<text  x="654.65" y="1767.5" ></text>
</g>
<g >
<title>error_entry (207,940 samples, 0.43%)</title><rect x="506.1" y="1501" width="5.1" height="15.0" fill="rgb(243,65,11)" rx="2" ry="2" />
<text  x="509.13" y="1511.5" ></text>
</g>
<g >
<title>node::LoadSnapshotDataAndRun (2,502,988 samples, 5.15%)</title><rect x="478.8" y="2045" width="60.7" height="15.0" fill="rgb(251,155,28)" rx="2" ry="2" />
<text  x="481.80" y="2055.5" >node::..</text>
</g>
<g >
<title>search_binary_handler (176,965 samples, 0.36%)</title><rect x="630.3" y="1869" width="4.3" height="15.0" fill="rgb(223,166,23)" rx="2" ry="2" />
<text  x="633.33" y="1879.5" ></text>
</g>
<g >
<title>__cond_resched (175,914 samples, 0.36%)</title><rect x="634.6" y="1837" width="4.3" height="15.0" fill="rgb(218,155,41)" rx="2" ry="2" />
<text  x="637.62" y="1847.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1917" width="34.0" height="15.0" fill="rgb(206,97,45)" rx="2" ry="2" />
<text  x="576.59" y="1927.5" >st..</text>
</g>
<g >
<title>exec_binprm (176,965 samples, 0.36%)</title><rect x="630.3" y="1885" width="4.3" height="15.0" fill="rgb(212,37,32)" rx="2" ry="2" />
<text  x="633.33" y="1895.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (74,576 samples, 0.15%)</title><rect x="840.3" y="1997" width="1.8" height="15.0" fill="rgb(253,162,54)" rx="2" ry="2" />
<text  x="843.30" y="2007.5" ></text>
</g>
<g >
<title>Builtins_PromiseFulfillReactionJob (188,389 samples, 0.39%)</title><rect x="483.1" y="1597" width="4.5" height="15.0" fill="rgb(242,6,10)" rx="2" ry="2" />
<text  x="486.07" y="1607.5" ></text>
</g>
<g >
<title>uv__stream_io (761,720 samples, 1.57%)</title><rect x="487.6" y="1965" width="18.5" height="15.0" fill="rgb(207,96,24)" rx="2" ry="2" />
<text  x="490.64" y="1975.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (217,015 samples, 0.45%)</title><rect x="534.3" y="1085" width="5.2" height="15.0" fill="rgb(233,84,12)" rx="2" ry="2" />
<text  x="537.28" y="1095.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (85,170 samples, 0.18%)</title><rect x="748.1" y="1885" width="2.0" height="15.0" fill="rgb(225,224,18)" rx="2" ry="2" />
<text  x="751.07" y="1895.5" ></text>
</g>
<g >
<title>fput_many (226,115 samples, 0.47%)</title><rect x="615.5" y="1821" width="5.5" height="15.0" fill="rgb(213,191,32)" rx="2" ry="2" />
<text  x="618.48" y="1831.5" ></text>
</g>
<g >
<title>do_idle (270,598 samples, 0.56%)</title><rect x="1183.4" y="1965" width="6.6" height="15.0" fill="rgb(231,72,47)" rx="2" ry="2" />
<text  x="1186.43" y="1975.5" ></text>
</g>
<g >
<title>__sched_setaffinity (175,914 samples, 0.36%)</title><rect x="634.6" y="1917" width="4.3" height="15.0" fill="rgb(242,221,15)" rx="2" ry="2" />
<text  x="637.62" y="1927.5" ></text>
</g>
<g >
<title>malloc (1,402,957 samples, 2.89%)</title><rect x="539.5" y="2077" width="34.1" height="15.0" fill="rgb(228,203,29)" rx="2" ry="2" />
<text  x="542.54" y="2087.5" >ma..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1981" width="33.7" height="15.0" fill="rgb(225,169,10)" rx="2" ry="2" />
<text  x="804.57" y="1991.5" >sc..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="749" width="34.0" height="15.0" fill="rgb(247,192,0)" rx="2" ry="2" />
<text  x="576.59" y="759.5" >st..</text>
</g>
<g >
<title>__schedule (1,390,135 samples, 2.86%)</title><rect x="801.6" y="1933" width="33.7" height="15.0" fill="rgb(249,42,47)" rx="2" ry="2" />
<text  x="804.57" y="1943.5" >__..</text>
</g>
<g >
<title>do_syscall_64 (548,372 samples, 1.13%)</title><rect x="788.3" y="1933" width="13.3" height="15.0" fill="rgb(222,141,10)" rx="2" ry="2" />
<text  x="791.26" y="1943.5" ></text>
</g>
<g >
<title>unmap_vmas (385,888 samples, 0.79%)</title><rect x="621.0" y="1853" width="9.3" height="15.0" fill="rgb(215,148,48)" rx="2" ry="2" />
<text  x="623.96" y="1863.5" ></text>
</g>
<g >
<title>____fput (436,883 samples, 0.90%)</title><rect x="427.4" y="1981" width="10.6" height="15.0" fill="rgb(246,40,43)" rx="2" ry="2" />
<text  x="430.41" y="1991.5" ></text>
</g>
<g >
<title>node::LibuvStreamWrap::ReadStart (522,029 samples, 1.07%)</title><rect x="493.5" y="1933" width="12.6" height="15.0" fill="rgb(229,165,20)" rx="2" ry="2" />
<text  x="496.46" y="1943.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (436,883 samples, 0.90%)</title><rect x="427.4" y="1933" width="10.6" height="15.0" fill="rgb(235,221,33)" rx="2" ry="2" />
<text  x="430.41" y="1943.5" ></text>
</g>
<g >
<title>load_elf_binary (826,107 samples, 1.70%)</title><rect x="610.3" y="1933" width="20.0" height="15.0" fill="rgb(219,60,2)" rx="2" ry="2" />
<text  x="613.28" y="1943.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,553,638 samples, 7.31%)</title><rect x="683.4" y="1965" width="86.3" height="15.0" fill="rgb(205,220,11)" rx="2" ry="2" />
<text  x="686.43" y="1975.5" >do_syscall..</text>
</g>
<g >
<title>Builtins_JSEntry (188,389 samples, 0.39%)</title><rect x="483.1" y="1805" width="4.5" height="15.0" fill="rgb(221,228,43)" rx="2" ry="2" />
<text  x="486.07" y="1815.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="605" width="34.0" height="15.0" fill="rgb(253,181,49)" rx="2" ry="2" />
<text  x="576.59" y="615.5" >st..</text>
</g>
<g >
<title>[perf-272929.map] (183,123 samples, 0.38%)</title><rect x="501.7" y="1725" width="4.4" height="15.0" fill="rgb(226,0,17)" rx="2" ry="2" />
<text  x="504.68" y="1735.5" ></text>
</g>
<g >
<title>[perf-272929.map] (188,389 samples, 0.39%)</title><rect x="483.1" y="1517" width="4.5" height="15.0" fill="rgb(253,110,46)" rx="2" ry="2" />
<text  x="486.07" y="1527.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::Invoke (188,389 samples, 0.39%)</title><rect x="483.1" y="1645" width="4.5" height="15.0" fill="rgb(218,11,31)" rx="2" ry="2" />
<text  x="486.07" y="1655.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1053" width="34.0" height="15.0" fill="rgb(222,99,51)" rx="2" ry="2" />
<text  x="576.59" y="1063.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="157" width="34.0" height="15.0" fill="rgb(226,14,1)" rx="2" ry="2" />
<text  x="576.59" y="167.5" >st..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="125" width="34.0" height="15.0" fill="rgb(231,5,10)" rx="2" ry="2" />
<text  x="576.59" y="135.5" >st..</text>
</g>
<g >
<title>__entry_text_start (122,488 samples, 0.25%)</title><rect x="643.5" y="1981" width="3.0" height="15.0" fill="rgb(208,153,53)" rx="2" ry="2" />
<text  x="646.54" y="1991.5" ></text>
</g>
<g >
<title>native_write_msr (1,238,049 samples, 2.55%)</title><rect x="653.4" y="1725" width="30.0" height="15.0" fill="rgb(222,37,37)" rx="2" ry="2" />
<text  x="656.38" y="1735.5" >na..</text>
</g>
<g >
<title>v8::platform::DefaultJobHandle::Join (242,503 samples, 0.50%)</title><rect x="528.4" y="1245" width="5.9" height="15.0" fill="rgb(228,39,46)" rx="2" ry="2" />
<text  x="531.39" y="1255.5" ></text>
</g>
<g >
<title>Builtins_LoadIC (207,940 samples, 0.43%)</title><rect x="506.1" y="1565" width="5.1" height="15.0" fill="rgb(215,188,45)" rx="2" ry="2" />
<text  x="509.13" y="1575.5" ></text>
</g>
<g >
<title>v8::internal::(anonymous namespace)::IterateObjectCache (234,937 samples, 0.48%)</title><rect x="522.7" y="1229" width="5.7" height="15.0" fill="rgb(222,96,12)" rx="2" ry="2" />
<text  x="525.69" y="1239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (283,249 samples, 0.58%)</title><rect x="794.7" y="1773" width="6.9" height="15.0" fill="rgb(236,49,41)" rx="2" ry="2" />
<text  x="797.70" y="1783.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1197" width="5.2" height="15.0" fill="rgb(249,101,48)" rx="2" ry="2" />
<text  x="537.28" y="1207.5" ></text>
</g>
<g >
<title>__vdso_gettimeofday (431,785 samples, 0.89%)</title><rect x="130.5" y="2029" width="10.5" height="15.0" fill="rgb(231,185,23)" rx="2" ry="2" />
<text  x="133.51" y="2039.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (191,727 samples, 0.39%)</title><rect x="638.9" y="1933" width="4.6" height="15.0" fill="rgb(213,34,30)" rx="2" ry="2" />
<text  x="641.89" y="1943.5" ></text>
</g>
<g >
<title>migration/28 (435,851 samples, 0.90%)</title><rect x="443.0" y="2093" width="10.6" height="15.0" fill="rgb(229,24,28)" rx="2" ry="2" />
<text  x="445.98" y="2103.5" ></text>
</g>
<g >
<title>exc_page_fault (248,357 samples, 0.51%)</title><rect x="511.2" y="1245" width="6.0" height="15.0" fill="rgb(236,156,20)" rx="2" ry="2" />
<text  x="514.17" y="1255.5" ></text>
</g>
<g >
<title>security_file_free (436,883 samples, 0.90%)</title><rect x="427.4" y="1949" width="10.6" height="15.0" fill="rgb(237,172,18)" rx="2" ry="2" />
<text  x="430.41" y="1959.5" ></text>
</g>
<g >
<title>v8::internal::ScavengerCollector::CollectGarbage (703,680 samples, 1.45%)</title><rect x="517.2" y="1261" width="17.1" height="15.0" fill="rgb(251,115,18)" rx="2" ry="2" />
<text  x="520.20" y="1271.5" ></text>
</g>
<g >
<title>__do_set_cpus_allowed (2,589,986 samples, 5.33%)</title><rect x="685.2" y="1885" width="62.9" height="15.0" fill="rgb(247,36,20)" rx="2" ry="2" />
<text  x="688.22" y="1895.5" >__do_s..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_rep_once_more (1,402,957 samples, 2.89%)</title><rect x="573.6" y="1437" width="34.0" height="15.0" fill="rgb(238,162,14)" rx="2" ry="2" />
<text  x="576.59" y="1447.5" >st..</text>
</g>
<g >
<title>v8::internal::Scavenger::ScavengeObject&lt;v8::internal::FullHeapObjectSlot&gt; (242,503 samples, 0.50%)</title><rect x="528.4" y="1149" width="5.9" height="15.0" fill="rgb(249,69,47)" rx="2" ry="2" />
<text  x="531.39" y="1159.5" ></text>
</g>
<g >
<title>handle_mm_fault (217,015 samples, 0.45%)</title><rect x="534.3" y="1149" width="5.2" height="15.0" fill="rgb(221,46,49)" rx="2" ry="2" />
<text  x="537.28" y="1159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (42,868 samples, 0.09%)</title><rect x="651.7" y="1773" width="1.0" height="15.0" fill="rgb(234,1,27)" rx="2" ry="2" />
<text  x="654.65" y="1783.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (217,015 samples, 0.45%)</title><rect x="534.3" y="1053" width="5.2" height="15.0" fill="rgb(237,26,14)" rx="2" ry="2" />
<text  x="537.28" y="1063.5" ></text>
</g>
<g >
<title>v8::Function::Call (188,389 samples, 0.39%)</title><rect x="483.1" y="1853" width="4.5" height="15.0" fill="rgb(245,228,11)" rx="2" ry="2" />
<text  x="486.07" y="1863.5" ></text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="2045" width="34.0" height="15.0" fill="rgb(228,209,9)" rx="2" ry="2" />
<text  x="576.59" y="2055.5" >st..</text>
</g>
<g >
<title>v8::Function::Call (183,123 samples, 0.38%)</title><rect x="501.7" y="1837" width="4.4" height="15.0" fill="rgb(226,128,38)" rx="2" ry="2" />
<text  x="504.68" y="1847.5" ></text>
</g>
<g >
<title>_perf_event_enable (1,309,323 samples, 2.69%)</title><rect x="651.7" y="1885" width="31.7" height="15.0" fill="rgb(231,36,2)" rx="2" ry="2" />
<text  x="654.65" y="1895.5" >_p..</text>
</g>
<g >
<title>std::__detail::_Executor&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt;, std::allocator&lt;std::sub_match&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::string&gt; &gt; &gt;, std::regex_traits&lt;char&gt;, true&gt;::_M_dfs (1,402,957 samples, 2.89%)</title><rect x="573.6" y="253" width="34.0" height="15.0" fill="rgb(245,216,9)" rx="2" ry="2" />
<text  x="576.59" y="263.5" >st..</text>
</g>
<g >
<title>zap_pmd_range.isra.0 (185,818 samples, 0.38%)</title><rect x="625.8" y="1805" width="4.5" height="15.0" fill="rgb(250,62,24)" rx="2" ry="2" />
<text  x="628.82" y="1815.5" ></text>
</g>
</g>
</svg>
